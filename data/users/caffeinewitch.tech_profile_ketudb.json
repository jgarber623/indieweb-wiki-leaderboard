{
  "items": [
    {
      "type": [
        "h-card"
      ],
      "properties": {
        "url": [
          "https://caffeinewitch.tech/profile/ketudb",
          "https://caffeinewitch.tech/profile/ketudb",
          "https://links.kldb.me/",
          "https://github.com/ketudb"
        ],
        "photo": [
          "https://caffeinewitch.tech/file/b787c17e8a12ffeac8a16f236a53cccc/thumb.jpg"
        ],
        "profile": [
          "ketudb"
        ],
        "name": [
          "ketudb"
        ],
        "note": [
          {
            "html": "<div class=\"highlightedText\">\n<p>Infra Witch for <a href=\"https://freedom.press/\" target=\"_blank\">Freedom of the Press Foundation</a>, bad watercolour artist, board gamer, diagnosed caffeine addict, excessive incense user. Nonbinary &amp; intersex spoonie.</p>\n\n<p><b>Pronouns:</b> they/them/their or ey/em/eir</p>\n</div>",
            "value": "Infra Witch for Freedom of the Press Foundation, bad watercolour artist, board gamer, diagnosed caffeine addict, excessive incense user. Nonbinary & intersex spoonie.\n\nPronouns: they/them/their or ey/em/eir"
          }
        ]
      }
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "author": [
          {
            "type": [
              "h-card"
            ],
            "properties": {
              "url": [
                "https://caffeinewitch.tech/profile/ketudb",
                "https://caffeinewitch.tech/profile/ketudb",
                "https://caffeinewitch.tech/profile/ketudb"
              ],
              "photo": [
                "https://caffeinewitch.tech/file/b787c17e8a12ffeac8a16f236a53cccc/thumb.jpg"
              ],
              "name": [
                "ketudb"
              ]
            },
            "value": "ketudb"
          }
        ],
        "url": [
          "https://caffeinewitch.tech/2020/07/qubes-tails-persistence-hax"
        ],
        "published": [
          "2020-07-17T00:37:38+00:00"
        ],
        "name": [
          "Qubes + Tails + Persistence = Hax"
        ],
        "content": [
          {
            "html": "<p>For the large part, when I want to use Tor, I run Whonix - because it's integrated very nicely into <a href=\"https://qubes-os.org/\" target=\"_blank\">Qubes</a> which is my daily driver for both work and personal projects. But, lately, <a href=\"https://micahflee.com/2020/06/is-the-whonix-project-run-by-fascists/\">Whonix is looking awfully fashy</a>. Maybe they're not, but if they're not, they're certainly not <a href=\"https://forums.whonix.org/t/whonix-is-loosing-their-antifacist-supporters/9844/25\" target=\"_blank\">handling it well</a>.</p>\n<p>And if you know me, that's reason enough to want to delete my Whonix templates &amp; virtual machines. But I needed a good alternative - <a href=\"https://tails.boum.org/\" target=\"_blank\">Tails</a> is my goto when I'm not using Qubes. Tails has <a href=\"https://www.qubes-os.org/doc/tails/\" target=\"_blank\">never worked quite right</a> on Qubes - requiring you to boot from a CD image or external USB disk. Typically, persistence hasn't worked, which isn't great for a Tor-based workstation VM.</p>\n<p>I've now managed to get a fully virtualised (as in, no USB disk) Tails AppVM on Qubes with persistence. All of this was tested against Qubes R4.0 with Tails 4.8</p>\n<p>Unfortunately, there are still caveats - the most important of which is that it requires manual network configuration each boot. If you make careful use of the pause/continue AppVM functions in Qubes, you can make this significantly less annoying. The setup process to get this working at all is also a bit of a pain in the ass.</p>\n<h1>Making it go.</h1>\n<h2 id=\"Qubes+Tails+Persistence=Hax-Caveats\"><span style=\"color: #003366;\">Caveats</span></h2>\n<ul>\n<li>\n<span style=\"color: #003366;\">You'll need to set an administration password every boot so that you can configure the IP address.</span>\n<ul>\n<li><span style=\"color: #003366;\">You can probably due the same through the GUI without an administration password, but I haven't tested this.</span></li>\n</ul>\n</li>\n<li>\n<span style=\"color: #003366;\">The networking will need to be manually configured each boot</span>\n<ul>\n<li><span style=\"color: #003366;\">Qubes doesn't use DHCP, but rather a set of custom scripts to dynamically pass in network configuration. Tails doesn't support this out of the box. We may be able to script this, but I need to investigate how static the IP and gateway addresses are in Qubes.</span></li>\n</ul>\n</li>\n<li><span style=\"color: #003366;\">You're running it in a virtual machine, so it's gonna whine about that.</span></li>\n<li><span style=\"color: #003366;\">It can't support Qubes' seamless mode, so the entire Tails desktop will be run in it's own window.</span></li>\n</ul>\n<h2 id=\"Qubes+Tails+Persistence=Hax-CreateaTAILSUSBdevice\">Create a Tails USB device</h2>\n<p>Use <em>dd</em> to create a Tails USB disk on a different computer.</p>\n<ol>\n<li>Use a different computer</li>\n<li>Download the <a class=\"external-link\" href=\"https://tails.boum.org/install/download/index.en.html\" rel=\"nofollow\">Tails USB image</a>\n</li>\n<li>Insert a USB disk</li>\n<li>Write it to the USB device with <code>sudo </code><code>dd if=tails-amd64-[version].img of=/dev/[USB device] bs=1M status=progress</code>\n<ul>\n<li>Substitute <em>[ version ]</em> above with the Tails version - e.g. <em>4.8</em>\n</li>\n<li>Substitue <em>[ USB device ] </em> above with the USB device of your thumbdrive - <code>sudo dmesg </code>can help you find out, usually something like <code>sdb</code>\n</li>\n</ul>\n</li>\n<li>Remove the USB disk once it's done.</li>\n</ol>\n<h2 id=\"Qubes+Tails+Persistence=Hax-CreateastandaloneHVMvirtualmachine\">Create a standalone HVM virtual machine</h2>\n<p>Create the AppVM, making sure to allocate it enough RAM to run, and enough disk space (<em>Private storage</em> in Qubes terms) that your persistent partition will be comfortable.</p>\n<ol>\n<li>In Qube manager, create a new Qube.</li>\n<li>Name it (<code>tails</code>), it give it a colour.</li>\n<li>For <em>Networking</em> choose your <em>sys-firewall</em> Qube.</li>\n<li>Set type to <em>Empty standalone</em>\n</li>\n<li>Untick <em>install system from device</em>\n</li>\n<li>Tick <em>launch settings after creation</em>\n</li>\n<li>Create it and the settings dialogue should open</li>\n<li>The <em>Private storage max size</em> option will dictate how big your persistent storage is. I kept mine at 2GB - beware, changing it later will be a headache.</li>\n<li>Under the <em>Advanced </em>tab, bump <em>Initial memory</em> to at least 1GB - I recommend a minimum of 2. Too low and Tails will fail to boot with a GDM error.</li>\n<li>Save that.</li>\n</ol>\n<p>(Now comes the fun part)</p>\n<h2 id=\"Qubes+Tails+Persistence=Hax-Wedgetailsintothediskimagebyabusingddandqvm-run\">Wedge tails into the disk image by abusing <em>dd</em> and <em>qvm-run</em>\n</h2>\n<p>Run <em>dd</em> on <em>sys-usb </em>via <em>qvm-run</em> to dump out the Tails USB disk, pipe it to <em>dd</em> in dom0 and have it write it to the LVM partition that serves as your Tails AppVM's root disk.</p>\n<ol>\n<li>Insert the USB disk that you wrote Tails to earlier.</li>\n<li>Use <code>qvm-block</code> to find the device's name in your sys-usb qube - usually something like <code>sda</code>\n</li>\n<li>Open a dom0 terminal</li>\n<li>We're going to image the Tails disk into the LVM partition that serves as the VM's boot disk: <code>qvm-run --pass-io --user=root sys-usb \"dd if=/dev/[USB Device]\" | sudo dd of=/dev/qubes_dom0/vm-tails-root-snap status=progress</code>\n<ul>\n<li>Substitue <em>[ USB device ]</em> above with the device's name from step 2.</li>\n<li>If you <em>didn't</em> name your Qube <code>tails </code>when you created the Qube, the <code>of=</code> parameter above will be different - <code>tails</code> would be replaced with the qube name.</li>\n</ul>\n</li>\n<li>You can remove the USB disk once it's done.</li>\n</ol>\n<h2 id=\"Qubes+Tails+Persistence=Hax-Getitbooted\">Get it booted</h2>\n<p>Start the AppVM, and edit the boot configuration so that it no longer believes it's on live media and doesn't support persistence. Add in a sudo password in the Tails greeter and go to the desktop.</p>\n<ol>\n<li>Start the Qube. It'll display the boot process in a window.</li>\n<li>When the <code>SYSLINUX</code> boot menu appears, press tab before the timer counts down</li>\n<li>Use your home/end/delete/backspace keys &amp; your arrow keys to find and delete the <code>live-media=</code> parameter (<em>and it's value!</em>) as well as the <code>nopersistence</code> option.</li>\n<li>Press enter to finish booting.</li>\n<li>When you get to the TAILS greeter, click the <em>+ </em>at the bottom and choose <em>Administration password</em>. Enter a password twice and click <em>Add</em>.</li>\n<li>Click <em>Start</em><em> Tails</em> to get to the Tails desktop.</li>\n<li>Ignore the rather obvious <em>virtual machine warning.</em>\n</li>\n</ol>\n<h2 id=\"Qubes+Tails+Persistence=Hax-Fixthebootoptionspermanently\">Fix the boot options permanently</h2>\n<p>Remount the partition with the syslinux boot options as read-write, edit the boot options to make the manual boot option changes from the last section permanent. Save &amp; remount as read-only again.</p>\n<ol>\n<li>From the <em>Applications</em> menu, <em>System tools</em> submenu, open a <em>Terminal</em>.</li>\n<li>Run <code>sudo su </code>to become an administrator and enter the administration password from step 5 of the boot process.</li>\n<li>Run <code>mount -o remount,rw /lib/live/mount/medium</code>\n</li>\n<li>Run <code>nano /lib/live/mount/medium/syslinux/live.cfg</code>\n</li>\n<li>Use your home/end/delete/backspace keys &amp; your arrow keys to find and delete the <code>live-media=</code> parameter (<em>and it's value!</em>) as well as the <code>nopersistence</code> option. These will appear twice in the file.</li>\n<li>Press <code>ctrl+o </code>then <code>enter</code> to save and <code>ctrl+x </code>to exit.</li>\n<li>Run <code>nano /lib/live/mount/medium/syslinux/live64.cfg</code>\n</li>\n<li>Repeat steps 5 &amp; 6, then continue to 9.</li>\n<li>Run <code>mount -o remount,ro /lib/live/mount/medium</code>\n</li>\n</ol>\n<h2 id=\"Qubes+Tails+Persistence=Hax-Creatingapersistentvolumethehardway\">Creating a persistent volume the hard way</h2>\n<p>Create a GPT volume label your <em>Private storage</em> disk (<em>xvdb</em>), and then create a partition to fill it. Encrypt it, then format the encrypted partition as ext4. Note that the volume name matters (<em>TailsData</em>). Then mount the new partition, copy the home directory structure in, set all the ownership and permissions where they need to be, and create the persistent storage configuration file.</p>\n<ol>\n<li>From the <em>Applications</em> menu, <em>System tools</em> submenu, open a <em>Terminal</em>.</li>\n<li>Partition your disk by typing and pressing enter after each:\n<ol>\n<li><code>sudo su</code></li>\n<li>enter your administration password from step 5 of the booting process</li>\n<li><code>parted /dev/xvdb</code></li>\n<li><code>mklabel gpt</code></li>\n<li><code>q </code></li>\n<li><code>parted -a optimal /dev/xvdb mkpart TailsData ext4 0% 100%</code></li>\n</ol>\n</li>\n<li>Create the encrypted partition by typing and press enter after each:<br><em>(If you get an error on step <strong>e</strong> below, shut down Tails, restart the Qube and follow steps <strong>5-7</strong> on the <strong>booting process</strong> above. Repeat steps <strong>a</strong> and <strong>b</strong> below, then re-attempt step <strong>e</strong>)</em><br><ol>\n<li><code>cryptsetup luksFormat /dev/xvdb1</code></li>\n<li><code>YES</code></li>\n<li>enter your chosen disk encryption password</li>\n<li>enter it again</li>\n<li><code>cryptsetup luksOpen /dev/xvdb1 tails_persist</code></li>\n<li>enter your disk encryption password again</li>\n<li><code>mkfs.ext4 /dev/disk/by-id/dm-name-tails_persist</code></li>\n</ol>\n</li>\n<li>Setup the persistent storage and permissions:\n<ol>\n<li><code>mount /dev/disk/by-id/dm-name-tails_persist /mnt</code></li>\n<li><code>cd /mnt</code></li>\n<li><code>chown root:root .</code></li>\n<li><code>chmod 0775 .</code></li>\n<li><code>setfacl -m -u tails-persistence-setup:rwx .</code></li>\n<li><code>touch persistence.conf</code></li>\n<li><code>chown tails-persistence-setup:tails-persistence-setup persistence.conf</code></li>\n<li><code>chmod 0600 persistence.conf</code></li>\n<li><code>cp -r /etc/skel amnesia</code></li>\n<li><code>chown -R amnesia:amnesia amnesia</code></li>\n<li><code>echo \"/home/amnesia source=amnesia\" &gt; persistence.conf</code></li>\n<li><code>cd</code></li>\n<li><code>umount /mnt</code></li>\n<li><code>cryptsetup luksClose tails_persist</code></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"Qubes+Tails+Persistence=Hax-Firstrealboot\">First real boot</h2>\n<p><strong>This will have to be done each time you boot your Tails VM.</strong></p>\n<p>Restart your AppVM, and you should be able to decrypt the persistent volume in the greeter. You'll also want to set the sudo password again, while you're here.</p>\n<ol>\n<li>Shut down Tails again, and then restart the Qube</li>\n<li>When it boots, the greeter should detect the persistent volume - enter your disk encryption password and click <em>Unlock</em>.</li>\n<li>When you get to the TAILS greeter, click the <em>+ </em>at the bottom and choose <em>Administration password</em>. Enter a password twice and click <em>Add</em>.</li>\n<li>Click <em>Start</em><em> Tails</em> to get to the TAILS desktop.</li>\n</ol>\n<h2 id=\"Qubes+Tails+Persistence=Hax-Manuallyconfigurenetworking\">Manually configure networking</h2>\n<p><strong>Unfortunately, this will also have to be done each time you boot your Tails VM.</strong></p>\n<p>Qubes doesn't use DHCP on it's internal networking, but rather passes network config values around with <a href=\"https://www.qubes-os.org/doc/vm-interface/\" target=\"_blank\">qubesdb</a>. Unfortunately, we can't use that inside Tails right now, so we'll need to login and manually configure networking.</p>\n<ol>\n<li>In Qube Manager, open the settings for the Tails qube and move it to one side where you can see the <em>Networking</em> section.</li>\n<li>In Tails, from the <em>Applications</em> menu, <em>System tools</em> submenu, open a <em>Terminal</em>.</li>\n<li>In the terminal, type:\n<ol>\n<li><code>sudo su</code></li>\n<li>enter your administration password from step 3 of the <em>First real boot</em> process above.</li>\n<li>\n<code>ip addr add 10.137.0.xx/32 dev eth0</code>\n<ol>\n<li>substitute <code>10.137.0.xx</code> with the <em>IP</em> value from the Qube settings.</li>\n</ol>\n</li>\n<li>\n<code>ip route add 10.137.0.yy/32 dev eth0</code>\n<ol>\n<li>substitute <code>10.137.0.yy</code> with the <em>Gateway</em> value from the Qube settings.</li>\n</ol>\n</li>\n<li>\n<code>ip route add 0.0.0.0/0 via 10.137.0.yy dev eth0</code>\n<ol>\n<li>substitute <code>10.137.0.yy</code> with the <em>Gateway</em> value from the Qube settings.</li>\n</ol>\n</li>\n<li><code>exit</code></li>\n<li><code>exit</code></li>\n</ol>\n</li>\n<li>At this stage, the terminal will disappear, and you'll get a notification saying you're connected to Tor.</li>\n<li>Congrats.</li>\n</ol>\n<p> </p>",
            "value": "For the large part, when I want to use Tor, I run Whonix - because it's integrated very nicely into Qubes which is my daily driver for both work and personal projects. But, lately, Whonix is looking awfully fashy. Maybe they're not, but if they're not, they're certainly not handling it well.And if you know me, that's reason enough to want to delete my Whonix templates & virtual machines. But I needed a good alternative - Tails is my goto when I'm not using Qubes. Tails has never worked quite right on Qubes - requiring you to boot from a CD image or external USB disk. Typically, persistence hasn't worked, which isn't great for a Tor-based workstation VM.I've now managed to get a fully virtualised (as in, no USB disk) Tails AppVM on Qubes with persistence. All of this was tested against Qubes R4.0 with Tails 4.8Unfortunately, there are still caveats - the most important of which is that it requires manual network configuration each boot. If you make careful use of the pause/continue AppVM functions in Qubes, you can make this significantly less annoying. The setup process to get this working at all is also a bit of a pain in the ass.Making it go.CaveatsYou'll need to set an administration password every boot so that you can configure the IP address.\nYou can probably due the same through the GUI without an administration password, but I haven't tested this.\n\nThe networking will need to be manually configured each boot\nQubes doesn't use DHCP, but rather a set of custom scripts to dynamically pass in network configuration. Tails doesn't support this out of the box. We may be able to script this, but I need to investigate how static the IP and gateway addresses are in Qubes.\n\nYou're running it in a virtual machine, so it's gonna whine about that.\nIt can't support Qubes' seamless mode, so the entire Tails desktop will be run in it's own window.\nCreate a Tails USB deviceUse dd to create a Tails USB disk on a different computer.Use a different computer\nDownload the Tails USB image\nInsert a USB disk\nWrite it to the USB device with sudo dd if=tails-amd64-[version].img of=/dev/[USB device] bs=1M status=progress\nSubstitute [ version ] above with the Tails version - e.g. 4.8\nSubstitue [ USB device ]  above with the USB device of your thumbdrive - sudo dmesg can help you find out, usually something like sdb\n\nRemove the USB disk once it's done.\nCreate a standalone HVM virtual machineCreate the AppVM, making sure to allocate it enough RAM to run, and enough disk space (Private storage in Qubes terms) that your persistent partition will be comfortable.In Qube manager, create a new Qube.\nName it (tails), it give it a colour.\nFor Networking choose your sys-firewall Qube.\nSet type to Empty standalone\nUntick install system from device\nTick launch settings after creation\nCreate it and the settings dialogue should open\nThe Private storage max size option will dictate how big your persistent storage is. I kept mine at 2GB - beware, changing it later will be a headache.\nUnder the Advanced tab, bump Initial memory to at least 1GB - I recommend a minimum of 2. Too low and Tails will fail to boot with a GDM error.\nSave that.\n(Now comes the fun part)Wedge tails into the disk image by abusing dd and qvm-runRun dd on sys-usb via qvm-run to dump out the Tails USB disk, pipe it to dd in dom0 and have it write it to the LVM partition that serves as your Tails AppVM's root disk.Insert the USB disk that you wrote Tails to earlier.\nUse qvm-block to find the device's name in your sys-usb qube - usually something like sda\nOpen a dom0 terminal\nWe're going to image the Tails disk into the LVM partition that serves as the VM's boot disk: qvm-run --pass-io --user=root sys-usb \"dd if=/dev/[USB Device]\" | sudo dd of=/dev/qubes_dom0/vm-tails-root-snap status=progress\nSubstitue [ USB device ] above with the device's name from step 2.\nIf you didn't name your Qube tails when you created the Qube, the of= parameter above will be different - tails would be replaced with the qube name.\n\nYou can remove the USB disk once it's done.\nGet it bootedStart the AppVM, and edit the boot configuration so that it no longer believes it's on live media and doesn't support persistence. Add in a sudo password in the Tails greeter and go to the desktop.Start the Qube. It'll display the boot process in a window.\nWhen the SYSLINUX boot menu appears, press tab before the timer counts down\nUse your home/end/delete/backspace keys & your arrow keys to find and delete the live-media= parameter (and it's value!) as well as the nopersistence option.\nPress enter to finish booting.\nWhen you get to the TAILS greeter, click the + at the bottom and choose Administration password. Enter a password twice and click Add.\nClick Start Tails to get to the Tails desktop.\nIgnore the rather obvious virtual machine warning.\nFix the boot options permanentlyRemount the partition with the syslinux boot options as read-write, edit the boot options to make the manual boot option changes from the last section permanent. Save & remount as read-only again.From the Applications menu, System tools submenu, open a Terminal.\nRun sudo su to become an administrator and enter the administration password from step 5 of the boot process.\nRun mount -o remount,rw /lib/live/mount/medium\nRun nano /lib/live/mount/medium/syslinux/live.cfg\nUse your home/end/delete/backspace keys & your arrow keys to find and delete the live-media= parameter (and it's value!) as well as the nopersistence option. These will appear twice in the file.\nPress ctrl+o then enter to save and ctrl+x to exit.\nRun nano /lib/live/mount/medium/syslinux/live64.cfg\nRepeat steps 5 & 6, then continue to 9.\nRun mount -o remount,ro /lib/live/mount/medium\nCreating a persistent volume the hard wayCreate a GPT volume label your Private storage disk (xvdb), and then create a partition to fill it. Encrypt it, then format the encrypted partition as ext4. Note that the volume name matters (TailsData). Then mount the new partition, copy the home directory structure in, set all the ownership and permissions where they need to be, and create the persistent storage configuration file.From the Applications menu, System tools submenu, open a Terminal.\nPartition your disk by typing and pressing enter after each:\nsudo su\nenter your administration password from step 5 of the booting process\nparted /dev/xvdb\nmklabel gpt\nq \nparted -a optimal /dev/xvdb mkpart TailsData ext4 0% 100%\n\nCreate the encrypted partition by typing and press enter after each:(If you get an error on step e below, shut down Tails, restart the Qube and follow steps 5-7 on the booting process above. Repeat steps a and b below, then re-attempt step e)cryptsetup luksFormat /dev/xvdb1\nYES\nenter your chosen disk encryption password\nenter it again\ncryptsetup luksOpen /dev/xvdb1 tails_persist\nenter your disk encryption password again\nmkfs.ext4 /dev/disk/by-id/dm-name-tails_persist\n\nSetup the persistent storage and permissions:\nmount /dev/disk/by-id/dm-name-tails_persist /mnt\ncd /mnt\nchown root:root .\nchmod 0775 .\nsetfacl -m -u tails-persistence-setup:rwx .\ntouch persistence.conf\nchown tails-persistence-setup:tails-persistence-setup persistence.conf\nchmod 0600 persistence.conf\ncp -r /etc/skel amnesia\nchown -R amnesia:amnesia amnesia\necho \"/home/amnesia source=amnesia\" > persistence.conf\ncd\numount /mnt\ncryptsetup luksClose tails_persist\n\nFirst real bootThis will have to be done each time you boot your Tails VM.Restart your AppVM, and you should be able to decrypt the persistent volume in the greeter. You'll also want to set the sudo password again, while you're here.Shut down Tails again, and then restart the Qube\nWhen it boots, the greeter should detect the persistent volume - enter your disk encryption password and click Unlock.\nWhen you get to the TAILS greeter, click the + at the bottom and choose Administration password. Enter a password twice and click Add.\nClick Start Tails to get to the TAILS desktop.\nManually configure networkingUnfortunately, this will also have to be done each time you boot your Tails VM.Qubes doesn't use DHCP on it's internal networking, but rather passes network config values around with qubesdb. Unfortunately, we can't use that inside Tails right now, so we'll need to login and manually configure networking.In Qube Manager, open the settings for the Tails qube and move it to one side where you can see the Networking section.\nIn Tails, from the Applications menu, System tools submenu, open a Terminal.\nIn the terminal, type:\nsudo su\nenter your administration password from step 3 of the First real boot process above.\nip addr add 10.137.0.xx/32 dev eth0\nsubstitute 10.137.0.xx with the IP value from the Qube settings.\n\nip route add 10.137.0.yy/32 dev eth0\nsubstitute 10.137.0.yy with the Gateway value from the Qube settings.\n\nip route add 0.0.0.0/0 via 10.137.0.yy dev eth0\nsubstitute 10.137.0.yy with the Gateway value from the Qube settings.\n\nexit\nexit\n\nAt this stage, the terminal will disappear, and you'll get a notification saying you're connected to Tor.\nCongrats.\n "
          }
        ]
      }
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "author": [
          {
            "type": [
              "h-card"
            ],
            "properties": {
              "url": [
                "https://caffeinewitch.tech/profile/ketudb",
                "https://caffeinewitch.tech/profile/ketudb",
                "https://caffeinewitch.tech/profile/ketudb"
              ],
              "photo": [
                "https://caffeinewitch.tech/file/b787c17e8a12ffeac8a16f236a53cccc/thumb.jpg"
              ],
              "name": [
                "ketudb"
              ]
            },
            "value": "ketudb"
          }
        ],
        "url": [
          "https://caffeinewitch.tech/2019/05/ive-written-a-very-hacky-mycroft-rest-webhook-to-run"
        ],
        "published": [
          "2019-05-13T01:12:49+00:00"
        ],
        "name": [
          "I've written a very hacky #Mycroft #REST webhook to run on a Mycroft box and allow you to integrate other apps with it. It's far from done, and it's super hacky at the moment, but it's working. I use it for some custom #HomeAssistant integrations & have a few other plans for it. It's available on #GitHub.\r\n\r\nhttps://github.com/ketudb/mycroft-webhook-inbound"
        ],
        "content": [
          {
            "html": "I've written a very hacky <a href=\"https://caffeinewitch.tech/tag/Mycroft\" class=\"p-category\" rel=\"tag\">#Mycroft</a> <a href=\"https://caffeinewitch.tech/tag/REST\" class=\"p-category\" rel=\"tag\">#REST</a> webhook to run on a Mycroft box and allow you to integrate other apps with it. It's far from done, and it's super hacky at the moment, but it's working. I use it for some custom <a href=\"https://caffeinewitch.tech/tag/HomeAssistant\" class=\"p-category\" rel=\"tag\">#HomeAssistant</a> integrations &amp; have a few other plans for it. It's available on <a href=\"https://caffeinewitch.tech/tag/GitHub\" class=\"p-category\" rel=\"tag\">#GitHub</a>.<br>\r\n<br>\r\n<a href=\"https://github.com/ketudb/mycroft-webhook-inbound\">https:/<wbr></wbr>/<wbr></wbr>github.com/<wbr></wbr>ketudb/<wbr></wbr>mycroft-webhook-inbound</a>",
            "value": "I've written a very hacky #Mycroft #REST webhook to run on a Mycroft box and allow you to integrate other apps with it. It's far from done, and it's super hacky at the moment, but it's working. I use it for some custom #HomeAssistant integrations & have a few other plans for it. It's available on #GitHub.\r\n\r\nhttps://github.com/ketudb/mycroft-webhook-inbound"
          }
        ],
        "category": [
          "#Mycroft",
          "#REST",
          "#HomeAssistant",
          "#GitHub"
        ],
        "syndication": [
          "https://twitter.com/ketudb/status/1127743537741737986"
        ]
      }
    }
  ],
  "rels": {
    "apple-touch-icon": [
      "https://caffeinewitch.tech/gfx/logos/apple-icon-57x57.png",
      "https://caffeinewitch.tech/gfx/logos/apple-icon-72x72.png",
      "https://caffeinewitch.tech/gfx/logos/apple-icon-114x114.png",
      "https://caffeinewitch.tech/gfx/logos/apple-icon-144x144.png",
      "https://caffeinewitch.tech/file/b787c17e8a12ffeac8a16f236a53cccc/thumb.jpg"
    ],
    "icon": [
      "https://caffeinewitch.tech/file/b787c17e8a12ffeac8a16f236a53cccc/thumb.jpg"
    ],
    "shortcut": [
      "https://caffeinewitch.tech/file/b787c17e8a12ffeac8a16f236a53cccc/thumb.jpg"
    ],
    "apple-touch-icon-precomposed": [
      "https://caffeinewitch.tech/file/b787c17e8a12ffeac8a16f236a53cccc/thumb.jpg"
    ],
    "schema.DC": [
      "http://purl.org/dc/elements/1.1/"
    ],
    "amphtml": [
      "https://caffeinewitch.tech/profile/ketudb?_t=amp"
    ],
    "stylesheet": [
      "https://caffeinewitch.tech/external/bootstrap/assets/css/bootstrap.min.css",
      "https://caffeinewitch.tech/external/paypal-bootstrap-accessibility-plugin/plugins/css/bootstrap-accessibility_1.0.3.css",
      "https://caffeinewitch.tech/external/font-awesome/css/font-awesome.css",
      "https://caffeinewitch.tech/IdnoPlugins/Emoji/vendor/emojijs/emoji.min.css",
      "https://caffeinewitch.tech/css/default.css",
      "https://caffeinewitch.tech/css/defaultb3.css",
      "https://caffeinewitch.tech/external/bootstrap-toggle/css/bootstrap-toggle.min.css",
      "https://caffeinewitch.tech/external/mention/recommended-styles.css",
      "https://cdn.jsdelivr.net/npm/fork-awesome@1.1.7/css/fork-awesome.min.css",
      "https://caffeinewitch.tech/Themes/Cherwell/css/default.css",
      "https://caffeinewitch.tech/styles/site/",
      "https://caffeinewitch.tech/external/mediaelement/build/mediaelementplayer.css"
    ],
    "alternate": [
      "https://caffeinewitch.tech/profile/ketudb?_t=rss",
      "https://caffeinewitch.tech/content/all?_t=rss",
      "https://granary.io/url?url=https://caffeinewitch.tech/&input=html&output=atom&hub=https://bridgy-fed.superfeedr.com/"
    ],
    "feed": [
      "https://caffeinewitch.tech/profile/ketudb?_t=rss",
      "https://caffeinewitch.tech/content/all?_t=rss",
      "https://caffeinewitch.tech/content/all"
    ],
    "http://webmention.org/": [
      "https://caffeinewitch.tech/webmention/"
    ],
    "webmention": [
      "https://caffeinewitch.tech/webmention/"
    ],
    "hub": [
      "https://withknown.superfeedr.com/"
    ],
    "me": [
      "https://links.kldb.me/",
      "https://github.com/ketudb"
    ],
    "microsub": [
      "https://aperture.p3k.io/microsub/267"
    ],
    "pgpkey": [
      "https://keybase.io/katastrophe/pgp_keys.asc?fingerprint=6b24b9b6c36457ee656d192c26f05c2405aa6f2b"
    ],
    "openid.delegate": [
      "https://caffeinewitch.tech/"
    ],
    "openid.server": [
      "https://indieauth.com/openid"
    ],
    "authorization_endpoint": [
      "https://caffeinewitch.tech/indieauth/auth"
    ],
    "token_endpoint": [
      "https://caffeinewitch.tech/indieauth/token"
    ],
    "micropub": [
      "https://caffeinewitch.tech/micropub/endpoint"
    ],
    "permalink": [
      "https://caffeinewitch.tech/2020/07/qubes-tails-persistence-hax",
      "https://caffeinewitch.tech/2019/05/ive-written-a-very-hacky-mycroft-rest-webhook-to-run"
    ],
    "nofollow": [
      "https://tails.boum.org/install/download/index.en.html"
    ],
    "tag": [
      "https://caffeinewitch.tech/tag/Mycroft",
      "https://caffeinewitch.tech/tag/REST",
      "https://caffeinewitch.tech/tag/HomeAssistant",
      "https://caffeinewitch.tech/tag/GitHub"
    ]
  },
  "rel-urls": {
    "https://caffeinewitch.tech/gfx/logos/apple-icon-57x57.png": {
      "rels": [
        "apple-touch-icon"
      ]
    },
    "https://caffeinewitch.tech/gfx/logos/apple-icon-72x72.png": {
      "rels": [
        "apple-touch-icon"
      ]
    },
    "https://caffeinewitch.tech/gfx/logos/apple-icon-114x114.png": {
      "rels": [
        "apple-touch-icon"
      ]
    },
    "https://caffeinewitch.tech/gfx/logos/apple-icon-144x144.png": {
      "rels": [
        "apple-touch-icon"
      ]
    },
    "https://caffeinewitch.tech/file/b787c17e8a12ffeac8a16f236a53cccc/thumb.jpg": {
      "rels": [
        "icon",
        "shortcut"
      ],
      "type": "image/jpg"
    },
    "http://purl.org/dc/elements/1.1/": {
      "rels": [
        "schema.DC"
      ]
    },
    "https://caffeinewitch.tech/profile/ketudb?_t=amp": {
      "rels": [
        "amphtml"
      ]
    },
    "https://caffeinewitch.tech/external/bootstrap/assets/css/bootstrap.min.css": {
      "rels": [
        "stylesheet"
      ]
    },
    "https://caffeinewitch.tech/external/paypal-bootstrap-accessibility-plugin/plugins/css/bootstrap-accessibility_1.0.3.css": {
      "rels": [
        "stylesheet"
      ]
    },
    "https://caffeinewitch.tech/external/font-awesome/css/font-awesome.css": {
      "rels": [
        "stylesheet"
      ]
    },
    "https://caffeinewitch.tech/IdnoPlugins/Emoji/vendor/emojijs/emoji.min.css": {
      "rels": [
        "stylesheet"
      ]
    },
    "https://caffeinewitch.tech/css/default.css": {
      "rels": [
        "stylesheet"
      ]
    },
    "https://caffeinewitch.tech/css/defaultb3.css": {
      "rels": [
        "stylesheet"
      ]
    },
    "https://caffeinewitch.tech/external/bootstrap-toggle/css/bootstrap-toggle.min.css": {
      "rels": [
        "stylesheet"
      ]
    },
    "https://caffeinewitch.tech/external/mention/recommended-styles.css": {
      "rels": [
        "stylesheet"
      ],
      "type": "text/css"
    },
    "https://caffeinewitch.tech/profile/ketudb?_t=rss": {
      "rels": [
        "alternate"
      ],
      "title": "ketudb",
      "type": "application/rss+xml"
    },
    "https://caffeinewitch.tech/content/all?_t=rss": {
      "rels": [
        "alternate",
        "feed"
      ],
      "title": "Caffeine-fuelled Technomancy: all content",
      "type": "application/rss+xml"
    },
    "https://caffeinewitch.tech/content/all": {
      "rels": [
        "feed"
      ],
      "title": "Caffeine-fuelled Technomancy",
      "type": "text/html"
    },
    "https://caffeinewitch.tech/webmention/": {
      "rels": [
        "http://webmention.org/"
      ]
    },
    "https://withknown.superfeedr.com/": {
      "rels": [
        "hub"
      ]
    },
    "https://links.kldb.me/": {
      "rels": [
        "me"
      ]
    },
    "https://github.com/ketudb": {
      "rels": [
        "me"
      ]
    },
    "https://aperture.p3k.io/microsub/267": {
      "rels": [
        "microsub"
      ]
    },
    "https://granary.io/url?url=https://caffeinewitch.tech/&input=html&output=atom&hub=https://bridgy-fed.superfeedr.com/": {
      "rels": [
        "alternate"
      ],
      "type": "application/atom+xml"
    },
    "https://cdn.jsdelivr.net/npm/fork-awesome@1.1.7/css/fork-awesome.min.css": {
      "rels": [
        "stylesheet"
      ]
    },
    "https://keybase.io/katastrophe/pgp_keys.asc?fingerprint=6b24b9b6c36457ee656d192c26f05c2405aa6f2b": {
      "rels": [
        "pgpkey"
      ]
    },
    "https://caffeinewitch.tech/": {
      "rels": [
        "openid.delegate"
      ]
    },
    "https://indieauth.com/openid": {
      "rels": [
        "openid.server"
      ]
    },
    "https://caffeinewitch.tech/indieauth/auth": {
      "rels": [
        "authorization_endpoint"
      ]
    },
    "https://caffeinewitch.tech/indieauth/token": {
      "rels": [
        "token_endpoint"
      ]
    },
    "https://caffeinewitch.tech/micropub/endpoint": {
      "rels": [
        "micropub"
      ]
    },
    "https://caffeinewitch.tech/Themes/Cherwell/css/default.css": {
      "rels": [
        "stylesheet"
      ]
    },
    "https://caffeinewitch.tech/styles/site/": {
      "rels": [
        "stylesheet"
      ]
    },
    "https://caffeinewitch.tech/2020/07/qubes-tails-persistence-hax": {
      "rels": [
        "permalink"
      ],
      "text": "\n                                July 17, 2020\n                            "
    },
    "https://tails.boum.org/install/download/index.en.html": {
      "rels": [
        "nofollow"
      ],
      "text": "Tails USB image"
    },
    "https://caffeinewitch.tech/2019/05/ive-written-a-very-hacky-mycroft-rest-webhook-to-run": {
      "rels": [
        "permalink"
      ],
      "text": "\n                                May 13, 2019\n                            "
    },
    "https://caffeinewitch.tech/tag/Mycroft": {
      "rels": [
        "tag"
      ],
      "text": "#Mycroft"
    },
    "https://caffeinewitch.tech/tag/REST": {
      "rels": [
        "tag"
      ],
      "text": "#REST"
    },
    "https://caffeinewitch.tech/tag/HomeAssistant": {
      "rels": [
        "tag"
      ],
      "text": "#HomeAssistant"
    },
    "https://caffeinewitch.tech/tag/GitHub": {
      "rels": [
        "tag"
      ],
      "text": "#GitHub"
    },
    "https://caffeinewitch.tech/external/mediaelement/build/mediaelementplayer.css": {
      "rels": [
        "stylesheet"
      ]
    }
  }
}