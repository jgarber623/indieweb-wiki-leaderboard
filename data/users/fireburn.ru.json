{
  "items": [
    {
      "type": [
        "h-card"
      ],
      "properties": {
        "photo": [
          "https://fireburn.ru/.kittybox/media/uploads/f1/5a/fb/9b/081efafb97b4ad59f5025cf2fd0678b8f3e20e4c292489107d52be09"
        ],
        "url": [
          "https://fireburn.ru/",
          "https://sr.ht/~vikanezrimaya/",
          "https://matrix.to/#/@vika:fireburn.ru"
        ],
        "uid": [
          "https://fireburn.ru/"
        ],
        "name": [
          "Vika"
        ],
        "pronoun": [
          "she/her"
        ],
        "note": [
          "Programmer, trans, an IndieWeb addict. Doesn't know if she's real or merely a vestige of a past long gone."
        ]
      }
    },
    {
      "type": [
        "h-feed"
      ],
      "properties": {
        "name": [
          "Main feed"
        ]
      },
      "children": [
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/ahND3aE"
            ],
            "uid": [
              "https://fireburn.ru/posts/ahND3aE"
            ],
            "published": [
              "2022-10-16T10:59:00.914515100+03:00"
            ],
            "photo": [
              "https://fireburn.ru/.kittybox/media/uploads/ca/30/58/f0/46c7ff3817c8ddb7f208e15072ef820f784e23f0b04d679eb167ae9b"
            ],
            "content": [
              {
                "html": "<p>Sometimes the skies shine blue even in the autumn, when one would expect everything to be dull, gray and sad.</p>",
                "value": "Sometimes the skies shine blue even in the autumn, when one would expect everything to be dull, gray and sad."
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/agso6Vo"
            ],
            "uid": [
              "https://fireburn.ru/posts/agso6Vo"
            ],
            "published": [
              "2022-10-12T01:05:11.388894196+03:00"
            ],
            "category": [
              "programming"
            ],
            "content": [
              {
                "html": "<p>Acquiring random bits of knowledge and experience allows one to comprehend concepts one would be unable to ordinarily comprehend and utilize due to lack of perceived usefulness.</p>\n\n<p>For example, actor frameworks in asynchronous systems. I thought that actors were extraneous entities that aren’t relevant to the problem space; and yet this concept has a use!</p>\n\n<p>By segregating responsibilities of the app and allowing actors to communicate in strictly predefined messages, one can improve the separation of the application modules and ease refactoring.</p>\n\n<p>Maybe I should try using this in a project to feel out the concept. Actually, I do have a pet project: I always wanted to write my own Microsub server...</p>",
                "value": "Acquiring random bits of knowledge and experience allows one to comprehend concepts one would be unable to ordinarily comprehend and utilize due to lack of perceived usefulness.\n\nFor example, actor frameworks in asynchronous systems. I thought that actors were extraneous entities that aren’t relevant to the problem space; and yet this concept has a use!\n\nBy segregating responsibilities of the app and allowing actors to communicate in strictly predefined messages, one can improve the separation of the application modules and ease refactoring.\n\nMaybe I should try using this in a project to feel out the concept. Actually, I do have a pet project: I always wanted to write my own Microsub server..."
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/ags94PA"
            ],
            "uid": [
              "https://fireburn.ru/posts/ags94PA"
            ],
            "published": [
              "2022-10-11T22:44:39.790859647+03:00"
            ],
            "category": [
              "go"
            ],
            "photo": [
              {
                "value": "https://fireburn.ru/.kittybox/media/uploads/2f/e9/6a/52/8f5148a798e76ea49335275797ab9b751f027526abd776fac00ca14e",
                "alt": "Output of the \"go mod tidy\" command, showing an error caused by ambiguous import in some package downstream."
              }
            ],
            "content": [
              {
                "html": "<p>I love how robust go dependency handling is! /s</p>",
                "value": "I love how robust go dependency handling is! /s"
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/ageHtaR"
            ],
            "uid": [
              "https://fireburn.ru/posts/ageHtaR"
            ],
            "published": [
              "2022-10-10T00:28:24.925641367+03:00"
            ],
            "category": [
              "personal"
            ],
            "content": [
              {
                "html": "<p>Moving a bookshelf is tough, but satisfaction after rearranging your furniture and coming into your room and feeling like you’re in a completely new place is absolutely worth it.</p>\n\n<p>If you’re bored, just start moving some furniture...</p>",
                "value": "Moving a bookshelf is tough, but satisfaction after rearranging your furniture and coming into your room and feeling like you’re in a completely new place is absolutely worth it.\n\nIf you’re bored, just start moving some furniture..."
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/ag6PwB5"
            ],
            "uid": [
              "https://fireburn.ru/posts/ag6PwB5"
            ],
            "published": [
              "2022-10-05T02:02:10.265997548+03:00"
            ],
            "category": [
              "Kittybox"
            ],
            "content": [
              {
                "html": "<p>If something is slow, just cache it!</p>\n\n<p>My media endpoint sends ETags now. No more wasting bandwidth!</p>",
                "value": "If something is slow, just cache it!\n\nMy media endpoint sends ETags now. No more wasting bandwidth!"
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/ag5Qmjk"
            ],
            "uid": [
              "https://fireburn.ru/posts/ag5Qmjk"
            ],
            "published": [
              "2022-10-04T22:29:12.285331620+03:00"
            ],
            "content": [
              {
                "html": "<p>Turns out in some jurisdictions it is literally illegal to work at night. What to do if you have a sudden nightly productivity burst?... uuuuuuuugh!</p>",
                "value": "Turns out in some jurisdictions it is literally illegal to work at night. What to do if you have a sudden nightly productivity burst?... uuuuuuuugh!"
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/afxCU6C"
            ],
            "uid": [
              "https://fireburn.ru/posts/afxCU6C"
            ],
            "published": [
              "2022-10-03T16:56:53.172422953+03:00"
            ],
            "category": [
              "Kittybox"
            ],
            "content": [
              {
                "html": "<p>Migrated all of my old uploads to the new media endpoint and fixed the URLs. Should be no more broken images on this website! ...aside from the ones I may or may not have lost.</p>",
                "value": "Migrated all of my old uploads to the new media endpoint and fixed the URLs. Should be no more broken images on this website! ...aside from the ones I may or may not have lost."
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/af_dZnk"
            ],
            "uid": [
              "https://fireburn.ru/posts/af_dZnk"
            ],
            "published": [
              "2022-09-30T07:42:49.665868756+03:00"
            ],
            "content": [
              {
                "html": "<p>Something I should consider doing is picking up the branch where I experimented with transcoding media formats inside of the media endpoint. That photo I just uploaded was fairly large and it took several seconds to load on my mobile connection...</p>",
                "value": "Something I should consider doing is picking up the branch where I experimented with transcoding media formats inside of the media endpoint. That photo I just uploaded was fairly large and it took several seconds to load on my mobile connection..."
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/af_d83s"
            ],
            "uid": [
              "https://fireburn.ru/posts/af_d83s"
            ],
            "published": [
              "2022-09-30T07:41:17.032662733+03:00"
            ],
            "photo": [
              {
                "value": "https://fireburn.ru/.kittybox/media/uploads/39/e3/0c/f0/3d09973880adf6300d8befd2026f183ca29e468be364033539d1e64d",
                "alt": "A photo of a tree, hiding a streetlamp in between its leaves."
              }
            ],
            "content": [
              {
                "html": "<p>I think uploading images should work now that I have a media endpoint. If everything works, here’s a picture I snapped recently.</p>",
                "value": "I think uploading images should work now that I have a media endpoint. If everything works, here’s a picture I snapped recently."
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/afSsLfi"
            ],
            "uid": [
              "https://fireburn.ru/posts/afSsLfi"
            ],
            "published": [
              "2022-09-29T03:44:26.443847998+03:00"
            ],
            "content": [
              {
                "html": "<p>i feel like destroying the universe</p>",
                "value": "i feel like destroying the universe"
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/afR0agt",
              "https://fireburn.ru/posts/legacy-indieauth-in-kittybox"
            ],
            "uid": [
              "https://fireburn.ru/posts/afR0agt"
            ],
            "published": [
              "2022-09-28T21:02:08.513843116+03:00"
            ],
            "category": [
              "Kittybox",
              "IndieWeb",
              "IndieAuth"
            ],
            "content": [
              {
                "html": "<p>Since Kittybox (or more precisely, its IndieAuth library) doesn’t support omitting PKCE, I found myself unable to log into some apps like <a href=\"https://alltogethernow.io/\">Together</a>. Kinda sad, but that’s the price of being on the bleeding edge of the spec, with almost no support for legacy clients.</p>\n\n<p>Had to add <code>authorization_endpoint</code> and <code>token_endpoint</code> links into the header though, because it might be that I am pretty much the only one to use the newest spec and properly implement it. For now.</p>\n\n<p>Next step could probably be actually making webmentions work...</p>",
                "value": "Since Kittybox (or more precisely, its IndieAuth library) doesn’t support omitting PKCE, I found myself unable to log into some apps like Together. Kinda sad, but that’s the price of being on the bleeding edge of the spec, with almost no support for legacy clients.\n\nHad to add authorization_endpoint and token_endpoint links into the header though, because it might be that I am pretty much the only one to use the newest spec and properly implement it. For now.\n\nNext step could probably be actually making webmentions work..."
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/afLMXD9"
            ],
            "uid": [
              "https://fireburn.ru/posts/afLMXD9"
            ],
            "published": [
              "2022-09-28T04:17:28.389008733+03:00"
            ],
            "content": [
              {
                "html": "<p>oh yeah now i can shitpost properly!</p>",
                "value": "oh yeah now i can shitpost properly!"
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/afLMNj7"
            ],
            "uid": [
              "https://fireburn.ru/posts/afLMNj7"
            ],
            "published": [
              "2022-09-28T04:16:57.847351100+03:00"
            ],
            "category": [
              "IndieWeb"
            ],
            "content": [
              {
                "html": "<p>test</p>\n\n<p>if u see this i have implemented indieauth and can now do stuff</p>",
                "value": "test\n\nif u see this i have implemented indieauth and can now do stuff"
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/abhcVjd"
            ],
            "uid": [
              "https://fireburn.ru/posts/abhcVjd"
            ],
            "published": [
              "2022-08-26T12:26:59.078311191+03:00"
            ],
            "category": [
              "Kittybox"
            ],
            "content": [
              {
                "html": "<p>Sometimes you have to scale your ambitions back and go slow to prevent yourself from overworking and subsequently burning out. It is sometimes hard to admit, but it is the truth of this world.</p>",
                "value": "Sometimes you have to scale your ambitions back and go slow to prevent yourself from overworking and subsequently burning out. It is sometimes hard to admit, but it is the truth of this world."
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/aaQaFhZ"
            ],
            "uid": [
              "https://fireburn.ru/posts/aaQaFhZ"
            ],
            "published": [
              "2022-08-14T19:30:56.553764323+03:00"
            ],
            "category": [
              "Kittybox"
            ],
            "content": [
              {
                "html": "<p>I hate OpenSSL, but the <a href=\"https://crates.io/crates/webauthn-rs\">webauthn-rs</a> crate happens to use it. Ugh. I don’t want to ship C code in Kittybox! But it looks like rewriting the whole webauthn-rs crate to remove OpenSSL dependency might be the only option, if it’s possible at all.</p>",
                "value": "I hate OpenSSL, but the webauthn-rs crate happens to use it. Ugh. I don’t want to ship C code in Kittybox! But it looks like rewriting the whole webauthn-rs crate to remove OpenSSL dependency might be the only option, if it’s possible at all."
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/a_eJ0dk"
            ],
            "uid": [
              "https://fireburn.ru/posts/a_eJ0dk"
            ],
            "published": [
              "2022-08-08T00:28:50.325491087+03:00"
            ],
            "content": [
              {
                "html": "<p>Oh well. It looks like I tried to implement an asynchronous template system for Rust, but instead of actual templates I ended up manually writing a stream of <code>Bytes</code> instances. It takes 10 times as much space as its output. But it’s asynchronous, and I expect that TTFB for, say, a large feed, would be much better with it.</p>\n\n<p>For completeness, here is one template I wrote. It should’ve been an h-card.</p>\n\n<pre><code>pub fn card(mut mf2: serde_json::Value) -&gt; impl Stream&lt;Item = Bytes&gt; + Unpin + Send {\n    let uid: String = match mf2[\"properties\"][\"uid\"][0].take() {\n        serde_json::Value::String(uid) =&gt; uid,\n        _ =&gt; panic!(\"h-card without a uid\")\n    };\n    let photo: Option&lt;String&gt; = match mf2[\"properties\"][\"photo\"][0].take() {\n        serde_json::Value::String(url) =&gt; Some(url),\n        _ =&gt; None\n    };\n    let name: String = match mf2[\"properties\"][\"name\"][0].take() {\n        serde_json::Value::String(name) =&gt; name,\n        _ =&gt; panic!(\"encountered h-card without a name\")\n    };\n    chunk(b\"&lt;article class=\\\"h-card\\\"&gt;\")\n        .chain(futures::stream::once(std::future::ready(\n            match photo {\n                Some(url) =&gt; {\n                    let mut tag = Vec::new();\n                    tag.extend_from_slice(b\"&lt;img class=\\\"u-photo\\\" src=\\\"\");\n                    html_escape::encode_double_quoted_attribute_to_vec(url, &amp;mut tag);\n                    tag.extend_from_slice(b\"\\\" /&gt;\");\n\n                    Bytes::from(tag)\n                },\n                None =&gt; Bytes::new()\n            }\n        )))\n        .chain(futures::stream::once(std::future::ready({\n            let mut buf = Vec::new();\n            buf.extend_from_slice(b\"&lt;h1&gt;&lt;a class=\\\"u-url u-uid p-name\\\" href=\\\"\");\n            html_escape::encode_double_quoted_attribute_to_vec(uid, &amp;mut buf);\n            buf.extend_from_slice(b\"\\\"&gt;\");\n\n            html_escape::encode_text_to_vec(&amp;name, &amp;mut buf);\n\n            buf.extend_from_slice(b\"&lt;/a&gt;&lt;/h1&gt;\");\n\n            Bytes::from(buf)\n        })))\n        .chain(chunk(b\"&lt;/article&gt;\"))\n}</code></pre>\n\n<p>It’s huge. Here is the output it should produce (whitespace is mine):</p>\n\n<pre><code>&lt;article class=\"h-card\"&gt;\n    &lt;img class=\"u-photo\" src=\"https://example.com/media/me.png\" /&gt;\n    &lt;h1&gt;&lt;a class=\"u-url u-uid p-name\" href=\"https://example.com/\"&gt;Jane Doe&lt;/a&gt;&lt;/h1&gt;\n&lt;/article&gt;</code></pre>\n\n<p>I need some sort of macro system to work with these. The idea itself seems good, but the implementation... meh.</p>",
                "value": "Oh well. It looks like I tried to implement an asynchronous template system for Rust, but instead of actual templates I ended up manually writing a stream of Bytes instances. It takes 10 times as much space as its output. But it’s asynchronous, and I expect that TTFB for, say, a large feed, would be much better with it.\n\nFor completeness, here is one template I wrote. It should’ve been an h-card.\n\npub fn card(mut mf2: serde_json::Value) -> impl Stream<Item = Bytes> + Unpin + Send {\n    let uid: String = match mf2[\"properties\"][\"uid\"][0].take() {\n        serde_json::Value::String(uid) => uid,\n        _ => panic!(\"h-card without a uid\")\n    };\n    let photo: Option<String> = match mf2[\"properties\"][\"photo\"][0].take() {\n        serde_json::Value::String(url) => Some(url),\n        _ => None\n    };\n    let name: String = match mf2[\"properties\"][\"name\"][0].take() {\n        serde_json::Value::String(name) => name,\n        _ => panic!(\"encountered h-card without a name\")\n    };\n    chunk(b\"<article class=\\\"h-card\\\">\")\n        .chain(futures::stream::once(std::future::ready(\n            match photo {\n                Some(url) => {\n                    let mut tag = Vec::new();\n                    tag.extend_from_slice(b\"<img class=\\\"u-photo\\\" src=\\\"\");\n                    html_escape::encode_double_quoted_attribute_to_vec(url, &mut tag);\n                    tag.extend_from_slice(b\"\\\" />\");\n\n                    Bytes::from(tag)\n                },\n                None => Bytes::new()\n            }\n        )))\n        .chain(futures::stream::once(std::future::ready({\n            let mut buf = Vec::new();\n            buf.extend_from_slice(b\"<h1><a class=\\\"u-url u-uid p-name\\\" href=\\\"\");\n            html_escape::encode_double_quoted_attribute_to_vec(uid, &mut buf);\n            buf.extend_from_slice(b\"\\\">\");\n\n            html_escape::encode_text_to_vec(&name, &mut buf);\n\n            buf.extend_from_slice(b\"</a></h1>\");\n\n            Bytes::from(buf)\n        })))\n        .chain(chunk(b\"</article>\"))\n}\n\nIt’s huge. Here is the output it should produce (whitespace is mine):\n\n<article class=\"h-card\">\n    <img class=\"u-photo\" src=\"https://example.com/media/me.png\" />\n    <h1><a class=\"u-url u-uid p-name\" href=\"https://example.com/\">Jane Doe</a></h1>\n</article>\n\nI need some sort of macro system to work with these. The idea itself seems good, but the implementation... meh."
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "name": [
              "Proposal for a new-generation social reader concept"
            ],
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/aZMsCbz",
              "https://fireburn.ru/posts/a-new-generation-of-social-readers"
            ],
            "uid": [
              "https://fireburn.ru/posts/aZMsCbz"
            ],
            "published": [
              "2022-07-27T09:43:57.419006560+03:00"
            ],
            "category": [
              "IndieWeb",
              "Microsub",
              "social reader"
            ],
            "content": [
              {
                "html": "<p><i>This content is also featured in <a href=\"https://news.indieweb.org/en\" class=\"u-syndication\">IndieNews</a>, the IndieWeb news aggregator.</i></p>\n<p>The new generation of my own website was in its early stages of development for way too long. Several years passed before I was able to finally ship even a proof-of-concept, and yet ambitious thoughts don't stop leaving my head. While not being able to use my website and fully engage with the IndieWeb, I was forced to regress to some older technologies, such as RSS feeds and traditional social network silos, and yet I think this might've inspired me to create something new.</p>\n<p>This is a proposal for a new generation of social readers, built right into the browser and based on open standards, such as Microsub and Micropub; allowing the user to seamlessly transition from the old-style web that we know to the new generation of social web - self-hosted, self-sovereign and free of unneccesary corporate influence, while not being bound to inferior and redundant technologies such as the blockchain and the \"Web 3.0\" fad that it started.</p>\n<h2>The role of a modern web browser</h2>\n<p>The modern web landscape has significantly changed since the invention of the World Wide Web by <a href=\"https://www.w3.org/People/Berners-Lee/\">Tim Berners-Lee</a> in 1989. From a document sharing system it was then transformed by its users into a proto-social network of personal webpages that mixed graphical media with textual content. Then it was once again transformed by the \"dot-com boom\", which accelerated both development of the technology and its commercialization and centralization.</p>\n<p>The modern web browser is now the center-piece of every computing device, since without the web, modern computing as we know it wouldn't exist. The Internet supports many usecases we have, from simple filesharing to videoconferencing, completely transforming our lives. And all of this in a single app. But... something is lacking here.</p>\n<p>Current social networks present in the Internet landscape are mostly designed to show undesirable and irrelevant advertisments to users, and not to connect them and facilitate communication. Many services which were used by friend groups to communicate now transition away from a social network paradigm and turn into content-pushing machines, where the only choice the user has is to whether scroll down or stay on the current page. Control is being slowly taken away from users, turning what was intended into a primary means of communication and information exchange in the 21st century into a glorified TV with a touchscreen instead of buttons.</p>\n<h2>The fundamental concepts of \"self-hosting\" and \"the social web\"</h2>\n<p>But control can be taken back. Taking control of one's own social web experience and shaping it can primarily be facilitated through the concept of \"self-hosting\" - provisioning resources for oneself that facilitate information exchange and are controlled by the user instead of third-parties. Delegation of control is possible when neccesary and authorized - but data souvereignity is a must. Corporations come and go; their services may come down and never return. By taking control of one's own data and the responsibility for hosting content produced, an individual will gain the ability to fully control and curate their own unique online experience.</p>\n<p>\n  The <a href=\"https://indieweb.org/\" style=\"font-weight:bold;\">IndieWeb</a> community is based on exactly that thought and is building new Internet protocols to help people reclaim their space on the modern web. As part of their work, open standards and protocols were developed to facilitate the new generation of social web and data exchange, using a personal website as the centerpoint of data souvereignity and control. The user, being in control of their website, uses it to engage with other people on the social web while staying in control of the content they produce and consume, unlike current social networks, where accounts can be banned instantly with all their data gone, and instead of choosing things to read or watch or listen to, content is being forced down a user's throat by a black-box set of numbers masquerading as \"artificial intelligence\" (which is sometimes acting directly against its own moniker, lacking any true intelligence or understanding of human nature and humanity's wishes).\n  <br>\n</p>\n<p>However, this concept, while being perfect otherwise, is incomplete. The level of integration between the IndieWeb and its protocols and the old-style web is lower than it could be, and the main point where the two can be reconciled is what we use the most to interact with the web - the web browser itself.</p>\n<h2>Current state of affairs in the social web</h2>\n<p>In the collection of protocols and concepts developed by the IndieWeb community, there is a certain one that stands out the most, encompassing one of the central concepts of any social network - the feed. It's called a \"<a href=\"https://indieweb.org/social_reader\">social reader</a>\" - an application, most commonly a web app, that presents to user a social network-style interactive feed or a set of feeds that allows not only to consume content, but actively engage and interact with it. It borrows from conventional social network experience, but uses modern IndieWeb protocols such as <a href=\"https://indieweb.org/Microsub\">Microsub</a> to let the user stay in control of their data and prevent any third parties from messing with it without the user's explicit consent or disrespecting the user's freedoms in any way.</p>\n<p>The social reader allows one to curate a set of feeds filled with content, and then interact with them, posting replies, comments and notes (and even bookmarking whole articles, or expressing their appreciation of content with a \"like\" post, mirroring the \"like\" feature of conventional social network silos) to one's own website, allowing the user to stay in control of their own data and rely on third parties as little as possible while retaining the ability to interact with the wider World Wide Web. Sadly, being often confined to a web application, social readers are limited in their ability to interact with anything outside of the user's feeds, which limits the user's reach on the social web. While discovery engines based on syndication (such as <a href=\"https://indieweb.xyz/\">indieweb.xyz</a>, created by the community, or the old-style \"planet\" content aggregators) allow to expand that, the current experience of discovering new content can eventually take the user out of the social reader on a standalone non-social-web-aware webpage, where social interactions on one's own website are harder to facilitate. Solutions are being explored to remedy that, such as \"<a href=\"https://indieweb.org/webactions\">webactions</a>\" - custom protocol handlers that indicate a prompt for an action to be performed inside of a social reader app and posted to the user's website.</p>\n<p>However, webactions are not natively supported by browsers, requiring JavaScript polyfills and often degrading user experience because of that. The epitome of that concept would be integrating the social reader directly into the browser, allowing it to facilitiate social web interactions without any external client-side software.</p>\n<h2>A new generation of social readers</h2>\n<p>Modern web browsers include a \"new tab\" page that opens whenever an empty tab or window is opened. This experience can be redesigned to take users straight to their social reader, integrated directly into the browser instead of being a standalone web page. This will allow users to never degrade their experience, even when they're taken out of their reader to a standalone webpage - the browser could show buttons corresponding to actions that can be taken on the current page being viewed - for example, posting a comment on one's own website and then notifying the author using a <a href=\"https://indieweb.org/Webmention\">Webmention</a>, or syndicating the content to one's own website (commonly called \"repost\" in social network silo parlance), or simply bookmarking it as something interesting to refer to in later discussions, or for personal use.</p>\n<p>Native UX should be designed so that the social reader doesn't feel like a wart on top of a browser, but a natural extension of it. Such a design could allow users to seamlessly interact even with pages that aren't aware of the new generation of \"social web\", since the user's website will still be able to retain their interactions with the old-style page.</p>\n<p>Most browsers allow usage of so-called \"Web Extensions\" to augment the browser experience. Sadly, this often leaves the \"extension\" with minimal UI to show the user, aside from a single button beside the omnibox, or injecting itself into every webpage and projecting its UI in there, potentially breaking the page's layout in process. This leaves this mechanism ill-suited for integrating a social reader experience into the browser. Therefore, development of a new browser chrome, powered by one of the conventional engines such as Gecko or Blink, would be the most likely way to proceed with the implementation of this concept. </p>\n<p>Web Extensions could still be used to prototype and experiment with the concept. <a href=\"https://indieweb.org/Omnibear\">Omnibear</a> is an existing extension that allows one to author posts and interact with the social web. However, it was abandoned around 2019, and doesn't provide the social reader experience - only minimal ways to send interactions with foreign content to one's own website. Some of the concepts are similar enough to be reused, and inspiration could be taken from its UX.</p>\n<h2>The endgame</h2>\n<p>By fully taking control of one's own data, the user will gain control over their social web life. A modern web browser must be augmented with features to faciliate social web interactions to prevent UX degradation when inevitably landing on a page not aware of social web features. This will help users have a more pleasant and seamless experience on the social web, and help boost adoption by enhancing experience where social web interactions aren't natively supported by the websites themselves, due to ignorance, oversight or corporate malice.</p>",
                "value": "This content is also featured in IndieNews, the IndieWeb news aggregator.The new generation of my own website was in its early stages of development for way too long. Several years passed before I was able to finally ship even a proof-of-concept, and yet ambitious thoughts don't stop leaving my head. While not being able to use my website and fully engage with the IndieWeb, I was forced to regress to some older technologies, such as RSS feeds and traditional social network silos, and yet I think this might've inspired me to create something new.\nThis is a proposal for a new generation of social readers, built right into the browser and based on open standards, such as Microsub and Micropub; allowing the user to seamlessly transition from the old-style web that we know to the new generation of social web - self-hosted, self-sovereign and free of unneccesary corporate influence, while not being bound to inferior and redundant technologies such as the blockchain and the \"Web 3.0\" fad that it started.\nThe role of a modern web browser\nThe modern web landscape has significantly changed since the invention of the World Wide Web by Tim Berners-Lee in 1989. From a document sharing system it was then transformed by its users into a proto-social network of personal webpages that mixed graphical media with textual content. Then it was once again transformed by the \"dot-com boom\", which accelerated both development of the technology and its commercialization and centralization.\nThe modern web browser is now the center-piece of every computing device, since without the web, modern computing as we know it wouldn't exist. The Internet supports many usecases we have, from simple filesharing to videoconferencing, completely transforming our lives. And all of this in a single app. But... something is lacking here.\nCurrent social networks present in the Internet landscape are mostly designed to show undesirable and irrelevant advertisments to users, and not to connect them and facilitate communication. Many services which were used by friend groups to communicate now transition away from a social network paradigm and turn into content-pushing machines, where the only choice the user has is to whether scroll down or stay on the current page. Control is being slowly taken away from users, turning what was intended into a primary means of communication and information exchange in the 21st century into a glorified TV with a touchscreen instead of buttons.\nThe fundamental concepts of \"self-hosting\" and \"the social web\"\nBut control can be taken back. Taking control of one's own social web experience and shaping it can primarily be facilitated through the concept of \"self-hosting\" - provisioning resources for oneself that facilitate information exchange and are controlled by the user instead of third-parties. Delegation of control is possible when neccesary and authorized - but data souvereignity is a must. Corporations come and go; their services may come down and never return. By taking control of one's own data and the responsibility for hosting content produced, an individual will gain the ability to fully control and curate their own unique online experience.\n\n  The IndieWeb community is based on exactly that thought and is building new Internet protocols to help people reclaim their space on the modern web. As part of their work, open standards and protocols were developed to facilitate the new generation of social web and data exchange, using a personal website as the centerpoint of data souvereignity and control. The user, being in control of their website, uses it to engage with other people on the social web while staying in control of the content they produce and consume, unlike current social networks, where accounts can be banned instantly with all their data gone, and instead of choosing things to read or watch or listen to, content is being forced down a user's throat by a black-box set of numbers masquerading as \"artificial intelligence\" (which is sometimes acting directly against its own moniker, lacking any true intelligence or understanding of human nature and humanity's wishes).\n  \n\nHowever, this concept, while being perfect otherwise, is incomplete. The level of integration between the IndieWeb and its protocols and the old-style web is lower than it could be, and the main point where the two can be reconciled is what we use the most to interact with the web - the web browser itself.\nCurrent state of affairs in the social web\nIn the collection of protocols and concepts developed by the IndieWeb community, there is a certain one that stands out the most, encompassing one of the central concepts of any social network - the feed. It's called a \"social reader\" - an application, most commonly a web app, that presents to user a social network-style interactive feed or a set of feeds that allows not only to consume content, but actively engage and interact with it. It borrows from conventional social network experience, but uses modern IndieWeb protocols such as Microsub to let the user stay in control of their data and prevent any third parties from messing with it without the user's explicit consent or disrespecting the user's freedoms in any way.\nThe social reader allows one to curate a set of feeds filled with content, and then interact with them, posting replies, comments and notes (and even bookmarking whole articles, or expressing their appreciation of content with a \"like\" post, mirroring the \"like\" feature of conventional social network silos) to one's own website, allowing the user to stay in control of their own data and rely on third parties as little as possible while retaining the ability to interact with the wider World Wide Web. Sadly, being often confined to a web application, social readers are limited in their ability to interact with anything outside of the user's feeds, which limits the user's reach on the social web. While discovery engines based on syndication (such as indieweb.xyz, created by the community, or the old-style \"planet\" content aggregators) allow to expand that, the current experience of discovering new content can eventually take the user out of the social reader on a standalone non-social-web-aware webpage, where social interactions on one's own website are harder to facilitate. Solutions are being explored to remedy that, such as \"webactions\" - custom protocol handlers that indicate a prompt for an action to be performed inside of a social reader app and posted to the user's website.\nHowever, webactions are not natively supported by browsers, requiring JavaScript polyfills and often degrading user experience because of that. The epitome of that concept would be integrating the social reader directly into the browser, allowing it to facilitiate social web interactions without any external client-side software.\nA new generation of social readers\nModern web browsers include a \"new tab\" page that opens whenever an empty tab or window is opened. This experience can be redesigned to take users straight to their social reader, integrated directly into the browser instead of being a standalone web page. This will allow users to never degrade their experience, even when they're taken out of their reader to a standalone webpage - the browser could show buttons corresponding to actions that can be taken on the current page being viewed - for example, posting a comment on one's own website and then notifying the author using a Webmention, or syndicating the content to one's own website (commonly called \"repost\" in social network silo parlance), or simply bookmarking it as something interesting to refer to in later discussions, or for personal use.\nNative UX should be designed so that the social reader doesn't feel like a wart on top of a browser, but a natural extension of it. Such a design could allow users to seamlessly interact even with pages that aren't aware of the new generation of \"social web\", since the user's website will still be able to retain their interactions with the old-style page.\nMost browsers allow usage of so-called \"Web Extensions\" to augment the browser experience. Sadly, this often leaves the \"extension\" with minimal UI to show the user, aside from a single button beside the omnibox, or injecting itself into every webpage and projecting its UI in there, potentially breaking the page's layout in process. This leaves this mechanism ill-suited for integrating a social reader experience into the browser. Therefore, development of a new browser chrome, powered by one of the conventional engines such as Gecko or Blink, would be the most likely way to proceed with the implementation of this concept. \nWeb Extensions could still be used to prototype and experiment with the concept. Omnibear is an existing extension that allows one to author posts and interact with the social web. However, it was abandoned around 2019, and doesn't provide the social reader experience - only minimal ways to send interactions with foreign content to one's own website. Some of the concepts are similar enough to be reused, and inspiration could be taken from its UX.\nThe endgame\nBy fully taking control of one's own data, the user will gain control over their social web life. A modern web browser must be augmented with features to faciliate social web interactions to prevent UX degradation when inevitably landing on a page not aware of social web features. This will help users have a more pleasant and seamless experience on the social web, and help boost adoption by enhancing experience where social web interactions aren't natively supported by the websites themselves, due to ignorance, oversight or corporate malice."
              }
            ],
            "syndication": [
              "https://news.indieweb.org/en"
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/aZMUGLe"
            ],
            "uid": [
              "https://fireburn.ru/posts/aZMUGLe"
            ],
            "published": [
              "2022-07-27T08:17:46.839915260+03:00"
            ],
            "category": [
              "IndieWeb"
            ],
            "content": [
              {
                "html": "<p>did I just start an outline for a small essay on modern web and social readers?</p>\n\n<p>this will be interesting, I promise</p>",
                "value": "did I just start an outline for a small essay on modern web and social readers?\n\nthis will be interesting, I promise"
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/aXrczD2"
            ],
            "uid": [
              "https://fireburn.ru/posts/aXrczD2"
            ],
            "published": [
              "2022-07-13T20:52:45.182326540+03:00"
            ],
            "category": [
              "Kittybox",
              "programming"
            ],
            "content": [
              {
                "html": "<p>Wow, it turns out buffering file uploads and downloads in my media endpoint doubled my upload speed!</p>",
                "value": "Wow, it turns out buffering file uploads and downloads in my media endpoint doubled my upload speed!"
              }
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "author": [
              "https://fireburn.ru/"
            ],
            "url": [
              "https://fireburn.ru/posts/aXW0v4n",
              "https://fireburn.ru/posts/kittybox-status-update-2022-07-10"
            ],
            "uid": [
              "https://fireburn.ru/posts/aXW0v4n"
            ],
            "published": [
              "2022-07-10T15:03:18.287307354+03:00"
            ],
            "category": [
              "Kittybox"
            ],
            "content": [
              {
                "html": "<p>It looks like Kittybox is close to its finish line and general protocol-compliance goal. The only unimplemented parts are:</p>\n\n<ul>\n<li>In-house IndieAuth (auth and tokens)</li>\n\n<li>Webmentions</li>\n\n<li>WebSub pings</li>\n</ul>\n\n<p>Then it will reach full protocol-compliance status, and I could go on to develop other things like pretty UI for posting, the Microsub server (because I really want my own!) etc.</p>",
                "value": "It looks like Kittybox is close to its finish line and general protocol-compliance goal. The only unimplemented parts are:\n\n\nIn-house IndieAuth (auth and tokens)\n\nWebmentions\n\nWebSub pings\n\n\nThen it will reach full protocol-compliance status, and I could go on to develop other things like pretty UI for posting, the Microsub server (because I really want my own!) etc."
              }
            ]
          }
        }
      ]
    }
  ],
  "rels": {
    "preconnect": [
      "https://fonts.gstatic.com/"
    ],
    "stylesheet": [
      "https://fireburn.ru/.kittybox/static/style.css"
    ],
    "micropub": [
      "https://fireburn.ru/.kittybox/micropub"
    ],
    "micropub_media": [
      "https://fireburn.ru/.kittybox/media"
    ],
    "indieauth_metadata": [
      "https://fireburn.ru/.kittybox/indieauth/metadata"
    ],
    "authorization_endpoint": [
      "https://fireburn.ru/.kittybox/indieauth/auth"
    ],
    "token_endpoint": [
      "https://fireburn.ru/.kittybox/indieauth/token"
    ],
    "jslicense": [
      "https://fireburn.ru/.kittybox/static/jslicense.html"
    ],
    "me": [
      "https://sr.ht/~vikanezrimaya/",
      "https://matrix.to/#/@vika:fireburn.ru"
    ],
    "feed": [
      "https://fireburn.ru/feeds/main"
    ],
    "prev": [
      "https://fireburn.ru/feeds/main?after=https://fireburn.ru/posts/aXW0v4n"
    ]
  },
  "rel-urls": {
    "https://fonts.gstatic.com/": {
      "rels": [
        "preconnect"
      ]
    },
    "https://fireburn.ru/.kittybox/static/style.css": {
      "rels": [
        "stylesheet"
      ]
    },
    "https://fireburn.ru/.kittybox/micropub": {
      "rels": [
        "micropub"
      ]
    },
    "https://fireburn.ru/.kittybox/media": {
      "rels": [
        "micropub_media"
      ]
    },
    "https://fireburn.ru/.kittybox/indieauth/metadata": {
      "rels": [
        "indieauth_metadata"
      ]
    },
    "https://fireburn.ru/.kittybox/indieauth/auth": {
      "rels": [
        "authorization_endpoint"
      ]
    },
    "https://fireburn.ru/.kittybox/indieauth/token": {
      "rels": [
        "token_endpoint"
      ]
    },
    "https://fireburn.ru/.kittybox/static/jslicense.html": {
      "rels": [
        "jslicense"
      ]
    },
    "https://sr.ht/~vikanezrimaya/": {
      "rels": [
        "me"
      ],
      "text": "https://sr.ht/~vikanezrimaya/"
    },
    "https://matrix.to/#/@vika:fireburn.ru": {
      "rels": [
        "me"
      ],
      "text": "https://matrix.to/#/@vika:fireburn.ru"
    },
    "https://fireburn.ru/feeds/main": {
      "rels": [
        "feed"
      ],
      "text": "Main feed"
    },
    "https://fireburn.ru/feeds/main?after=https://fireburn.ru/posts/aXW0v4n": {
      "rels": [
        "prev"
      ],
      "text": "Older posts"
    }
  }
}