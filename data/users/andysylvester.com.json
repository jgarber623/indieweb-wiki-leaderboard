{
  "items": [
    {
      "type": [
        "h-feed"
      ],
      "properties": {},
      "children": [
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "name": [
              "rssCloud, WordPress, FeedLand, and Dave Winer",
              "rssCloud, WordPress, FeedLand, and Dave Winer"
            ],
            "content": [
              {
                "html": "<div class=\"e-content\">\n<p>This is an attempt to capture some work/events I have been involved with over the last few weeks regarding the rssCloud protocol. I hope this will provide some insights into software development and technical communication, and will be of use to others using the rssCloud protocol. I hope it will also demonstrate that it can be difficult to identify/isolate problems between multiple apps/web services/web sites, and that all involved in the discussion should adopt a mindset of “follow the data” and be open to input from others.</p>\n\n\n\n<p><a href=\"http://home.rsscloud.co/\">rssCloud </a>is a notification protocol that uses a “cloud” element in a RSS feed. This element contains information on a cloud server that is supporting this feed. A feed reader app can read the RSS feed and register with the server listed in the cloud element to be notified when the feed updates. The producer of the RSS feed can then “ping” the server to let it know that updates are available, and the server can inform apps that registered that feed that updates are available. The cloud element was included in version 2.0 of the <a href=\"https://cyber.harvard.edu/rss/rss.html\">RSS specification</a>.</p>\n\n\n\n<p>The protocol has been supported in the blogging tools that Dave Winer developed since 2001 (<a href=\"http://radio.userland.com/\">Radio Userland</a> (feed reader/blogging) and <a href=\"http://manila.userland.com/\">Manila </a>(blogging)). Since that time, several other tools added support for adding the cloud element to RSS feeds (<a href=\"https://pypi.org/project/django-rsscloud/\">Django</a>, <a href=\"https://metacpan.org/dist/XML-RSS/changes\">Perl XML-RSS</a>, and <a href=\"https://ocaml.org/p/syndic/1.5.3/doc/Syndic_rss2/index.html\">syndic-rss2</a>). In 2009, Matt Mullenweg <a href=\"https://wordpress.com/blog/2009/09/07/rss-in-the-clouds/\">announced </a>that WordPress.com blogs would support rssCloud, and that a <a href=\"https://blog.josephscott.org/2009/09/07/rsscloud-for-wordpress/\">plugin </a>would be available for WordPress.org blogs. A unique feature of the WordPress implementation is that the WordPress blog itself is the cloud server. A result of this was that a user did not have to find a rssCloud server for their feed to reference – their own site could handle feed registrations and notifications to feed reader apps. This created a supply of literally millions of weblogs that could support quick notifications to their readers if their reading app supported the use of rssCloud. However, for the most part, only feed readers and apps developed by Dave Winer supported the protocol (<a href=\"https://wptavern.com/my-head-is-in-the-rss-cloud\">River2 </a>(OPML Editor app), <a href=\"https://github.com/scripting/river4\">River4</a> and <a href=\"https://github.com/scripting/river5\">River5</a> (Node.js apps), <a href=\"http://radio3.smallpict.com/2015/06/05/rsscloudSupportInRadio3.html\">Radio3</a> (Node.js) and now <a href=\"http://feedland.org/\">FeedLand</a> (Node.js)).</p>\n\n\n\n<p>Some users noted issues with rssCloud support back in 2009 as WordPress.com rolled out its rssCloud support. <a href=\"http://www.xn--8ws00zhy3a.com/blog/2009/10/rss-cloud-fail\">One of the posts</a> from this period highlighted the problems with registering an application with the rssCloud server associated with the WordPress.com blog. I began looking at rssCloud in 2015 and 2016 with limited success, and tried to develop a separate plugin, but had issues. I have been aware for several years that there were problems with River5 working with WordPress.com blogs and WordPress.org blogs in terms of rssCloud support, but I did not have the Node.js knowledge to adequately figure out the issue.</p>\n\n\n\n<p>After the rollout of FeedLand (Dave Winer’s latest feed application), a user, Colin Walker, started asking questions about rssCloud so that he could support it in his custom blog/reader application, and Dave Winer said he <a href=\"https://github.com/scripting/reallysimple/issues/11#issue-1453438627\">wanted people to ask questions</a> about rssCloud, so I thought this was the right time to <a href=\"https://andysylvester.com/2022/12/04/rss-cloud-support-in-wordpress-com-not-working/\">bring up the WordPress.com problem</a> and document it to the best of my ability. I also tried to not say that it was a FeedLand problem, but to me the end result was that FeedLand was not doing what WordPress.com wanted to support rssCloud. Since Joseph Scott indicated that the WordPress.com implementation <a href=\"https://gist.github.com/andrewshell/8b57f96bf62a1dea9fa1a8137e13951a?permalink_comment_id=4396779#gistcomment-4396779\">would not be changing</a>, it was FeedLand that had to change (and other rssCloud apps that might want to say that they work with WordPress.com blogs). I didn’t get much, if any, credit for bringing this up, but I did identify the problem and tried to <a href=\"http://scripting.com/2021/12/18.html#a034800\">provide the level of info</a> that Dave Winer seems to want/need before looking into a problem. During the investigation, Andrew Shell determined that the WordPress cloud server <a href=\"https://gist.github.com/andrewshell/8b57f96bf62a1dea9fa1a8137e13951a?permalink_comment_id=4395192#gistcomment-4395192\">would only respond to requests from ports 80, 443, and 8080</a>. This fact alone would be a valid explanation of why River5 (which ran on a default port of 1337) would not be able to register with a WordPress site or get notifications. However, this was not documented in any of the WordPress posts listed above regarding rollout of RSS Cloud support.</p>\n\n\n\n<p>Dave Winer then published a <a href=\"https://github.com/scripting/reallysimple/tree/main/demos/clouddemo\">reference app</a> for testing rssCloud implementations (https://github.com/scripting/reallysimple/tree/main/demos/clouddemo). I tried to comment on the reallySimple repo, but I saw this:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://andysylvester.com/wp-content/uploads/2022/12/RssCloudBlock.png\"><img width=\"1024\" height=\"666\" src=\"https://andysylvester.com/wp-content/uploads/2022/12/RssCloudBlock-1024x666.png\" alt=\"\" class=\"wp-image-2723\" srcset=\"https://andysylvester.com/wp-content/uploads/2022/12/RssCloudBlock-1024x666.png 1024w, https://andysylvester.com/wp-content/uploads/2022/12/RssCloudBlock-300x195.png 300w, https://andysylvester.com/wp-content/uploads/2022/12/RssCloudBlock-768x500.png 768w, https://andysylvester.com/wp-content/uploads/2022/12/RssCloudBlock-700x456.png 700w, https://andysylvester.com/wp-content/uploads/2022/12/RssCloudBlock.png 1114w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"></a><figcaption>Screen capture from <a href=\"https://github.com/scripting/reallysimple/issues/12\">Github repo issue</a></figcaption></figure>\n\n\n\n<p>…so I posted my report <a href=\"https://andysylvester.com/2022/12/17/test-results-for-rsscloud-app-from-dave-winer/\">on my own blog</a>.</p>\n\n\n\n<p>I checked, and saw that Github does have <a href=\"https://docs.github.com/en/communities/moderating-comments-and-conversations\">moderation features</a> which allow repo owners to block people. I assume this is what has happened. I am also going to assume that this is from my comment on the earlier Github thread where I <a href=\"https://gist.github.com/andrewshell/8b57f96bf62a1dea9fa1a8137e13951a?permalink_comment_id=4397475#gistcomment-4397475\">called out Dave’s negative request</a> for help with rssCloud issues. Being his repo, he can do what he wants. However, to me that does not give the impression that Dave is open to feedback, even though he asked for feedback at the top of the issue (I guess it was just my feedback he did not want). I later checked and saw that I saw the same response on other repos within <a href=\"https://github.com/scripting\">github.com/scripting</a>, so I assume I am blocked from all of those repos.</p>\n\n\n\n<p>This is not the first time I have identified problems in how Dave Winer approaches <a href=\"https://andysylvester.com/2022/12/10/an-unfortunate-exercise-of-editorial-discretion-by-dave-winer/\">comments about him</a> or <a href=\"https://andysylvester.com/2022/03/18/my-impressions-of-the-current-state-of-drummer/\">his products</a>. I know he has “guidelines” to handle feedback, and that is his right. At this time in my life (I turned 60 earlier this year, I know Dave is 67-68), I tend more to “call it like I see it” in as factual a manner as I can. If that is what Dave Winer thinks of as “<a href=\"http://scripting.com/2022/12/13.html#a134833\">trolls, spammers, and abusers</a>“, I can’t do anything about that. However, I don’t think I fit into any of those categories.</p>\n\n\n\n<p>With <a href=\"http://feedland.org/?item=880552\">the help</a> of <a href=\"https://blog.andrewshell.org/\">Andrew Shell</a>, Dave Winer was able to update FeedLand so that it supports display of WordPress.com and WordPress.org blog posts in near-real-time. I am seeing some RSS feed caching issues with WordPress, which I am continuing to document on a <a href=\"https://gist.github.com/andrewshell/8b57f96bf62a1dea9fa1a8137e13951a?permalink_comment_id=4410035#gistcomment-4410035\">Github gist thread</a>. Joseph Scott of Automattic has been very helpful with ideas. I was able to demonstrate that the new version of the rssCloud plugin (0.5.0) supported registration and notification with FeedLand, but subsequent tests with test scripts are showing the RSS feed caching problem I saw last week.</p>\n\n\n\n<p>I have a rssCloud project in mind that I would like to develop, but I want all WordPress users to be able to take advantage of rssCloud. Hopefully, this will become a reality soon.</p>\n</div>\n<div class=\"syndication-links\"></div>",
                "value": "This is an attempt to capture some work/events I have been involved with over the last few weeks regarding the rssCloud protocol. I hope this will provide some insights into software development and technical communication, and will be of use to others using the rssCloud protocol. I hope it will also demonstrate that it can be difficult to identify/isolate problems between multiple apps/web services/web sites, and that all involved in the discussion should adopt a mindset of “follow the data” and be open to input from others.\n\n\n\nrssCloud is a notification protocol that uses a “cloud” element in a RSS feed. This element contains information on a cloud server that is supporting this feed. A feed reader app can read the RSS feed and register with the server listed in the cloud element to be notified when the feed updates. The producer of the RSS feed can then “ping” the server to let it know that updates are available, and the server can inform apps that registered that feed that updates are available. The cloud element was included in version 2.0 of the RSS specification.\n\n\n\nThe protocol has been supported in the blogging tools that Dave Winer developed since 2001 (Radio Userland (feed reader/blogging) and Manila (blogging)). Since that time, several other tools added support for adding the cloud element to RSS feeds (Django, Perl XML-RSS, and syndic-rss2). In 2009, Matt Mullenweg announced that WordPress.com blogs would support rssCloud, and that a plugin would be available for WordPress.org blogs. A unique feature of the WordPress implementation is that the WordPress blog itself is the cloud server. A result of this was that a user did not have to find a rssCloud server for their feed to reference – their own site could handle feed registrations and notifications to feed reader apps. This created a supply of literally millions of weblogs that could support quick notifications to their readers if their reading app supported the use of rssCloud. However, for the most part, only feed readers and apps developed by Dave Winer supported the protocol (River2 (OPML Editor app), River4 and River5 (Node.js apps), Radio3 (Node.js) and now FeedLand (Node.js)).\n\n\n\nSome users noted issues with rssCloud support back in 2009 as WordPress.com rolled out its rssCloud support. One of the posts from this period highlighted the problems with registering an application with the rssCloud server associated with the WordPress.com blog. I began looking at rssCloud in 2015 and 2016 with limited success, and tried to develop a separate plugin, but had issues. I have been aware for several years that there were problems with River5 working with WordPress.com blogs and WordPress.org blogs in terms of rssCloud support, but I did not have the Node.js knowledge to adequately figure out the issue.\n\n\n\nAfter the rollout of FeedLand (Dave Winer’s latest feed application), a user, Colin Walker, started asking questions about rssCloud so that he could support it in his custom blog/reader application, and Dave Winer said he wanted people to ask questions about rssCloud, so I thought this was the right time to bring up the WordPress.com problem and document it to the best of my ability. I also tried to not say that it was a FeedLand problem, but to me the end result was that FeedLand was not doing what WordPress.com wanted to support rssCloud. Since Joseph Scott indicated that the WordPress.com implementation would not be changing, it was FeedLand that had to change (and other rssCloud apps that might want to say that they work with WordPress.com blogs). I didn’t get much, if any, credit for bringing this up, but I did identify the problem and tried to provide the level of info that Dave Winer seems to want/need before looking into a problem. During the investigation, Andrew Shell determined that the WordPress cloud server would only respond to requests from ports 80, 443, and 8080. This fact alone would be a valid explanation of why River5 (which ran on a default port of 1337) would not be able to register with a WordPress site or get notifications. However, this was not documented in any of the WordPress posts listed above regarding rollout of RSS Cloud support.\n\n\n\nDave Winer then published a reference app for testing rssCloud implementations (https://github.com/scripting/reallysimple/tree/main/demos/clouddemo). I tried to comment on the reallySimple repo, but I saw this:\n\n\n\n  Screen capture from Github repo issue\n\n\n\n…so I posted my report on my own blog.\n\n\n\nI checked, and saw that Github does have moderation features which allow repo owners to block people. I assume this is what has happened. I am also going to assume that this is from my comment on the earlier Github thread where I called out Dave’s negative request for help with rssCloud issues. Being his repo, he can do what he wants. However, to me that does not give the impression that Dave is open to feedback, even though he asked for feedback at the top of the issue (I guess it was just my feedback he did not want). I later checked and saw that I saw the same response on other repos within github.com/scripting, so I assume I am blocked from all of those repos.\n\n\n\nThis is not the first time I have identified problems in how Dave Winer approaches comments about him or his products. I know he has “guidelines” to handle feedback, and that is his right. At this time in my life (I turned 60 earlier this year, I know Dave is 67-68), I tend more to “call it like I see it” in as factual a manner as I can. If that is what Dave Winer thinks of as “trolls, spammers, and abusers“, I can’t do anything about that. However, I don’t think I fit into any of those categories.\n\n\n\nWith the help of Andrew Shell, Dave Winer was able to update FeedLand so that it supports display of WordPress.com and WordPress.org blog posts in near-real-time. I am seeing some RSS feed caching issues with WordPress, which I am continuing to document on a Github gist thread. Joseph Scott of Automattic has been very helpful with ideas. I was able to demonstrate that the new version of the rssCloud plugin (0.5.0) supported registration and notification with FeedLand, but subsequent tests with test scripts are showing the RSS feed caching problem I saw last week.\n\n\n\nI have a rssCloud project in mind that I would like to develop, but I want all WordPress users to be able to take advantage of rssCloud. Hopefully, this will become a reality soon."
              },
              {
                "html": "<p>This is an attempt to capture some work/events I have been involved with over the last few weeks regarding the rssCloud protocol. I hope this will provide some insights into software development and technical communication, and will be of use to others using the rssCloud protocol. I hope it will also demonstrate that it can be difficult to identify/isolate problems between multiple apps/web services/web sites, and that all involved in the discussion should adopt a mindset of “follow the data” and be open to input from others.</p>\n\n\n\n<p><a href=\"http://home.rsscloud.co/\">rssCloud </a>is a notification protocol that uses a “cloud” element in a RSS feed. This element contains information on a cloud server that is supporting this feed. A feed reader app can read the RSS feed and register with the server listed in the cloud element to be notified when the feed updates. The producer of the RSS feed can then “ping” the server to let it know that updates are available, and the server can inform apps that registered that feed that updates are available. The cloud element was included in version 2.0 of the <a href=\"https://cyber.harvard.edu/rss/rss.html\">RSS specification</a>.</p>\n\n\n\n<p>The protocol has been supported in the blogging tools that Dave Winer developed since 2001 (<a href=\"http://radio.userland.com/\">Radio Userland</a> (feed reader/blogging) and <a href=\"http://manila.userland.com/\">Manila </a>(blogging)). Since that time, several other tools added support for adding the cloud element to RSS feeds (<a href=\"https://pypi.org/project/django-rsscloud/\">Django</a>, <a href=\"https://metacpan.org/dist/XML-RSS/changes\">Perl XML-RSS</a>, and <a href=\"https://ocaml.org/p/syndic/1.5.3/doc/Syndic_rss2/index.html\">syndic-rss2</a>). In 2009, Matt Mullenweg <a href=\"https://wordpress.com/blog/2009/09/07/rss-in-the-clouds/\">announced </a>that WordPress.com blogs would support rssCloud, and that a <a href=\"https://blog.josephscott.org/2009/09/07/rsscloud-for-wordpress/\">plugin </a>would be available for WordPress.org blogs. A unique feature of the WordPress implementation is that the WordPress blog itself is the cloud server. A result of this was that a user did not have to find a rssCloud server for their feed to reference – their own site could handle feed registrations and notifications to feed reader apps. This created a supply of literally millions of weblogs that could support quick notifications to their readers if their reading app supported the use of rssCloud. However, for the most part, only feed readers and apps developed by Dave Winer supported the protocol (<a href=\"https://wptavern.com/my-head-is-in-the-rss-cloud\">River2 </a>(OPML Editor app), <a href=\"https://github.com/scripting/river4\">River4</a> and <a href=\"https://github.com/scripting/river5\">River5</a> (Node.js apps), <a href=\"http://radio3.smallpict.com/2015/06/05/rsscloudSupportInRadio3.html\">Radio3</a> (Node.js) and now <a href=\"http://feedland.org/\">FeedLand</a> (Node.js)).</p>\n\n\n\n<p>Some users noted issues with rssCloud support back in 2009 as WordPress.com rolled out its rssCloud support. <a href=\"http://www.xn--8ws00zhy3a.com/blog/2009/10/rss-cloud-fail\">One of the posts</a> from this period highlighted the problems with registering an application with the rssCloud server associated with the WordPress.com blog. I began looking at rssCloud in 2015 and 2016 with limited success, and tried to develop a separate plugin, but had issues. I have been aware for several years that there were problems with River5 working with WordPress.com blogs and WordPress.org blogs in terms of rssCloud support, but I did not have the Node.js knowledge to adequately figure out the issue.</p>\n\n\n\n<p>After the rollout of FeedLand (Dave Winer’s latest feed application), a user, Colin Walker, started asking questions about rssCloud so that he could support it in his custom blog/reader application, and Dave Winer said he <a href=\"https://github.com/scripting/reallysimple/issues/11#issue-1453438627\">wanted people to ask questions</a> about rssCloud, so I thought this was the right time to <a href=\"https://andysylvester.com/2022/12/04/rss-cloud-support-in-wordpress-com-not-working/\">bring up the WordPress.com problem</a> and document it to the best of my ability. I also tried to not say that it was a FeedLand problem, but to me the end result was that FeedLand was not doing what WordPress.com wanted to support rssCloud. Since Joseph Scott indicated that the WordPress.com implementation <a href=\"https://gist.github.com/andrewshell/8b57f96bf62a1dea9fa1a8137e13951a?permalink_comment_id=4396779#gistcomment-4396779\">would not be changing</a>, it was FeedLand that had to change (and other rssCloud apps that might want to say that they work with WordPress.com blogs). I didn’t get much, if any, credit for bringing this up, but I did identify the problem and tried to <a href=\"http://scripting.com/2021/12/18.html#a034800\">provide the level of info</a> that Dave Winer seems to want/need before looking into a problem. During the investigation, Andrew Shell determined that the WordPress cloud server <a href=\"https://gist.github.com/andrewshell/8b57f96bf62a1dea9fa1a8137e13951a?permalink_comment_id=4395192#gistcomment-4395192\">would only respond to requests from ports 80, 443, and 8080</a>. This fact alone would be a valid explanation of why River5 (which ran on a default port of 1337) would not be able to register with a WordPress site or get notifications. However, this was not documented in any of the WordPress posts listed above regarding rollout of RSS Cloud support.</p>\n\n\n\n<p>Dave Winer then published a <a href=\"https://github.com/scripting/reallysimple/tree/main/demos/clouddemo\">reference app</a> for testing rssCloud implementations (https://github.com/scripting/reallysimple/tree/main/demos/clouddemo). I tried to comment on the reallySimple repo, but I saw this:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://andysylvester.com/wp-content/uploads/2022/12/RssCloudBlock.png\"><img width=\"1024\" height=\"666\" src=\"https://andysylvester.com/wp-content/uploads/2022/12/RssCloudBlock-1024x666.png\" alt=\"\" class=\"wp-image-2723\" srcset=\"https://andysylvester.com/wp-content/uploads/2022/12/RssCloudBlock-1024x666.png 1024w, https://andysylvester.com/wp-content/uploads/2022/12/RssCloudBlock-300x195.png 300w, https://andysylvester.com/wp-content/uploads/2022/12/RssCloudBlock-768x500.png 768w, https://andysylvester.com/wp-content/uploads/2022/12/RssCloudBlock-700x456.png 700w, https://andysylvester.com/wp-content/uploads/2022/12/RssCloudBlock.png 1114w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"></a><figcaption>Screen capture from <a href=\"https://github.com/scripting/reallysimple/issues/12\">Github repo issue</a></figcaption></figure>\n\n\n\n<p>…so I posted my report <a href=\"https://andysylvester.com/2022/12/17/test-results-for-rsscloud-app-from-dave-winer/\">on my own blog</a>.</p>\n\n\n\n<p>I checked, and saw that Github does have <a href=\"https://docs.github.com/en/communities/moderating-comments-and-conversations\">moderation features</a> which allow repo owners to block people. I assume this is what has happened. I am also going to assume that this is from my comment on the earlier Github thread where I <a href=\"https://gist.github.com/andrewshell/8b57f96bf62a1dea9fa1a8137e13951a?permalink_comment_id=4397475#gistcomment-4397475\">called out Dave’s negative request</a> for help with rssCloud issues. Being his repo, he can do what he wants. However, to me that does not give the impression that Dave is open to feedback, even though he asked for feedback at the top of the issue (I guess it was just my feedback he did not want). I later checked and saw that I saw the same response on other repos within <a href=\"https://github.com/scripting\">github.com/scripting</a>, so I assume I am blocked from all of those repos.</p>\n\n\n\n<p>This is not the first time I have identified problems in how Dave Winer approaches <a href=\"https://andysylvester.com/2022/12/10/an-unfortunate-exercise-of-editorial-discretion-by-dave-winer/\">comments about him</a> or <a href=\"https://andysylvester.com/2022/03/18/my-impressions-of-the-current-state-of-drummer/\">his products</a>. I know he has “guidelines” to handle feedback, and that is his right. At this time in my life (I turned 60 earlier this year, I know Dave is 67-68), I tend more to “call it like I see it” in as factual a manner as I can. If that is what Dave Winer thinks of as “<a href=\"http://scripting.com/2022/12/13.html#a134833\">trolls, spammers, and abusers</a>“, I can’t do anything about that. However, I don’t think I fit into any of those categories.</p>\n\n\n\n<p>With <a href=\"http://feedland.org/?item=880552\">the help</a> of <a href=\"https://blog.andrewshell.org/\">Andrew Shell</a>, Dave Winer was able to update FeedLand so that it supports display of WordPress.com and WordPress.org blog posts in near-real-time. I am seeing some RSS feed caching issues with WordPress, which I am continuing to document on a <a href=\"https://gist.github.com/andrewshell/8b57f96bf62a1dea9fa1a8137e13951a?permalink_comment_id=4410035#gistcomment-4410035\">Github gist thread</a>. Joseph Scott of Automattic has been very helpful with ideas. I was able to demonstrate that the new version of the rssCloud plugin (0.5.0) supported registration and notification with FeedLand, but subsequent tests with test scripts are showing the RSS feed caching problem I saw last week.</p>\n\n\n\n<p>I have a rssCloud project in mind that I would like to develop, but I want all WordPress users to be able to take advantage of rssCloud. Hopefully, this will become a reality soon.</p>",
                "value": "This is an attempt to capture some work/events I have been involved with over the last few weeks regarding the rssCloud protocol. I hope this will provide some insights into software development and technical communication, and will be of use to others using the rssCloud protocol. I hope it will also demonstrate that it can be difficult to identify/isolate problems between multiple apps/web services/web sites, and that all involved in the discussion should adopt a mindset of “follow the data” and be open to input from others.\n\n\n\nrssCloud is a notification protocol that uses a “cloud” element in a RSS feed. This element contains information on a cloud server that is supporting this feed. A feed reader app can read the RSS feed and register with the server listed in the cloud element to be notified when the feed updates. The producer of the RSS feed can then “ping” the server to let it know that updates are available, and the server can inform apps that registered that feed that updates are available. The cloud element was included in version 2.0 of the RSS specification.\n\n\n\nThe protocol has been supported in the blogging tools that Dave Winer developed since 2001 (Radio Userland (feed reader/blogging) and Manila (blogging)). Since that time, several other tools added support for adding the cloud element to RSS feeds (Django, Perl XML-RSS, and syndic-rss2). In 2009, Matt Mullenweg announced that WordPress.com blogs would support rssCloud, and that a plugin would be available for WordPress.org blogs. A unique feature of the WordPress implementation is that the WordPress blog itself is the cloud server. A result of this was that a user did not have to find a rssCloud server for their feed to reference – their own site could handle feed registrations and notifications to feed reader apps. This created a supply of literally millions of weblogs that could support quick notifications to their readers if their reading app supported the use of rssCloud. However, for the most part, only feed readers and apps developed by Dave Winer supported the protocol (River2 (OPML Editor app), River4 and River5 (Node.js apps), Radio3 (Node.js) and now FeedLand (Node.js)).\n\n\n\nSome users noted issues with rssCloud support back in 2009 as WordPress.com rolled out its rssCloud support. One of the posts from this period highlighted the problems with registering an application with the rssCloud server associated with the WordPress.com blog. I began looking at rssCloud in 2015 and 2016 with limited success, and tried to develop a separate plugin, but had issues. I have been aware for several years that there were problems with River5 working with WordPress.com blogs and WordPress.org blogs in terms of rssCloud support, but I did not have the Node.js knowledge to adequately figure out the issue.\n\n\n\nAfter the rollout of FeedLand (Dave Winer’s latest feed application), a user, Colin Walker, started asking questions about rssCloud so that he could support it in his custom blog/reader application, and Dave Winer said he wanted people to ask questions about rssCloud, so I thought this was the right time to bring up the WordPress.com problem and document it to the best of my ability. I also tried to not say that it was a FeedLand problem, but to me the end result was that FeedLand was not doing what WordPress.com wanted to support rssCloud. Since Joseph Scott indicated that the WordPress.com implementation would not be changing, it was FeedLand that had to change (and other rssCloud apps that might want to say that they work with WordPress.com blogs). I didn’t get much, if any, credit for bringing this up, but I did identify the problem and tried to provide the level of info that Dave Winer seems to want/need before looking into a problem. During the investigation, Andrew Shell determined that the WordPress cloud server would only respond to requests from ports 80, 443, and 8080. This fact alone would be a valid explanation of why River5 (which ran on a default port of 1337) would not be able to register with a WordPress site or get notifications. However, this was not documented in any of the WordPress posts listed above regarding rollout of RSS Cloud support.\n\n\n\nDave Winer then published a reference app for testing rssCloud implementations (https://github.com/scripting/reallysimple/tree/main/demos/clouddemo). I tried to comment on the reallySimple repo, but I saw this:\n\n\n\n  Screen capture from Github repo issue\n\n\n\n…so I posted my report on my own blog.\n\n\n\nI checked, and saw that Github does have moderation features which allow repo owners to block people. I assume this is what has happened. I am also going to assume that this is from my comment on the earlier Github thread where I called out Dave’s negative request for help with rssCloud issues. Being his repo, he can do what he wants. However, to me that does not give the impression that Dave is open to feedback, even though he asked for feedback at the top of the issue (I guess it was just my feedback he did not want). I later checked and saw that I saw the same response on other repos within github.com/scripting, so I assume I am blocked from all of those repos.\n\n\n\nThis is not the first time I have identified problems in how Dave Winer approaches comments about him or his products. I know he has “guidelines” to handle feedback, and that is his right. At this time in my life (I turned 60 earlier this year, I know Dave is 67-68), I tend more to “call it like I see it” in as factual a manner as I can. If that is what Dave Winer thinks of as “trolls, spammers, and abusers“, I can’t do anything about that. However, I don’t think I fit into any of those categories.\n\n\n\nWith the help of Andrew Shell, Dave Winer was able to update FeedLand so that it supports display of WordPress.com and WordPress.org blog posts in near-real-time. I am seeing some RSS feed caching issues with WordPress, which I am continuing to document on a Github gist thread. Joseph Scott of Automattic has been very helpful with ideas. I was able to demonstrate that the new version of the rssCloud plugin (0.5.0) supported registration and notification with FeedLand, but subsequent tests with test scripts are showing the RSS feed caching problem I saw last week.\n\n\n\nI have a rssCloud project in mind that I would like to develop, but I want all WordPress users to be able to take advantage of rssCloud. Hopefully, this will become a reality soon."
              }
            ]
          },
          "id": "post-2722"
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "name": [
              "",
              ""
            ],
            "content": [
              {
                "html": "<div class=\"e-content\">\n<p>Great video of the Boeing 787 HUD!</p>\n\n\n\n<iframe loading=\"lazy\" src=\"https://www.linkedin.com/embed/feed/update/urn:li:ugcPost:7005505184894255104\" height=\"591\" width=\"504\" frameborder=\"0\" allowfullscreen=\"\" title=\"Embedded post\"></iframe>\n\n\n\n<p></p>\n</div>\n<div class=\"syndication-links\"></div>",
                "value": "Great video of the Boeing 787 HUD!"
              },
              {
                "html": "<p>Great video of the Boeing 787 HUD!</p>\n\n\n\n<iframe loading=\"lazy\" src=\"https://www.linkedin.com/embed/feed/update/urn:li:ugcPost:7005505184894255104\" height=\"591\" width=\"504\" frameborder=\"0\" allowfullscreen=\"\" title=\"Embedded post\"></iframe>\n\n\n\n<p></p>",
                "value": "Great video of the Boeing 787 HUD!"
              }
            ]
          },
          "id": "post-2718"
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "name": [
              "Using podcasting as a teaching tool",
              "Using podcasting as a teaching tool"
            ],
            "content": [
              {
                "html": "<div class=\"e-content\">\n<p>Earlier this month, John Johnston <a href=\"https://johnjohnston.info/blog/more-podcasting-in-the-classroom-thoughts/\">wrote </a>about his experience with student podcasting:</p>\n\n\n\n<blockquote class=\"wp-block-quote\">\n<p>We are trying to give our class motivation to practise their talking, listening, reading and writing. Communication with their peers and an audience. For me simple podcasting provides a great opportunity for that.</p>\n<cite>via John Johnston</cite>\n</blockquote>\n\n\n\n<p>I think this is terrific – more teachers should use podcasting as a technique to increase literacy skills.</p>\n</div>\n<div class=\"syndication-links\"></div>",
                "value": "Earlier this month, John Johnston wrote about his experience with student podcasting:\n\n\n\nWe are trying to give our class motivation to practise their talking, listening, reading and writing. Communication with their peers and an audience. For me simple podcasting provides a great opportunity for that.via John Johnston\n\n\n\nI think this is terrific – more teachers should use podcasting as a technique to increase literacy skills."
              },
              {
                "html": "<p>Earlier this month, John Johnston <a href=\"https://johnjohnston.info/blog/more-podcasting-in-the-classroom-thoughts/\">wrote </a>about his experience with student podcasting:</p>\n\n\n\n<blockquote class=\"wp-block-quote\">\n<p>We are trying to give our class motivation to practise their talking, listening, reading and writing. Communication with their peers and an audience. For me simple podcasting provides a great opportunity for that.</p>\n<cite>via John Johnston</cite>\n</blockquote>\n\n\n\n<p>I think this is terrific – more teachers should use podcasting as a technique to increase literacy skills.</p>",
                "value": "Earlier this month, John Johnston wrote about his experience with student podcasting:\n\n\n\nWe are trying to give our class motivation to practise their talking, listening, reading and writing. Communication with their peers and an audience. For me simple podcasting provides a great opportunity for that.via John Johnston\n\n\n\nI think this is terrific – more teachers should use podcasting as a technique to increase literacy skills."
              }
            ]
          },
          "id": "post-2716"
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "name": [
              "",
              ""
            ],
            "content": [
              {
                "html": "<div class=\"e-content\">\n<p>Simon Willison’s recent talk at Django 2022 (<a href=\"https://simonwillison.net/2022/Nov/26/productivity/\">Comping strategies for the serial project hoarder</a>) is fascinating! His proposal is to ensure that every project has comprehensive documentation and automated tests. I am going to seriously look into this! (via <a href=\"http://rolandtanglao.com/2022/11/26/p1-simon-willison-issue-oriented-development-including-documentation-tests/\">Roland Tanglao</a>)</p>\n</div>\n<div class=\"syndication-links\"></div>",
                "value": "Simon Willison’s recent talk at Django 2022 (Comping strategies for the serial project hoarder) is fascinating! His proposal is to ensure that every project has comprehensive documentation and automated tests. I am going to seriously look into this! (via Roland Tanglao)"
              },
              {
                "html": "<p>Simon Willison’s recent talk at Django 2022 (<a href=\"https://simonwillison.net/2022/Nov/26/productivity/\">Comping strategies for the serial project hoarder</a>) is fascinating! His proposal is to ensure that every project has comprehensive documentation and automated tests. I am going to seriously look into this! (via <a href=\"http://rolandtanglao.com/2022/11/26/p1-simon-willison-issue-oriented-development-including-documentation-tests/\">Roland Tanglao</a>)</p>",
                "value": "Simon Willison’s recent talk at Django 2022 (Comping strategies for the serial project hoarder) is fascinating! His proposal is to ensure that every project has comprehensive documentation and automated tests. I am going to seriously look into this! (via Roland Tanglao)"
              }
            ]
          },
          "id": "post-2714"
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "name": [
              "",
              ""
            ],
            "content": [
              {
                "html": "<div class=\"e-content\">\n<p>Lazyweb followup – After some testing with <a href=\"https://github.com/scripting/opmlPackage\">opmlPackage</a>, I figured out that I needed to get the OPML of my Zettelkasten file using <a href=\"http://drummer.scripting.com/AndySylvester99/Andy_Zettelkasten.opml\">this </a>URL and then selecting View Source and copying. Once I did that, I was able to process it using Pandoc.</p>\n</div>\n<div class=\"syndication-links\"></div>",
                "value": "Lazyweb followup – After some testing with opmlPackage, I figured out that I needed to get the OPML of my Zettelkasten file using this URL and then selecting View Source and copying. Once I did that, I was able to process it using Pandoc."
              },
              {
                "html": "<p>Lazyweb followup – After some testing with <a href=\"https://github.com/scripting/opmlPackage\">opmlPackage</a>, I figured out that I needed to get the OPML of my Zettelkasten file using <a href=\"http://drummer.scripting.com/AndySylvester99/Andy_Zettelkasten.opml\">this </a>URL and then selecting View Source and copying. Once I did that, I was able to process it using Pandoc.</p>",
                "value": "Lazyweb followup – After some testing with opmlPackage, I figured out that I needed to get the OPML of my Zettelkasten file using this URL and then selecting View Source and copying. Once I did that, I was able to process it using Pandoc."
              }
            ]
          },
          "id": "post-2710"
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "name": [
              "Test results for rssCloud app from Dave Winer",
              "Test results for rssCloud app from Dave Winer"
            ],
            "content": [
              {
                "html": "<div class=\"e-content\">\n<p>I couldn’t leave a comment on the <a href=\"https://github.com/scripting/reallysimple/issues/12\">reallySimple repo</a> for clouddemo.js (it appears to be locked), so I am writing a blog post.  I was able to run the app on port 443 and successfully register a WordPress.com site and a WordPress.org site using version 0.5.0 of the WordPress RSS Cloud plugin. When I ran my separate test script on the WordPress.org site, it worked, but I figured out that the WordPress.org site is caching the RSS feed, which explains why feed updates were not seen by FeedLand.</p>\n\n\n\n<p>The code for clouddemo.js looks good, I am pleased that it could run on port 443, since I already had an app running on port 80 on my server and did not want to change it.</p>\n</div>\n<div class=\"syndication-links\"></div>",
                "value": "I couldn’t leave a comment on the reallySimple repo for clouddemo.js (it appears to be locked), so I am writing a blog post.  I was able to run the app on port 443 and successfully register a WordPress.com site and a WordPress.org site using version 0.5.0 of the WordPress RSS Cloud plugin. When I ran my separate test script on the WordPress.org site, it worked, but I figured out that the WordPress.org site is caching the RSS feed, which explains why feed updates were not seen by FeedLand.\n\n\n\nThe code for clouddemo.js looks good, I am pleased that it could run on port 443, since I already had an app running on port 80 on my server and did not want to change it."
              },
              {
                "html": "<p>I couldn’t leave a comment on the <a href=\"https://github.com/scripting/reallysimple/issues/12\">reallySimple repo</a> for clouddemo.js (it appears to be locked), so I am writing a blog post.  I was able to run the app on port 443 and successfully register a WordPress.com site and a WordPress.org site using version 0.5.0 of the WordPress RSS Cloud plugin. When I ran my separate test script on the WordPress.org site, it worked, but I figured out that the WordPress.org site is caching the RSS feed, which explains why feed updates were not seen by FeedLand.</p>\n\n\n\n<p>The code for clouddemo.js looks good, I am pleased that it could run on port 443, since I already had an app running on port 80 on my server and did not want to change it.</p>",
                "value": "I couldn’t leave a comment on the reallySimple repo for clouddemo.js (it appears to be locked), so I am writing a blog post.  I was able to run the app on port 443 and successfully register a WordPress.com site and a WordPress.org site using version 0.5.0 of the WordPress RSS Cloud plugin. When I ran my separate test script on the WordPress.org site, it worked, but I figured out that the WordPress.org site is caching the RSS feed, which explains why feed updates were not seen by FeedLand.\n\n\n\nThe code for clouddemo.js looks good, I am pleased that it could run on port 443, since I already had an app running on port 80 on my server and did not want to change it."
              }
            ]
          },
          "id": "post-2707"
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "name": [
              "",
              ""
            ],
            "content": [
              {
                "html": "<div class=\"e-content\">\n<p>Lazyweb request – I tried converting my OPML Zettelkasten <a href=\"http://drummer.this.how/AndySylvester99/Andy_Zettelkasten.opml\">file</a> into Markdown using <a href=\"https://pandoc.org/\">Pandoc</a>, but got an “Invalid XML” error, because I have URLs within the outline elements. Any suggestions for fixing this? I am looking at <a href=\"https://github.com/scripting/opmlToJs\">opmlToJs </a>to get the OPML in JSON, then use <a href=\"https://www.npmjs.com/package/sanitize-html\">sanitize-html</a> to escape the URLs, then write it back out using <a href=\"https://github.com/scripting/opmlToJs\">opmlToJs</a>. Other suggestions welcome!</p>\n</div>\n<div class=\"syndication-links\"></div>",
                "value": "Lazyweb request – I tried converting my OPML Zettelkasten file into Markdown using Pandoc, but got an “Invalid XML” error, because I have URLs within the outline elements. Any suggestions for fixing this? I am looking at opmlToJs to get the OPML in JSON, then use sanitize-html to escape the URLs, then write it back out using opmlToJs. Other suggestions welcome!"
              },
              {
                "html": "<p>Lazyweb request – I tried converting my OPML Zettelkasten <a href=\"http://drummer.this.how/AndySylvester99/Andy_Zettelkasten.opml\">file</a> into Markdown using <a href=\"https://pandoc.org/\">Pandoc</a>, but got an “Invalid XML” error, because I have URLs within the outline elements. Any suggestions for fixing this? I am looking at <a href=\"https://github.com/scripting/opmlToJs\">opmlToJs </a>to get the OPML in JSON, then use <a href=\"https://www.npmjs.com/package/sanitize-html\">sanitize-html</a> to escape the URLs, then write it back out using <a href=\"https://github.com/scripting/opmlToJs\">opmlToJs</a>. Other suggestions welcome!</p>",
                "value": "Lazyweb request – I tried converting my OPML Zettelkasten file into Markdown using Pandoc, but got an “Invalid XML” error, because I have URLs within the outline elements. Any suggestions for fixing this? I am looking at opmlToJs to get the OPML in JSON, then use sanitize-html to escape the URLs, then write it back out using opmlToJs. Other suggestions welcome!"
              }
            ]
          },
          "id": "post-2705"
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "name": [
              "",
              ""
            ],
            "content": [
              {
                "html": "<div class=\"e-content\">\n<p>I was able to confirm this morning that <a href=\"http://walkthrough.rsscloud.co/\">rssCloud </a>support in <a href=\"http://feedland.org/\">FeedLand </a>worked for my WordPress.com test <a href=\"https://rsscloud4.wordpress.com/\">site </a>– hurray! Many thanks to <a href=\"https://blog.andrewshell.org/\">Andrew Shell</a> and <a href=\"http://scripting.com/?tab=blog\">Dave Winer</a> for working things out, along with support from <a href=\"https://blog.josephscott.org/\">Joseph Scott</a> at Automattic. Joseph Scott released a new version of the <a href=\"https://wordpress.org/plugins/rsscloud/\">RSS Cloud</a> plugin today for WordPress.org sites, I did an initial test, but FeedLand did not get a rssCloud update from my <a href=\"https://rsscloud.andysylvester.com/\">test site</a>. I got some <a href=\"https://gist.github.com/andrewshell/8b57f96bf62a1dea9fa1a8137e13951a?permalink_comment_id=4402647#gistcomment-4402647\">debug ideas</a> from Joseph Scott, working on those now.</p>\n</div>\n<div class=\"syndication-links\"></div>",
                "value": "I was able to confirm this morning that rssCloud support in FeedLand worked for my WordPress.com test site – hurray! Many thanks to Andrew Shell and Dave Winer for working things out, along with support from Joseph Scott at Automattic. Joseph Scott released a new version of the RSS Cloud plugin today for WordPress.org sites, I did an initial test, but FeedLand did not get a rssCloud update from my test site. I got some debug ideas from Joseph Scott, working on those now."
              },
              {
                "html": "<p>I was able to confirm this morning that <a href=\"http://walkthrough.rsscloud.co/\">rssCloud </a>support in <a href=\"http://feedland.org/\">FeedLand </a>worked for my WordPress.com test <a href=\"https://rsscloud4.wordpress.com/\">site </a>– hurray! Many thanks to <a href=\"https://blog.andrewshell.org/\">Andrew Shell</a> and <a href=\"http://scripting.com/?tab=blog\">Dave Winer</a> for working things out, along with support from <a href=\"https://blog.josephscott.org/\">Joseph Scott</a> at Automattic. Joseph Scott released a new version of the <a href=\"https://wordpress.org/plugins/rsscloud/\">RSS Cloud</a> plugin today for WordPress.org sites, I did an initial test, but FeedLand did not get a rssCloud update from my <a href=\"https://rsscloud.andysylvester.com/\">test site</a>. I got some <a href=\"https://gist.github.com/andrewshell/8b57f96bf62a1dea9fa1a8137e13951a?permalink_comment_id=4402647#gistcomment-4402647\">debug ideas</a> from Joseph Scott, working on those now.</p>",
                "value": "I was able to confirm this morning that rssCloud support in FeedLand worked for my WordPress.com test site – hurray! Many thanks to Andrew Shell and Dave Winer for working things out, along with support from Joseph Scott at Automattic. Joseph Scott released a new version of the RSS Cloud plugin today for WordPress.org sites, I did an initial test, but FeedLand did not get a rssCloud update from my test site. I got some debug ideas from Joseph Scott, working on those now."
              }
            ]
          },
          "id": "post-2703"
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "name": [
              "",
              ""
            ],
            "content": [
              {
                "html": "<div class=\"e-content\">\n<p>Update: I figured out that Gary Teter’s post I <a href=\"http://oldschool.scripting.com/AndySylvester99/2022/12/10.html\">referenced </a>on December 10 was not deleted from the FeedLand user view, so looks like it was my post that brought in the comment guidelines. I apologize for the error.</p>\n</div>\n<div class=\"syndication-links\"></div>",
                "value": "Update: I figured out that Gary Teter’s post I referenced on December 10 was not deleted from the FeedLand user view, so looks like it was my post that brought in the comment guidelines. I apologize for the error."
              },
              {
                "html": "<p>Update: I figured out that Gary Teter’s post I <a href=\"http://oldschool.scripting.com/AndySylvester99/2022/12/10.html\">referenced </a>on December 10 was not deleted from the FeedLand user view, so looks like it was my post that brought in the comment guidelines. I apologize for the error.</p>",
                "value": "Update: I figured out that Gary Teter’s post I referenced on December 10 was not deleted from the FeedLand user view, so looks like it was my post that brought in the comment guidelines. I apologize for the error."
              }
            ]
          },
          "id": "post-2699"
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "name": [
              "An unfortunate exercise of editorial discretion by Dave Winer?",
              "An unfortunate exercise of editorial discretion by Dave Winer?"
            ],
            "content": [
              {
                "html": "<div class=\"e-content\">\n<p><strong>Update: </strong>I figured out that Gary Teter’s post I <a href=\"https://andysylvester.com/2022/12/10/an-unfortunate-exercise-of-editorial-discretion-by-dave-winer/\">referenced</a> on December 10 was not deleted from the FeedLand user view, so looks like it was my post that brought in the comment guidelines. I apologize for the error.</p>\n\n\n\n<p>I have been following the development of <a href=\"http://feedland.org/\">FeedLand</a>, a new feed reader application from <a href=\"http://scripting.com/?tab=blog\">Dave Winer</a>. I have used many of the tools that Dave has developed over the years. One cost of using his tools is figuring out how to navigate a web of sometimes unclear expectations on support forums/repos. For the <a href=\"http://drummer.scripting.com/\">Drummer </a>application, it was made clear that problems related to Drummer were acceptable, but that was about all that was allowed.</p>\n\n\n\n<p>Recently, Dave Winer added two new features to FeedLand – a way for a user to make short posts and create a RSS feed, and a collected view/river of user posts. I took a look at the feature yesterday, and decided to make a short <a href=\"http://feedland.org/?item=845084\">post </a>comparing this experience in FeedLand to an app I use for reading posts by Drummer users who blog using the Old School blogging tool. Here is the text of the post:</p>\n\n\n\n<blockquote class=\"wp-block-quote\">\n<p>In response to Ken Smith’s <a href=\"http://feedland.org/?item=841964\">comment</a> on the Read user feeds feature in FeedLand, this is the sense of community that the <a href=\"https://oldschooldrummers.andysylvester.com/\">Old School Drummers</a> river has as well. However, with the ability to post new items as you read them, thee feedback loop tightens…which is a good thing…which is like Twitter/Mastodon…hmmmm…</p>\n<cite>Post on FeedLand feed</cite>\n</blockquote>\n\n\n\n<p>A little later, I decided to check to see if anyone had responded. What I found was my post in the user post view was deleted (the post was still present in my <a href=\"http://data.feedland.org/feeds/AndySylvester99.xml\">RSS feed</a>), and <a href=\"http://feedland.org/?item=846593\">this post</a> was now at the top of the view:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>I should’ve done this from the start, but I didn’t want to start off on a negative note. I’ve been hosting discussion groups on the net since the beginning and these days spam and abuse start pretty soon, and there’s no negotiating with it, you need clear rules and no tolerance.</p></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>So you have to have a policy ready, and I do — they’re called the <a href=\"http://guidelines.scripting.com/\">Comment Guidelines</a>, and they apply here. They’re easy to follow for most people, and we need them to protect against spam and abuse.</p></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>I’ll include a customized version in the Docs menu, soon. 😉</p></blockquote>\n\n\n\n<p>Wow (I thought to myself)! What was wrong with this? I decided to sleep on it and approach it fresh in the morning. I read through the “Comment Guidelines”, I think my item fell in the “No Spam” category (It’s not a place for you to promote your products, services, blog, initiatives, political causes. Don’t post spam. ) and the “No blog posts” category (2 sentences could be a blog post, I guess). Later this morning, I saw a <a href=\"http://oldschool.scripting.com/PostMonsterG/2022/12/09.html\">post </a>by Gary Teter that it appeared he had also fallen prey to deletion:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Apparently FeedLand’s “my feed” isn’t actually my feed, and is intended just for making comments about FeedLand. So I guess I will have to come up with some other way to make quick posts to the blog part from my phone. Disappointed.</p></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>As a proud union member who does not cross picket lines, turning off the New York Times feeds at the root level of FeedLand feels like the Musk approach. Unsubscribing from them on your own feed seems better to me. If there’s a social aspect to using FeedLand, it is users following each other’s curation judgments. Not the owner of the platform using the platform itself to express personal judgments.</p></blockquote>\n\n\n\n<p>It appears that the second paragraph of this quote was the offending <a href=\"http://feedland.org/?item=841009\">post</a>. </p>\n\n\n\n<p>So – where was the guidance of what to post and what not to post? I looked at the FeedLand Change Notes <a href=\"http://data.feedland.org/changenotes/\">blog</a>, and found the <a href=\"http://data.feedland.org/changenotes/2022/11/07/231800.html\">post </a>on creating a user RSS feed and the first <a href=\"http://data.feedland.org/changenotes/2022/12/04/150012.html\">post </a>on the User Feed View feature. There was where I found the key phrase:</p>\n\n\n\n<blockquote class=\"wp-block-quote\">\n<p>The rules of decorum apply here. There will be ways to block people, that’s inevitable. Feel free to discuss the product. Do not get personal, do not give anyone orders. Remember we’re here to have fun and make something new!</p>\n<cite>from FeedLand Change notes blog</cite>\n</blockquote>\n\n\n\n<p>So – read between the lines – this “user feed view” is a Dave Winer site, and is governed by the comment guidelines for his regular blog. I think Gary Teter said it best:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Apparently FeedLand’s “my feed” isn’t actually my feed, and is intended just for making comments about FeedLand. …Disappointed.</p></blockquote>\n</div>\n<div class=\"syndication-links\"></div>",
                "value": "Update: I figured out that Gary Teter’s post I referenced on December 10 was not deleted from the FeedLand user view, so looks like it was my post that brought in the comment guidelines. I apologize for the error.\n\n\n\nI have been following the development of FeedLand, a new feed reader application from Dave Winer. I have used many of the tools that Dave has developed over the years. One cost of using his tools is figuring out how to navigate a web of sometimes unclear expectations on support forums/repos. For the Drummer application, it was made clear that problems related to Drummer were acceptable, but that was about all that was allowed.\n\n\n\nRecently, Dave Winer added two new features to FeedLand – a way for a user to make short posts and create a RSS feed, and a collected view/river of user posts. I took a look at the feature yesterday, and decided to make a short post comparing this experience in FeedLand to an app I use for reading posts by Drummer users who blog using the Old School blogging tool. Here is the text of the post:\n\n\n\nIn response to Ken Smith’s comment on the Read user feeds feature in FeedLand, this is the sense of community that the Old School Drummers river has as well. However, with the ability to post new items as you read them, thee feedback loop tightens…which is a good thing…which is like Twitter/Mastodon…hmmmm…Post on FeedLand feed\n\n\n\nA little later, I decided to check to see if anyone had responded. What I found was my post in the user post view was deleted (the post was still present in my RSS feed), and this post was now at the top of the view:\n\n\n\nI should’ve done this from the start, but I didn’t want to start off on a negative note. I’ve been hosting discussion groups on the net since the beginning and these days spam and abuse start pretty soon, and there’s no negotiating with it, you need clear rules and no tolerance.\n\n\n\nSo you have to have a policy ready, and I do — they’re called the Comment Guidelines, and they apply here. They’re easy to follow for most people, and we need them to protect against spam and abuse.\n\n\n\nI’ll include a customized version in the Docs menu, soon. 😉\n\n\n\nWow (I thought to myself)! What was wrong with this? I decided to sleep on it and approach it fresh in the morning. I read through the “Comment Guidelines”, I think my item fell in the “No Spam” category (It’s not a place for you to promote your products, services, blog, initiatives, political causes. Don’t post spam. ) and the “No blog posts” category (2 sentences could be a blog post, I guess). Later this morning, I saw a post by Gary Teter that it appeared he had also fallen prey to deletion:\n\n\n\nApparently FeedLand’s “my feed” isn’t actually my feed, and is intended just for making comments about FeedLand. So I guess I will have to come up with some other way to make quick posts to the blog part from my phone. Disappointed.\n\n\n\nAs a proud union member who does not cross picket lines, turning off the New York Times feeds at the root level of FeedLand feels like the Musk approach. Unsubscribing from them on your own feed seems better to me. If there’s a social aspect to using FeedLand, it is users following each other’s curation judgments. Not the owner of the platform using the platform itself to express personal judgments.\n\n\n\nIt appears that the second paragraph of this quote was the offending post. \n\n\n\nSo – where was the guidance of what to post and what not to post? I looked at the FeedLand Change Notes blog, and found the post on creating a user RSS feed and the first post on the User Feed View feature. There was where I found the key phrase:\n\n\n\nThe rules of decorum apply here. There will be ways to block people, that’s inevitable. Feel free to discuss the product. Do not get personal, do not give anyone orders. Remember we’re here to have fun and make something new!from FeedLand Change notes blog\n\n\n\nSo – read between the lines – this “user feed view” is a Dave Winer site, and is governed by the comment guidelines for his regular blog. I think Gary Teter said it best:\n\n\n\nApparently FeedLand’s “my feed” isn’t actually my feed, and is intended just for making comments about FeedLand. …Disappointed."
              },
              {
                "html": "<p><strong>Update: </strong>I figured out that Gary Teter’s post I <a href=\"https://andysylvester.com/2022/12/10/an-unfortunate-exercise-of-editorial-discretion-by-dave-winer/\">referenced</a> on December 10 was not deleted from the FeedLand user view, so looks like it was my post that brought in the comment guidelines. I apologize for the error.</p>\n\n\n\n<p>I have been following the development of <a href=\"http://feedland.org/\">FeedLand</a>, a new feed reader application from <a href=\"http://scripting.com/?tab=blog\">Dave Winer</a>. I have used many of the tools that Dave has developed over the years. One cost of using his tools is figuring out how to navigate a web of sometimes unclear expectations on support forums/repos. For the <a href=\"http://drummer.scripting.com/\">Drummer </a>application, it was made clear that problems related to Drummer were acceptable, but that was about all that was allowed.</p>\n\n\n\n<p>Recently, Dave Winer added two new features to FeedLand – a way for a user to make short posts and create a RSS feed, and a collected view/river of user posts. I took a look at the feature yesterday, and decided to make a short <a href=\"http://feedland.org/?item=845084\">post </a>comparing this experience in FeedLand to an app I use for reading posts by Drummer users who blog using the Old School blogging tool. Here is the text of the post:</p>\n\n\n\n<blockquote class=\"wp-block-quote\">\n<p>In response to Ken Smith’s <a href=\"http://feedland.org/?item=841964\">comment</a> on the Read user feeds feature in FeedLand, this is the sense of community that the <a href=\"https://oldschooldrummers.andysylvester.com/\">Old School Drummers</a> river has as well. However, with the ability to post new items as you read them, thee feedback loop tightens…which is a good thing…which is like Twitter/Mastodon…hmmmm…</p>\n<cite>Post on FeedLand feed</cite>\n</blockquote>\n\n\n\n<p>A little later, I decided to check to see if anyone had responded. What I found was my post in the user post view was deleted (the post was still present in my <a href=\"http://data.feedland.org/feeds/AndySylvester99.xml\">RSS feed</a>), and <a href=\"http://feedland.org/?item=846593\">this post</a> was now at the top of the view:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>I should’ve done this from the start, but I didn’t want to start off on a negative note. I’ve been hosting discussion groups on the net since the beginning and these days spam and abuse start pretty soon, and there’s no negotiating with it, you need clear rules and no tolerance.</p></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>So you have to have a policy ready, and I do — they’re called the <a href=\"http://guidelines.scripting.com/\">Comment Guidelines</a>, and they apply here. They’re easy to follow for most people, and we need them to protect against spam and abuse.</p></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>I’ll include a customized version in the Docs menu, soon. 😉</p></blockquote>\n\n\n\n<p>Wow (I thought to myself)! What was wrong with this? I decided to sleep on it and approach it fresh in the morning. I read through the “Comment Guidelines”, I think my item fell in the “No Spam” category (It’s not a place for you to promote your products, services, blog, initiatives, political causes. Don’t post spam. ) and the “No blog posts” category (2 sentences could be a blog post, I guess). Later this morning, I saw a <a href=\"http://oldschool.scripting.com/PostMonsterG/2022/12/09.html\">post </a>by Gary Teter that it appeared he had also fallen prey to deletion:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Apparently FeedLand’s “my feed” isn’t actually my feed, and is intended just for making comments about FeedLand. So I guess I will have to come up with some other way to make quick posts to the blog part from my phone. Disappointed.</p></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>As a proud union member who does not cross picket lines, turning off the New York Times feeds at the root level of FeedLand feels like the Musk approach. Unsubscribing from them on your own feed seems better to me. If there’s a social aspect to using FeedLand, it is users following each other’s curation judgments. Not the owner of the platform using the platform itself to express personal judgments.</p></blockquote>\n\n\n\n<p>It appears that the second paragraph of this quote was the offending <a href=\"http://feedland.org/?item=841009\">post</a>. </p>\n\n\n\n<p>So – where was the guidance of what to post and what not to post? I looked at the FeedLand Change Notes <a href=\"http://data.feedland.org/changenotes/\">blog</a>, and found the <a href=\"http://data.feedland.org/changenotes/2022/11/07/231800.html\">post </a>on creating a user RSS feed and the first <a href=\"http://data.feedland.org/changenotes/2022/12/04/150012.html\">post </a>on the User Feed View feature. There was where I found the key phrase:</p>\n\n\n\n<blockquote class=\"wp-block-quote\">\n<p>The rules of decorum apply here. There will be ways to block people, that’s inevitable. Feel free to discuss the product. Do not get personal, do not give anyone orders. Remember we’re here to have fun and make something new!</p>\n<cite>from FeedLand Change notes blog</cite>\n</blockquote>\n\n\n\n<p>So – read between the lines – this “user feed view” is a Dave Winer site, and is governed by the comment guidelines for his regular blog. I think Gary Teter said it best:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Apparently FeedLand’s “my feed” isn’t actually my feed, and is intended just for making comments about FeedLand. …Disappointed.</p></blockquote>",
                "value": "Update: I figured out that Gary Teter’s post I referenced on December 10 was not deleted from the FeedLand user view, so looks like it was my post that brought in the comment guidelines. I apologize for the error.\n\n\n\nI have been following the development of FeedLand, a new feed reader application from Dave Winer. I have used many of the tools that Dave has developed over the years. One cost of using his tools is figuring out how to navigate a web of sometimes unclear expectations on support forums/repos. For the Drummer application, it was made clear that problems related to Drummer were acceptable, but that was about all that was allowed.\n\n\n\nRecently, Dave Winer added two new features to FeedLand – a way for a user to make short posts and create a RSS feed, and a collected view/river of user posts. I took a look at the feature yesterday, and decided to make a short post comparing this experience in FeedLand to an app I use for reading posts by Drummer users who blog using the Old School blogging tool. Here is the text of the post:\n\n\n\nIn response to Ken Smith’s comment on the Read user feeds feature in FeedLand, this is the sense of community that the Old School Drummers river has as well. However, with the ability to post new items as you read them, thee feedback loop tightens…which is a good thing…which is like Twitter/Mastodon…hmmmm…Post on FeedLand feed\n\n\n\nA little later, I decided to check to see if anyone had responded. What I found was my post in the user post view was deleted (the post was still present in my RSS feed), and this post was now at the top of the view:\n\n\n\nI should’ve done this from the start, but I didn’t want to start off on a negative note. I’ve been hosting discussion groups on the net since the beginning and these days spam and abuse start pretty soon, and there’s no negotiating with it, you need clear rules and no tolerance.\n\n\n\nSo you have to have a policy ready, and I do — they’re called the Comment Guidelines, and they apply here. They’re easy to follow for most people, and we need them to protect against spam and abuse.\n\n\n\nI’ll include a customized version in the Docs menu, soon. 😉\n\n\n\nWow (I thought to myself)! What was wrong with this? I decided to sleep on it and approach it fresh in the morning. I read through the “Comment Guidelines”, I think my item fell in the “No Spam” category (It’s not a place for you to promote your products, services, blog, initiatives, political causes. Don’t post spam. ) and the “No blog posts” category (2 sentences could be a blog post, I guess). Later this morning, I saw a post by Gary Teter that it appeared he had also fallen prey to deletion:\n\n\n\nApparently FeedLand’s “my feed” isn’t actually my feed, and is intended just for making comments about FeedLand. So I guess I will have to come up with some other way to make quick posts to the blog part from my phone. Disappointed.\n\n\n\nAs a proud union member who does not cross picket lines, turning off the New York Times feeds at the root level of FeedLand feels like the Musk approach. Unsubscribing from them on your own feed seems better to me. If there’s a social aspect to using FeedLand, it is users following each other’s curation judgments. Not the owner of the platform using the platform itself to express personal judgments.\n\n\n\nIt appears that the second paragraph of this quote was the offending post. \n\n\n\nSo – where was the guidance of what to post and what not to post? I looked at the FeedLand Change Notes blog, and found the post on creating a user RSS feed and the first post on the User Feed View feature. There was where I found the key phrase:\n\n\n\nThe rules of decorum apply here. There will be ways to block people, that’s inevitable. Feel free to discuss the product. Do not get personal, do not give anyone orders. Remember we’re here to have fun and make something new!from FeedLand Change notes blog\n\n\n\nSo – read between the lines – this “user feed view” is a Dave Winer site, and is governed by the comment guidelines for his regular blog. I think Gary Teter said it best:\n\n\n\nApparently FeedLand’s “my feed” isn’t actually my feed, and is intended just for making comments about FeedLand. …Disappointed."
              }
            ]
          },
          "id": "post-2694"
        }
      ]
    }
  ],
  "rels": {
    "profile": [
      "http://gmpg.org/xfn/11"
    ],
    "pingback": [
      "https://andysylvester.com/xmlrpc.php"
    ],
    "dns-prefetch": [
      "https://s.w.org/"
    ],
    "alternate": [
      "https://andysylvester.com/feed/",
      "https://andysylvester.com/comments/feed/"
    ],
    "stylesheet": [
      "https://andysylvester.com/wp-includes/css/dist/block-library/style.min.css?ver=5.9.5",
      "https://andysylvester.com/wp-content/plugins/indieweb/static/css/indieweb.css?ver=3.4.7",
      "https://andysylvester.com/wp-content/plugins/indieweb-post-kinds/css/kind.min.css?ver=3.6.2",
      "https://andysylvester.com/wp-content/plugins/semantic-linkbacks/css/semantic-linkbacks.css?ver=3.10.3",
      "https://andysylvester.com/wp-content/themes/independent-publisher/fonts/genericons/genericons.css?ver=3.1",
      "https://andysylvester.com/wp-content/themes/independent-publisher/style.css?ver=5.9.5",
      "https://andysylvester.com/wp-admin/admin-ajax.php?action=independent_publisher_customizer_css&ver=1.7",
      "https://andysylvester.com/wp-content/plugins/syndication-links/css/syn.min.css?ver=4.4.1"
    ],
    "https://api.w.org/": [
      "https://andysylvester.com/wp-json/"
    ],
    "EditURI": [
      "https://andysylvester.com/xmlrpc.php?rsd"
    ],
    "wlwmanifest": [
      "https://andysylvester.com/wp-includes/wlwmanifest.xml"
    ],
    "authorization_endpoint": [
      "https://andysylvester.com/wp-json/indieauth/1.0/auth"
    ],
    "token_endpoint": [
      "https://andysylvester.com/wp-json/indieauth/1.0/token"
    ],
    "indieauth-metadata": [
      "https://andysylvester.com/wp-json/indieauth/1.0/metadata"
    ],
    "me": [
      "https://github.com/andysylvester",
      "https://twitter.com/AndySylvester99"
    ],
    "micropub_media": [
      "https://andysylvester.com/wp-json/micropub/1.0/media"
    ],
    "micropub": [
      "https://andysylvester.com/wp-json/micropub/1.0/endpoint"
    ],
    "home": [
      "https://andysylvester.com/"
    ],
    "bookmark": [
      "https://andysylvester.com/2022/12/22/rsscloud-wordpress-feedland-and-dave-winer/",
      "https://andysylvester.com/2022/12/19/2718/",
      "https://andysylvester.com/2022/12/19/using-podcasting-as-a-teaching-tool/",
      "https://andysylvester.com/2022/12/19/2714/",
      "https://andysylvester.com/2022/12/17/2710/",
      "https://andysylvester.com/2022/12/17/test-results-for-rsscloud-app-from-dave-winer/",
      "https://andysylvester.com/2022/12/16/2705/",
      "https://andysylvester.com/2022/12/14/2703/",
      "https://andysylvester.com/2022/12/12/2699/",
      "https://andysylvester.com/2022/12/10/an-unfortunate-exercise-of-editorial-discretion-by-dave-winer/"
    ],
    "category": [
      "https://andysylvester.com/category/feed-readers/",
      "https://andysylvester.com/category/feeds/",
      "https://andysylvester.com/category/rsscloud/",
      "https://andysylvester.com/category/aviation/",
      "https://andysylvester.com/category/avionics/",
      "https://andysylvester.com/category/uncategorized/",
      "https://andysylvester.com/category/podcasting/",
      "https://andysylvester.com/category/teaching/",
      "https://andysylvester.com/category/productivity/",
      "https://andysylvester.com/category/opml/"
    ],
    "tag": [
      "https://andysylvester.com/category/feed-readers/",
      "https://andysylvester.com/category/feeds/",
      "https://andysylvester.com/category/rsscloud/",
      "https://andysylvester.com/category/aviation/",
      "https://andysylvester.com/category/avionics/",
      "https://andysylvester.com/category/uncategorized/",
      "https://andysylvester.com/category/podcasting/",
      "https://andysylvester.com/category/teaching/",
      "https://andysylvester.com/category/productivity/",
      "https://andysylvester.com/category/opml/"
    ],
    "designer": [
      "http://independentpublisher.me/"
    ],
    "generator": [
      "http://wordpress.org/"
    ]
  },
  "rel-urls": {
    "http://gmpg.org/xfn/11": {
      "rels": [
        "profile"
      ]
    },
    "https://andysylvester.com/xmlrpc.php": {
      "rels": [
        "pingback"
      ]
    },
    "https://s.w.org/": {
      "rels": [
        "dns-prefetch"
      ]
    },
    "https://andysylvester.com/feed/": {
      "rels": [
        "alternate"
      ],
      "title": "Andy Sylvester's Web » Feed",
      "type": "application/rss+xml"
    },
    "https://andysylvester.com/comments/feed/": {
      "rels": [
        "alternate"
      ],
      "title": "Andy Sylvester's Web » Comments Feed",
      "type": "application/rss+xml"
    },
    "https://andysylvester.com/wp-includes/css/dist/block-library/style.min.css?ver=5.9.5": {
      "rels": [
        "stylesheet"
      ],
      "media": "all",
      "type": "text/css"
    },
    "https://andysylvester.com/wp-content/plugins/indieweb/static/css/indieweb.css?ver=3.4.7": {
      "rels": [
        "stylesheet"
      ],
      "media": "all",
      "type": "text/css"
    },
    "https://andysylvester.com/wp-content/plugins/indieweb-post-kinds/css/kind.min.css?ver=3.6.2": {
      "rels": [
        "stylesheet"
      ],
      "media": "all",
      "type": "text/css"
    },
    "https://andysylvester.com/wp-content/plugins/semantic-linkbacks/css/semantic-linkbacks.css?ver=3.10.3": {
      "rels": [
        "stylesheet"
      ],
      "media": "all",
      "type": "text/css"
    },
    "https://andysylvester.com/wp-content/themes/independent-publisher/fonts/genericons/genericons.css?ver=3.1": {
      "rels": [
        "stylesheet"
      ],
      "media": "all",
      "type": "text/css"
    },
    "https://andysylvester.com/wp-content/themes/independent-publisher/style.css?ver=5.9.5": {
      "rels": [
        "stylesheet"
      ],
      "media": "all",
      "type": "text/css"
    },
    "https://andysylvester.com/wp-admin/admin-ajax.php?action=independent_publisher_customizer_css&ver=1.7": {
      "rels": [
        "stylesheet"
      ],
      "media": "all",
      "type": "text/css"
    },
    "https://andysylvester.com/wp-content/plugins/syndication-links/css/syn.min.css?ver=4.4.1": {
      "rels": [
        "stylesheet"
      ],
      "media": "all",
      "type": "text/css"
    },
    "https://andysylvester.com/wp-json/": {
      "rels": [
        "https://api.w.org/"
      ]
    },
    "https://andysylvester.com/xmlrpc.php?rsd": {
      "rels": [
        "EditURI"
      ],
      "title": "RSD",
      "type": "application/rsd+xml"
    },
    "https://andysylvester.com/wp-includes/wlwmanifest.xml": {
      "rels": [
        "wlwmanifest"
      ],
      "type": "application/wlwmanifest+xml"
    },
    "https://andysylvester.com/wp-json/indieauth/1.0/auth": {
      "rels": [
        "authorization_endpoint"
      ]
    },
    "https://andysylvester.com/wp-json/indieauth/1.0/token": {
      "rels": [
        "token_endpoint"
      ]
    },
    "https://andysylvester.com/wp-json/indieauth/1.0/metadata": {
      "rels": [
        "indieauth-metadata"
      ]
    },
    "https://github.com/andysylvester": {
      "rels": [
        "me"
      ]
    },
    "https://twitter.com/AndySylvester99": {
      "rels": [
        "me"
      ]
    },
    "https://andysylvester.com/wp-json/micropub/1.0/media": {
      "rels": [
        "micropub_media"
      ]
    },
    "https://andysylvester.com/wp-json/micropub/1.0/endpoint": {
      "rels": [
        "micropub"
      ]
    },
    "https://andysylvester.com/": {
      "rels": [
        "home"
      ],
      "title": "Andy Sylvester's Web"
    },
    "https://andysylvester.com/2022/12/22/rsscloud-wordpress-feedland-and-dave-winer/": {
      "rels": [
        "bookmark"
      ],
      "title": "Permalink to rssCloud, WordPress, FeedLand, and Dave Winer",
      "text": "rssCloud, WordPress, FeedLand, and Dave Winer"
    },
    "https://andysylvester.com/category/feed-readers/": {
      "rels": [
        "category",
        "tag"
      ],
      "text": "Feed Readers"
    },
    "https://andysylvester.com/category/feeds/": {
      "rels": [
        "category",
        "tag"
      ],
      "text": "Feeds"
    },
    "https://andysylvester.com/category/rsscloud/": {
      "rels": [
        "category",
        "tag"
      ],
      "text": "rssCloud"
    },
    "https://andysylvester.com/2022/12/19/2718/": {
      "rels": [
        "bookmark"
      ],
      "title": "Permalink to"
    },
    "https://andysylvester.com/category/aviation/": {
      "rels": [
        "category",
        "tag"
      ],
      "text": "Aviation"
    },
    "https://andysylvester.com/category/avionics/": {
      "rels": [
        "category",
        "tag"
      ],
      "text": "Avionics"
    },
    "https://andysylvester.com/category/uncategorized/": {
      "rels": [
        "category",
        "tag"
      ],
      "text": "Uncategorized"
    },
    "https://andysylvester.com/2022/12/19/using-podcasting-as-a-teaching-tool/": {
      "rels": [
        "bookmark"
      ],
      "title": "Permalink to Using podcasting as a teaching tool",
      "text": "Using podcasting as a teaching tool"
    },
    "https://andysylvester.com/category/podcasting/": {
      "rels": [
        "category",
        "tag"
      ],
      "text": "Podcasting"
    },
    "https://andysylvester.com/category/teaching/": {
      "rels": [
        "category",
        "tag"
      ],
      "text": "Teaching"
    },
    "https://andysylvester.com/2022/12/19/2714/": {
      "rels": [
        "bookmark"
      ],
      "title": "Permalink to"
    },
    "https://andysylvester.com/category/productivity/": {
      "rels": [
        "category",
        "tag"
      ],
      "text": "Productivity"
    },
    "https://andysylvester.com/2022/12/17/2710/": {
      "rels": [
        "bookmark"
      ],
      "title": "Permalink to"
    },
    "https://andysylvester.com/category/opml/": {
      "rels": [
        "category",
        "tag"
      ],
      "text": "OPML"
    },
    "https://andysylvester.com/2022/12/17/test-results-for-rsscloud-app-from-dave-winer/": {
      "rels": [
        "bookmark"
      ],
      "title": "Permalink to Test results for rssCloud app from Dave Winer",
      "text": "Test results for rssCloud app from Dave Winer"
    },
    "https://andysylvester.com/2022/12/16/2705/": {
      "rels": [
        "bookmark"
      ],
      "title": "Permalink to"
    },
    "https://andysylvester.com/2022/12/14/2703/": {
      "rels": [
        "bookmark"
      ],
      "title": "Permalink to"
    },
    "https://andysylvester.com/2022/12/12/2699/": {
      "rels": [
        "bookmark"
      ],
      "title": "Permalink to"
    },
    "https://andysylvester.com/2022/12/10/an-unfortunate-exercise-of-editorial-discretion-by-dave-winer/": {
      "rels": [
        "bookmark"
      ],
      "title": "Permalink to An unfortunate exercise of editorial discretion by Dave Winer?",
      "text": "An unfortunate exercise of editorial discretion by Dave Winer?"
    },
    "http://independentpublisher.me/": {
      "rels": [
        "designer"
      ],
      "title": "Independent Publisher: A beautiful reader-focused WordPress theme, for you.",
      "text": "Independent Publisher"
    },
    "http://wordpress.org/": {
      "rels": [
        "generator"
      ],
      "title": "WordPress: A free open-source publishing platform",
      "text": "WordPress"
    }
  }
}