{
  "items": [
    {
      "type": [
        "h-card"
      ],
      "properties": {
        "url": [
          "https://orangegnome.com/"
        ],
        "uid": [
          "https://orangegnome.com/"
        ],
        "photo": [
          {
            "value": "https://orangegnome.com/media/brent-2022.jpg",
            "alt": "Brent Lineberry"
          }
        ],
        "name": [
          "Brent Lineberry"
        ],
        "note": [
          "Web and app developer. Coffee, beer, and running, in any order."
        ]
      }
    },
    {
      "type": [
        "h-feed"
      ],
      "properties": {},
      "children": [
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "name": [
              "Jan. 9, 2023, 4:18 p.m."
            ],
            "content": [
              {
                "html": "<div class=\"article-content\">\n    <a href=\"https://orangegnome.com/photos/2268\"><img height=\"891\" width=\"1188\" class=\"u-photo\" src=\"https://orangegnomestorage.blob.core.windows.net/public/2023/01/09/9305ec6d712048a984504247752a7de2.jpeg\" alt=\"The back of a bag of polenta is shown. The cooking instructions for 2 portions involve 3/4 litre water, 1 glass of milk for 200 gr flour. For a single portion, it has instructions on storing uncooked polenta, not cooking instructions.\"></a>\n    <p class=\"p-content\">What kind of cooking instructions are these? A glass of milk? Is the “flour” the polenta? 200gr for 2 portions when a serving size is 75g?</p>\n</div>",
                "value": "The back of a bag of polenta is shown. The cooking instructions for 2 portions involve 3/4 litre water, 1 glass of milk for 200 gr flour. For a single portion, it has instructions on storing uncooked polenta, not cooking instructions. \n    What kind of cooking instructions are these? A glass of milk? Is the “flour” the polenta? 200gr for 2 portions when a serving size is 75g?"
              },
              "What kind of cooking instructions are these? A glass of milk? Is the “flour” the polenta? 200gr for 2 portions when a serving size is 75g?"
            ],
            "photo": [
              {
                "value": "https://orangegnomestorage.blob.core.windows.net/public/2023/01/09/9305ec6d712048a984504247752a7de2.jpeg",
                "alt": "The back of a bag of polenta is shown. The cooking instructions for 2 portions involve 3/4 litre water, 1 glass of milk for 200 gr flour. For a single portion, it has instructions on storing uncooked polenta, not cooking instructions."
              }
            ],
            "author": [
              {
                "type": [
                  "h-card"
                ],
                "properties": {
                  "name": [
                    "Brent Lineberry"
                  ]
                },
                "value": "Brent Lineberry"
              }
            ],
            "published": [
              "2023-01-09T16:18:50.144538-05:00"
            ],
            "category": [
              "Cooking",
              "Polenta"
            ],
            "url": [
              "https://orangegnome.com/photos/2268"
            ],
            "syndication": [
              "https://twitter.com/BrentLineberry/status/1612559711819145216",
              "https://mastodon.online/@brentlineberry/109661336220427329"
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "name": [
              "Jan. 9, 2023, 3:22 p.m."
            ],
            "content": [
              {
                "html": "<p>My Mastodon posts disappear from my home feed if I edit them. I’ve observed this in both the web app and on the Metatext app.</p>\n<p></p>\n<p>Is this known/expected behavior?\n                    </p>",
                "value": "My Mastodon posts disappear from my home feed if I edit them. I’ve observed this in both the web app and on the Metatext app.Is this known/expected behavior?"
              }
            ],
            "author": [
              {
                "type": [
                  "h-card"
                ],
                "properties": {
                  "name": [
                    "Brent Lineberry"
                  ]
                },
                "value": "Brent Lineberry"
              }
            ],
            "published": [
              "2023-01-09T15:22:34.664630-05:00"
            ],
            "category": [
              "Mastodon"
            ],
            "url": [
              "https://orangegnome.com/notes/2267"
            ],
            "syndication": [
              "https://mastodon.online/@brentlineberry/109661110873278575"
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "name": [
              "Training for the 2023 Nashville Marathon"
            ],
            "content": [
              {
                "html": "<p>I am in the beginning of training for my first marathon, the Nashville Rock ’n’ Roll marathon, and I thought I would share my training plan.\r\n\r\n</p>\n<p>I usually follow a <a href=\"https://www.goodreads.com/book/show/17862121-daniel-s-running-formula\">Jack Daniels training approach</a> with a few modifications. This plan is his “Novice” marathon plan with the following changes: \r\n</p>\n<ul>\r\n<li>The plan starts with run-walking, but progresses to runs longer than I have ever run. I am running the longer option of what I would normally run or what the plan calls for. Any time the plan calls for run-walking, I am running easy.\r\n</li>\n<li>The plan calls for marathon and threshold pace volumes that exceed his recommendations earlier in the book. In the spirit of “better to be under-trained than injured,” I am capping the volume of those workouts at the recommended amount.\r\n</li>\n<li>I have found that training in blocks of four weeks, with three weeks “up” and one week “down”, is helpful, both physically and mentally.\r\n</li>\n<li>I have a few races planned during the cycle. Those will replace the shorter workout for that week. The longer workout will move to mid-week.\r\n</li>\n<li>Perhaps the silliest thing I have done recently with my training is shift what constitutes “a week” based on the race date. So for this plan, the training week runs Saturday through Friday. It is a little brain-crampy, but not as bad as my last training cycle which ended with a race on Thursday, so my training week was Thursday through Wednesday.\r\n</li>\n</ul>\r\n\r\n<p>In the outlined plan, “E” is “Easy pace,” “M” is “Marathon pace”, and “T” is “Threshold pace”. These are 3 of the 5 training paces that Daniels outlines. Each pace is specific to an individual and their current fitness, as demonstrated in a recent race effort. “ST” is “Strides”, which are short, eased-in and eased-out, top-speed intervals with full recovery.\r\n\r\n</p>\n<p>Intervals are noted as <b>number of reps</b> x <b>interval</b> (<b>recovery</b>). So “5 x 3' T (2')” is 5 reps of 3 minutes at Threshold pace with 2 minute recoveries. \r\n\r\n</p>\n<p><a href=\"https://docs.google.com/spreadsheets/d/1r-luttq1GOV09ZgI9CGJLN3LyVB7BBi6xEVBz8CHwLw/edit?usp=sharing\">View a Google Sheets version of the plan.</a>\r\n\r\n<style>\r\n.descriptiontable dt {\r\n  font-weight: bold;\r\n}\r\n\r\n.descriptiontable dd dl {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.descriptiontable > dd + dt {\r\n  margin-top: 1em;\r\n}\r\n\r\n.descriptiontable dd dt {\r\n  flex-basis: 30%;\r\n}\r\n\r\n.descriptiontable dd dd {\r\n  flex-basis: 70%;\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n\r\n</p>\n<dl class=\"descriptiontable\">\r\n\t<dt>Week of 12/3</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>90' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>60' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>35' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>60' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>35' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>35' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>315</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\t<dt>Week of 12/10</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>90' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>60' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>35' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>60' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>35' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>35' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>315</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\t<dt>Week of 12/17</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>90' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>60' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>35' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>60' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>35' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>35' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>315</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\t<dt>Week of 12/24</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>70' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>45' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>25' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>45' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>25' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>25' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>235</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\r\n\t<dt>Week of 12/31</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>90' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>60' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>60' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>330</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\t<dt>Week of 1/7</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>90' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>60' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>60' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>330</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\t<dt>Week of 1/14</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>90' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>60' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>60' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>330</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\t<dt>Week of 1/21</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>20' E + 5 x 3' T (2') + 10 ST + 15' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>30' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>30' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>20' E + 3 x 5' T (2') + 15' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>30' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>30' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>246</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\r\n\t<dt>Week of 1/28</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>20' E + 5 x 3' T (2') + 10 ST + 30' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>20' E + 2 x 5' T (2') + 45' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>329</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\t<dt>Week of 2/4</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>35' E + 5' T + 50' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>15' E + 5 ST + 5' E + 20' T + 35' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>330</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\t<dt>Week of 2/11</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>35' E + 5' T + 50' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>15' E + 5 ST + 5' E + 20' T + 35' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>330</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\t<dt>Week of 2/18</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>90' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>20' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>20' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>20' E + 15' T + 40' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>20' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>20' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>245</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\r\n\t<dt>Week of 2/25</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>20' E + 2 x 6' T (2') + 60' E + 8' T + 15' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>35' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>20' E + 2 x 6' T (2') + 10' E  + 2 x 6' T (2') + 10' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>20' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>326</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\t<dt>Week of 3/4</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>10' E + 50' M + 45' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>20' E + 2 x 10' T (2') + 30' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>20' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>329</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\t<dt>Week of 3/11</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>120' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>20' E + 4 x 6' T (1') + 20' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>25' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>326</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\t<dt>Week of 3/18</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>20' E + 2 x 6' T (1') + 60' E + 6' T + 15' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>25' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>20' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>20' E + 10' T + 35' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>20' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>20' walk</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>247</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\r\n\t<dt>Week of 3/25</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>150' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>20' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>20' E + 2 x 10' T (2') + 20' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>35' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>20' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>329</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\t<dt>Week of 4/1</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>10' E + 50' M + 75' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>35' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>20' E + 2 x 12' T (2') + 10' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>40' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>20' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>328</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\t<dt>Week of 4/8</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>135' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>25' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>20' walk</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>20' E + 3 x 6' T (1') + 25' E</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>20' E</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>20' walk</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>246</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\t<dt>Week of 4/15</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>90' E</dd>\r\n\t\t\t<dt>Sunday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Monday</dt>\r\n\t\t\t<dd>20' E + 2 x 5' T (2') + 10' E</dd>\r\n\t\t\t<dt>Tuesday</dt>\r\n\t\t\t<dd>20' E</dd>\r\n\t\t\t<dt>Wednesday</dt>\r\n\t\t\t<dd>20' walk</dd>\r\n\t\t\t<dt>Thursday</dt>\r\n\t\t\t<dd>Rest day</dd>\r\n\t\t\t<dt>Friday</dt>\r\n\t\t\t<dd>20' E</dd>\r\n\t\t\t<dt>Total minutes</dt>\r\n\t\t\t<dd>174</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n\r\n\t<dt>Week of 4/22</dt>\r\n\t<dd>\r\n\t\t<dl>\r\n\t\t\t<dt>Saturday</dt>\r\n\t\t\t<dd>Race day!</dd>\r\n\t\t</dl>\r\n\t</dd>\r\n</dl>",
                "value": "I am in the beginning of training for my first marathon, the Nashville Rock ’n’ Roll marathon, and I thought I would share my training plan.\r\n\r\nI usually follow a Jack Daniels training approach with a few modifications. This plan is his “Novice” marathon plan with the following changes: \r\n\r\nThe plan starts with run-walking, but progresses to runs longer than I have ever run. I am running the longer option of what I would normally run or what the plan calls for. Any time the plan calls for run-walking, I am running easy.\r\nThe plan calls for marathon and threshold pace volumes that exceed his recommendations earlier in the book. In the spirit of “better to be under-trained than injured,” I am capping the volume of those workouts at the recommended amount.\r\nI have found that training in blocks of four weeks, with three weeks “up” and one week “down”, is helpful, both physically and mentally.\r\nI have a few races planned during the cycle. Those will replace the shorter workout for that week. The longer workout will move to mid-week.\r\nPerhaps the silliest thing I have done recently with my training is shift what constitutes “a week” based on the race date. So for this plan, the training week runs Saturday through Friday. It is a little brain-crampy, but not as bad as my last training cycle which ended with a race on Thursday, so my training week was Thursday through Wednesday.\r\n\r\n\r\nIn the outlined plan, “E” is “Easy pace,” “M” is “Marathon pace”, and “T” is “Threshold pace”. These are 3 of the 5 training paces that Daniels outlines. Each pace is specific to an individual and their current fitness, as demonstrated in a recent race effort. “ST” is “Strides”, which are short, eased-in and eased-out, top-speed intervals with full recovery.\r\n\r\nIntervals are noted as number of reps x interval (recovery). So “5 x 3' T (2')” is 5 reps of 3 minutes at Threshold pace with 2 minute recoveries. \r\n\r\nView a Google Sheets version of the plan.\r\n\r\n\r\n\r\n\r\n\tWeek of 12/3\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t90' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t60' E\r\n\t\t\tTuesday\r\n\t\t\t35' E\r\n\t\t\tWednesday\r\n\t\t\t60' E\r\n\t\t\tThursday\r\n\t\t\t35' E\r\n\t\t\tFriday\r\n\t\t\t35' E\r\n\t\t\tTotal minutes\r\n\t\t\t315\r\n\t\t\r\n\t\r\n\tWeek of 12/10\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t90' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t60' E\r\n\t\t\tTuesday\r\n\t\t\t35' E\r\n\t\t\tWednesday\r\n\t\t\t60' E\r\n\t\t\tThursday\r\n\t\t\t35' E\r\n\t\t\tFriday\r\n\t\t\t35' E\r\n\t\t\tTotal minutes\r\n\t\t\t315\r\n\t\t\r\n\t\r\n\tWeek of 12/17\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t90' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t60' E\r\n\t\t\tTuesday\r\n\t\t\t35' E\r\n\t\t\tWednesday\r\n\t\t\t60' E\r\n\t\t\tThursday\r\n\t\t\t35' E\r\n\t\t\tFriday\r\n\t\t\t35' E\r\n\t\t\tTotal minutes\r\n\t\t\t315\r\n\t\t\r\n\t\r\n\tWeek of 12/24\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t70' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t45' E\r\n\t\t\tTuesday\r\n\t\t\t25' E\r\n\t\t\tWednesday\r\n\t\t\t45' E\r\n\t\t\tThursday\r\n\t\t\t25' E\r\n\t\t\tFriday\r\n\t\t\t25' E\r\n\t\t\tTotal minutes\r\n\t\t\t235\r\n\t\t\r\n\t\r\n\r\n\tWeek of 12/31\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t90' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t60' E\r\n\t\t\tTuesday\r\n\t\t\t40' E\r\n\t\t\tWednesday\r\n\t\t\t60' E\r\n\t\t\tThursday\r\n\t\t\t40' E\r\n\t\t\tFriday\r\n\t\t\t40' E\r\n\t\t\tTotal minutes\r\n\t\t\t330\r\n\t\t\r\n\t\r\n\tWeek of 1/7\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t90' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t60' E\r\n\t\t\tTuesday\r\n\t\t\t40' E\r\n\t\t\tWednesday\r\n\t\t\t60' E\r\n\t\t\tThursday\r\n\t\t\t40' E\r\n\t\t\tFriday\r\n\t\t\t40' E\r\n\t\t\tTotal minutes\r\n\t\t\t330\r\n\t\t\r\n\t\r\n\tWeek of 1/14\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t90' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t60' E\r\n\t\t\tTuesday\r\n\t\t\t40' E\r\n\t\t\tWednesday\r\n\t\t\t60' E\r\n\t\t\tThursday\r\n\t\t\t40' E\r\n\t\t\tFriday\r\n\t\t\t40' E\r\n\t\t\tTotal minutes\r\n\t\t\t330\r\n\t\t\r\n\t\r\n\tWeek of 1/21\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t20' E + 5 x 3' T (2') + 10 ST + 15' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t30' E\r\n\t\t\tTuesday\r\n\t\t\t30' E\r\n\t\t\tWednesday\r\n\t\t\t20' E + 3 x 5' T (2') + 15' E\r\n\t\t\tThursday\r\n\t\t\t30' E\r\n\t\t\tFriday\r\n\t\t\t30' E\r\n\t\t\tTotal minutes\r\n\t\t\t246\r\n\t\t\r\n\t\r\n\r\n\tWeek of 1/28\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t20' E + 5 x 3' T (2') + 10 ST + 30' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t40' E\r\n\t\t\tTuesday\r\n\t\t\t40' E\r\n\t\t\tWednesday\r\n\t\t\t20' E + 2 x 5' T (2') + 45' E\r\n\t\t\tThursday\r\n\t\t\t40' E\r\n\t\t\tFriday\r\n\t\t\t40' E\r\n\t\t\tTotal minutes\r\n\t\t\t329\r\n\t\t\r\n\t\r\n\tWeek of 2/4\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t35' E + 5' T + 50' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t40' E\r\n\t\t\tTuesday\r\n\t\t\t40' E\r\n\t\t\tWednesday\r\n\t\t\t15' E + 5 ST + 5' E + 20' T + 35' E\r\n\t\t\tThursday\r\n\t\t\t40' E\r\n\t\t\tFriday\r\n\t\t\t40' E\r\n\t\t\tTotal minutes\r\n\t\t\t330\r\n\t\t\r\n\t\r\n\tWeek of 2/11\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t35' E + 5' T + 50' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t40' E\r\n\t\t\tTuesday\r\n\t\t\t40' E\r\n\t\t\tWednesday\r\n\t\t\t15' E + 5 ST + 5' E + 20' T + 35' E\r\n\t\t\tThursday\r\n\t\t\t40' E\r\n\t\t\tFriday\r\n\t\t\t40' E\r\n\t\t\tTotal minutes\r\n\t\t\t330\r\n\t\t\r\n\t\r\n\tWeek of 2/18\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t90' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t20' E\r\n\t\t\tTuesday\r\n\t\t\t20' E\r\n\t\t\tWednesday\r\n\t\t\t20' E + 15' T + 40' E\r\n\t\t\tThursday\r\n\t\t\t20' E\r\n\t\t\tFriday\r\n\t\t\t20' E\r\n\t\t\tTotal minutes\r\n\t\t\t245\r\n\t\t\r\n\t\r\n\r\n\tWeek of 2/25\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t20' E + 2 x 6' T (2') + 60' E + 8' T + 15' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t40' E\r\n\t\t\tTuesday\r\n\t\t\t35' E\r\n\t\t\tWednesday\r\n\t\t\t20' E + 2 x 6' T (2') + 10' E  + 2 x 6' T (2') + 10' E\r\n\t\t\tThursday\r\n\t\t\t40' E\r\n\t\t\tFriday\r\n\t\t\t20' E\r\n\t\t\tTotal minutes\r\n\t\t\t326\r\n\t\t\r\n\t\r\n\tWeek of 3/4\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t10' E + 50' M + 45' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t40' E\r\n\t\t\tTuesday\r\n\t\t\t40' E\r\n\t\t\tWednesday\r\n\t\t\t20' E + 2 x 10' T (2') + 30' E\r\n\t\t\tThursday\r\n\t\t\t40' E\r\n\t\t\tFriday\r\n\t\t\t20' E\r\n\t\t\tTotal minutes\r\n\t\t\t329\r\n\t\t\r\n\t\r\n\tWeek of 3/11\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t120' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t40' E\r\n\t\t\tTuesday\r\n\t\t\t40' E\r\n\t\t\tWednesday\r\n\t\t\t20' E + 4 x 6' T (1') + 20' E\r\n\t\t\tThursday\r\n\t\t\t40' E\r\n\t\t\tFriday\r\n\t\t\t25' E\r\n\t\t\tTotal minutes\r\n\t\t\t326\r\n\t\t\r\n\t\r\n\tWeek of 3/18\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t20' E + 2 x 6' T (1') + 60' E + 6' T + 15' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t25' E\r\n\t\t\tTuesday\r\n\t\t\t20' E\r\n\t\t\tWednesday\r\n\t\t\t20' E + 10' T + 35' E\r\n\t\t\tThursday\r\n\t\t\t20' E\r\n\t\t\tFriday\r\n\t\t\t20' walk\r\n\t\t\tTotal minutes\r\n\t\t\t247\r\n\t\t\r\n\t\r\n\r\n\tWeek of 3/25\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t150' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t40' E\r\n\t\t\tTuesday\r\n\t\t\t20' E\r\n\t\t\tWednesday\r\n\t\t\t20' E + 2 x 10' T (2') + 20' E\r\n\t\t\tThursday\r\n\t\t\t35' E\r\n\t\t\tFriday\r\n\t\t\t20' E\r\n\t\t\tTotal minutes\r\n\t\t\t329\r\n\t\t\r\n\t\r\n\tWeek of 4/1\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t10' E + 50' M + 75' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t40' E\r\n\t\t\tTuesday\r\n\t\t\t35' E\r\n\t\t\tWednesday\r\n\t\t\t20' E + 2 x 12' T (2') + 10' E\r\n\t\t\tThursday\r\n\t\t\t40' E\r\n\t\t\tFriday\r\n\t\t\t20' E\r\n\t\t\tTotal minutes\r\n\t\t\t328\r\n\t\t\r\n\t\r\n\tWeek of 4/8\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t135' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t25' E\r\n\t\t\tTuesday\r\n\t\t\t20' walk\r\n\t\t\tWednesday\r\n\t\t\t20' E + 3 x 6' T (1') + 25' E\r\n\t\t\tThursday\r\n\t\t\t20' E\r\n\t\t\tFriday\r\n\t\t\t20' walk\r\n\t\t\tTotal minutes\r\n\t\t\t246\r\n\t\t\r\n\t\r\n\tWeek of 4/15\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\t90' E\r\n\t\t\tSunday\r\n\t\t\tRest day\r\n\t\t\tMonday\r\n\t\t\t20' E + 2 x 5' T (2') + 10' E\r\n\t\t\tTuesday\r\n\t\t\t20' E\r\n\t\t\tWednesday\r\n\t\t\t20' walk\r\n\t\t\tThursday\r\n\t\t\tRest day\r\n\t\t\tFriday\r\n\t\t\t20' E\r\n\t\t\tTotal minutes\r\n\t\t\t174\r\n\t\t\r\n\t\r\n\r\n\tWeek of 4/22\r\n\t\r\n\t\t\r\n\t\t\tSaturday\r\n\t\t\tRace day!"
              }
            ],
            "author": [
              {
                "type": [
                  "h-card"
                ],
                "properties": {
                  "name": [
                    "Brent Lineberry"
                  ]
                },
                "value": "Brent Lineberry"
              }
            ],
            "published": [
              "2023-01-08T15:27:41.087076-05:00"
            ],
            "category": [
              "Running",
              "Running",
              "Jack Daniels",
              "Nashville Rock ’n’ Roll Marathon"
            ],
            "url": [
              "https://orangegnome.com/posts/2266/training-for-the-2023-nashville-marathon"
            ],
            "syndication": [
              "https://twitter.com/BrentLineberry/status/1612508536331722763",
              "https://mastodon.online/@brentlineberry/109660534821388435"
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "name": [
              "Jan. 7, 2023, 1:18 p.m."
            ],
            "content": [
              {
                "html": "<p>I love when I get to the end of a chunk of work and I get to close all the tabs I’ve collected in the process.</p>\n<p></p>\n<p>At work I document the sites I found helpful along the way in a wiki shared with my team.\n                    </p>",
                "value": "I love when I get to the end of a chunk of work and I get to close all the tabs I’ve collected in the process.At work I document the sites I found helpful along the way in a wiki shared with my team."
              }
            ],
            "author": [
              {
                "type": [
                  "h-card"
                ],
                "properties": {
                  "name": [
                    "Brent Lineberry"
                  ]
                },
                "value": "Brent Lineberry"
              }
            ],
            "published": [
              "2023-01-07T13:18:56.236765-05:00"
            ],
            "category": [
              "Web Development"
            ],
            "url": [
              "https://orangegnome.com/notes/2265"
            ],
            "syndication": [
              "https://twitter.com/BrentLineberry/status/1611789496978210818",
              "https://mastodon.online/@brentlineberry/109649302446357055"
            ]
          }
        },
        {
          "type": [
            "h-entry"
          ],
          "properties": {
            "name": [
              "Posting Images to Mastodon with Django ImageField"
            ],
            "content": [
              {
                "html": "<p>I just finished adding support for Photo posts to my website with the ability to syndicate to both Twitter and Mastodon. I ran into several sticking points with the Mastodon integration.\r\n\r\n</p>\n<h2>Put the file in the <code>files</code> parameter of <code>requests.post</code> and the other data in <code>data</code>\n</h2>\r\n<p>I found the documentation a little confusing here, especially in how to follow it using python's <code>requests</code> module.\r\n\r\n</p>\n<p>The documentation specifies that a media upload should have a <code>file</code> “form data parameter”, which is the file to be attached ”encoded using multipart form data.”\r\n\r\n</p>\n<p>In <code>requests.post</code>, there's a <code>file</code> parameter for multipart form data and a <code>data</code> parameter for form data. In my testing with Postman, using form-data for the body and a “file” as the type of value for the <code>file</code> value worked fine. But putting it all in <code>data</code> for the <code>requests.post</code> did not work.\r\n\r\n</p>\n<p>What ended up working was putting the file in the <code>files</code> parameter and the rest of the media fields in the <code>data</code> parameter.\r\n\r\n</p>\n<h2>The <code>ImageField</code> <em>is</em> the file</h2>\r\n<p>It took a lot of trial and error, complicated by the above issue with <code>requests</code>, but I finally discovered that I can pass the <code>ImageField</code> itself as the file. <code>requests</code> wants it as a tuple though: <code>file = (image_field.name.split('/')[-1], image_field)</code>.\r\n\r\n</p>\n<h2>The <code>media_ids[]</code> parameter is literally <code>media_ids[]</code>\n</h2>\r\n<p>The Mastodon API uses a two-stepped approach to publish a status with media: first you upload the media, then you publish the status with the ids of the uploaded media.\r\n\r\n</p>\n<p>The status request field is “media_ids[]”, which is an “Array of String”. The key in the <code>data</code> parameter needs to be exactly <code>media_ids[]</code>, with the two square brackets, and the ids need to be a python list. My unsuccessful attempts used <code>media_ids</code>, without the brackets, and all kind of permutations of list-like syntaxes, but what is needed is <code>\"media_ids[]\": [media_id]</code>.\r\n\r\n</p>\n<h2>Code</h2>\r\n<p>My code is spread across various <code>models.py</code>, <code>admin.py</code>, and helper modules, but here are the key parts consolidated:\r\n\r\n</p>\n<p>From <a href=\"https://github.com/blineberry/orangegnome/pull/98/files#diff-1b5375108f44157c7644c3a7a3e3f0d3683c94854443384fb02af423bbd4cb73R79-R81\"><code>SyndicatableAdmin</code></a>, which <code>PhotoAdmin</code> inherits:\r\n</p>\n<pre><code>def _syndicate_to_mastodon(self, request, obj):\r\n    # ...\r\n\r\n        media = obj.get_mastodon_media_upload()\r\n        status = obj.get_mastodon_status_update()\r\n        response = Syndication.syndicate_to_mastodon(status, media)\r\n\r\n    # ...</code></pre>\r\n\r\n<p><a href=\"https://github.com/blineberry/orangegnome/pull/98/files#diff-f4ee3bf842926d7c0f89ecdfad3c8c67ac42adc81aff5c5326cc6ba923a5da37R360-R369\"><code>MastodonMediaUpload</code></a>:\r\n</p>\n<pre><code>class MastodonMediaUpload(object):\r\n    def __init__(self, file, thumbnail=None, description=None, focus=None):\r\n        self.file = file\r\n        self.thumbnail = thumbnail\r\n        self.description = description\r\n        self.focus = focus</code></pre>\r\n\r\n<p>From <a href=\"https://github.com/blineberry/orangegnome/pull/98/files#diff-f4ee3bf842926d7c0f89ecdfad3c8c67ac42adc81aff5c5326cc6ba923a5da37R434-R443\"><code>MastodonSyndicatable</code></a> which the <code>Photo</code> model inherits:\r\n</p>\n<pre><code>class MastodonSyndicatable(models.Model):\r\n    # ...\r\n\r\n        def get_mastodon_media_upload(self):\r\n            if not self.has_mastodon_media():\r\n                return None\r\n\r\n            media = self.get_mastodon_media_image_field()\r\n            file = (media.name.split('/')[-1], media)\r\n\r\n            media_upload = MastodonMediaUpload(file, description=self.get_mastodon_media_description())\r\n            return media_upload\r\n\r\n    # ...</code></pre>\r\n\r\n<p>From <a href=\"https://github.com/blineberry/orangegnome/pull/98/files#diff-f4ee3bf842926d7c0f89ecdfad3c8c67ac42adc81aff5c5326cc6ba923a5da37R52-R59\"><code>Syndication</code></a>, a service class for syndication methods:\r\n</p>\n<pre><code>class Syndication():\r\n    # ...\r\n\r\n    @staticmethod\r\n    def syndicate_to_mastodon(status=None, media=None):\r\n        if media is not None:\r\n            response = MastodonClient.post_media(media.file, media.thumbnail, media.description, media.focus)\r\n\r\n            if status is not None:\r\n                status.media_ids = [response['id']]\r\n\r\n        return MastodonClient.post_status(status.status, status.idempotency_key, status.in_reply_to_id, status.media_ids)\r\n\r\n    # ...</code></pre>\r\n\r\n<p>From the <a href=\"https://github.com/blineberry/orangegnome/pull/98/files#diff-c331587609e892d5d73e4961340e72e55ef80372bf1c79fa1f05ed3f90563682R58-R101\">Mastodon <code>Client</code></a> service class:\r\n</p>\n<pre><code>class MastodonClient(object):\r\n    # ...\r\n\r\n    @staticmethod\r\n    def post_media(file, thumbnail=None, description=None, focus=None):\r\n        files = {\r\n            'file': file\r\n        }\r\n\r\n        data = {}\r\n\r\n        if thumbnail is not None:\r\n            data['thumbnail'] = thumbnail\r\n        \r\n        if description is not None:\r\n            data['description'] = description\r\n\r\n        if focus is not None:\r\n            data['focus'] = focus\r\n\r\n        headers = {\r\n            'Authorization': Client.get_auth_header(),\r\n        }\r\n\r\n        response = requests.post(Client.get_v2_url() + '/media', files=files, data=data, headers=headers)\r\n\r\n        response.raise_for_status()\r\n\r\n        return response.json()\r\n\r\n    @staticmethod\r\n    def post_status(status, idempotency_key, in_reply_to_id=None, media_ids=None, visibility='direct'):\r\n        data = {\r\n            'status': status,\r\n            'visibility': visibility\r\n        }\r\n\r\n        if in_reply_to_id is not None:\r\n            data['in_reply_to_id'] = in_reply_to_id\r\n\r\n        if media_ids is not None:\r\n            data['media_ids[]'] = media_ids\r\n\r\n        headers = {\r\n            'Authorization': Client.get_auth_header()\r\n            #'Idempotency-Key': idempotency_key # need to figure out how to use a value for this that updates after model saves.\r\n        }\r\n\r\n        response = requests.post(Client.get_v1_url() + '/statuses', data=data, headers=headers)\r\n\r\n        response.raise_for_status()\r\n\r\n        return response.json()\r\n\r\n    #...</code></pre>",
                "value": "I just finished adding support for Photo posts to my website with the ability to syndicate to both Twitter and Mastodon. I ran into several sticking points with the Mastodon integration.\r\n\r\nPut the file in the files parameter of requests.post and the other data in data\r\nI found the documentation a little confusing here, especially in how to follow it using python's requests module.\r\n\r\nThe documentation specifies that a media upload should have a file “form data parameter”, which is the file to be attached ”encoded using multipart form data.”\r\n\r\nIn requests.post, there's a file parameter for multipart form data and a data parameter for form data. In my testing with Postman, using form-data for the body and a “file” as the type of value for the file value worked fine. But putting it all in data for the requests.post did not work.\r\n\r\nWhat ended up working was putting the file in the files parameter and the rest of the media fields in the data parameter.\r\n\r\nThe ImageField is the file\r\nIt took a lot of trial and error, complicated by the above issue with requests, but I finally discovered that I can pass the ImageField itself as the file. requests wants it as a tuple though: file = (image_field.name.split('/')[-1], image_field).\r\n\r\nThe media_ids[] parameter is literally media_ids[]\r\nThe Mastodon API uses a two-stepped approach to publish a status with media: first you upload the media, then you publish the status with the ids of the uploaded media.\r\n\r\nThe status request field is “media_ids[]”, which is an “Array of String”. The key in the data parameter needs to be exactly media_ids[], with the two square brackets, and the ids need to be a python list. My unsuccessful attempts used media_ids, without the brackets, and all kind of permutations of list-like syntaxes, but what is needed is \"media_ids[]\": [media_id].\r\n\r\nCode\r\nMy code is spread across various models.py, admin.py, and helper modules, but here are the key parts consolidated:\r\n\r\nFrom SyndicatableAdmin, which PhotoAdmin inherits:\r\ndef _syndicate_to_mastodon(self, request, obj):\r\n    # ...\r\n\r\n        media = obj.get_mastodon_media_upload()\r\n        status = obj.get_mastodon_status_update()\r\n        response = Syndication.syndicate_to_mastodon(status, media)\r\n\r\n    # ...\r\n\r\nMastodonMediaUpload:\r\nclass MastodonMediaUpload(object):\r\n    def __init__(self, file, thumbnail=None, description=None, focus=None):\r\n        self.file = file\r\n        self.thumbnail = thumbnail\r\n        self.description = description\r\n        self.focus = focus\r\n\r\nFrom MastodonSyndicatable which the Photo model inherits:\r\nclass MastodonSyndicatable(models.Model):\r\n    # ...\r\n\r\n        def get_mastodon_media_upload(self):\r\n            if not self.has_mastodon_media():\r\n                return None\r\n\r\n            media = self.get_mastodon_media_image_field()\r\n            file = (media.name.split('/')[-1], media)\r\n\r\n            media_upload = MastodonMediaUpload(file, description=self.get_mastodon_media_description())\r\n            return media_upload\r\n\r\n    # ...\r\n\r\nFrom Syndication, a service class for syndication methods:\r\nclass Syndication():\r\n    # ...\r\n\r\n    @staticmethod\r\n    def syndicate_to_mastodon(status=None, media=None):\r\n        if media is not None:\r\n            response = MastodonClient.post_media(media.file, media.thumbnail, media.description, media.focus)\r\n\r\n            if status is not None:\r\n                status.media_ids = [response['id']]\r\n\r\n        return MastodonClient.post_status(status.status, status.idempotency_key, status.in_reply_to_id, status.media_ids)\r\n\r\n    # ...\r\n\r\nFrom the Mastodon Client service class:\r\nclass MastodonClient(object):\r\n    # ...\r\n\r\n    @staticmethod\r\n    def post_media(file, thumbnail=None, description=None, focus=None):\r\n        files = {\r\n            'file': file\r\n        }\r\n\r\n        data = {}\r\n\r\n        if thumbnail is not None:\r\n            data['thumbnail'] = thumbnail\r\n        \r\n        if description is not None:\r\n            data['description'] = description\r\n\r\n        if focus is not None:\r\n            data['focus'] = focus\r\n\r\n        headers = {\r\n            'Authorization': Client.get_auth_header(),\r\n        }\r\n\r\n        response = requests.post(Client.get_v2_url() + '/media', files=files, data=data, headers=headers)\r\n\r\n        response.raise_for_status()\r\n\r\n        return response.json()\r\n\r\n    @staticmethod\r\n    def post_status(status, idempotency_key, in_reply_to_id=None, media_ids=None, visibility='direct'):\r\n        data = {\r\n            'status': status,\r\n            'visibility': visibility\r\n        }\r\n\r\n        if in_reply_to_id is not None:\r\n            data['in_reply_to_id'] = in_reply_to_id\r\n\r\n        if media_ids is not None:\r\n            data['media_ids[]'] = media_ids\r\n\r\n        headers = {\r\n            'Authorization': Client.get_auth_header()\r\n            #'Idempotency-Key': idempotency_key # need to figure out how to use a value for this that updates after model saves.\r\n        }\r\n\r\n        response = requests.post(Client.get_v1_url() + '/statuses', data=data, headers=headers)\r\n\r\n        response.raise_for_status()\r\n\r\n        return response.json()\r\n\r\n    #..."
              }
            ],
            "author": [
              {
                "type": [
                  "h-card"
                ],
                "properties": {
                  "name": [
                    "Brent Lineberry"
                  ]
                },
                "value": "Brent Lineberry"
              }
            ],
            "published": [
              "2023-01-07T12:28:04.591972-05:00"
            ],
            "category": [
              "Web Development",
              "Django",
              "Web Development",
              "Mastodon",
              "Mastodon API",
              "IndieWeb"
            ],
            "url": [
              "https://orangegnome.com/posts/2264/posting-images-to-mastodon-with-django-imagefield"
            ],
            "syndication": [
              "https://twitter.com/BrentLineberry/status/1611787166950080512",
              "https://mastodon.online/@brentlineberry/109649234902606735"
            ]
          }
        }
      ]
    }
  ],
  "rels": {
    "stylesheet": [
      "https://orangegnome.com/static/base/css/style.39e097d68aeb.css",
      "https://orangegnome.com/static/base/js/libs/highlight/styles/default.min.a0e6a195bb37.css"
    ],
    "icon": [
      "https://orangegnome.com/media/brent-2022.jpg"
    ],
    "apple-touch-icon-precomposed": [
      "https://orangegnome.com/media/brent-2022.jpg"
    ],
    "canonical": [
      "https://orangegnome.com/"
    ],
    "alternate": [
      "https://orangegnome.com/feed"
    ],
    "me": [
      "https://orangegnome.com/",
      "https://www.strava.com/athletes/brentlineberry",
      "https://instagram.com/BrentLineberry",
      "https://twitter.com/brentlineberry",
      "https://github.com/blineberry",
      "https://mastodon.online/@brentlineberry"
    ],
    "tag": [
      "https://orangegnome.com/tag/504/cooking",
      "https://orangegnome.com/tag/540/polenta",
      "https://orangegnome.com/tag/535/mastodon",
      "https://orangegnome.com/posts/category/17/running",
      "https://orangegnome.com/tag/166/running",
      "https://orangegnome.com/tag/538/jack-daniels",
      "https://orangegnome.com/tag/539/nashville-rock-n-roll-marathon",
      "https://orangegnome.com/tag/267/webdevelopment",
      "https://orangegnome.com/posts/category/13/web-development",
      "https://orangegnome.com/tag/246/django",
      "https://orangegnome.com/tag/536/mastodon-api",
      "https://orangegnome.com/tag/537/indieweb"
    ],
    "category": [
      "https://orangegnome.com/posts/category/17/running",
      "https://orangegnome.com/posts/category/13/web-development"
    ]
  },
  "rel-urls": {
    "https://orangegnome.com/static/base/css/style.39e097d68aeb.css": {
      "rels": [
        "stylesheet"
      ]
    },
    "https://orangegnome.com/static/base/js/libs/highlight/styles/default.min.a0e6a195bb37.css": {
      "rels": [
        "stylesheet"
      ]
    },
    "https://orangegnome.com/media/brent-2022.jpg": {
      "rels": [
        "icon"
      ]
    },
    "https://orangegnome.com/": {
      "rels": [
        "canonical"
      ]
    },
    "https://orangegnome.com/feed": {
      "rels": [
        "alternate"
      ],
      "title": "Latest entries from Brent Lineberry.",
      "type": "application/rss+xml"
    },
    "https://www.strava.com/athletes/brentlineberry": {
      "rels": [
        "me"
      ],
      "text": "Strava"
    },
    "https://instagram.com/BrentLineberry": {
      "rels": [
        "me"
      ],
      "text": "Instagram"
    },
    "https://twitter.com/brentlineberry": {
      "rels": [
        "me"
      ],
      "text": "Twitter"
    },
    "https://github.com/blineberry": {
      "rels": [
        "me"
      ],
      "text": "GitHub"
    },
    "https://mastodon.online/@brentlineberry": {
      "rels": [
        "me"
      ],
      "text": "Mastodon"
    },
    "https://orangegnome.com/tag/504/cooking": {
      "rels": [
        "tag"
      ],
      "text": "Cooking"
    },
    "https://orangegnome.com/tag/540/polenta": {
      "rels": [
        "tag"
      ],
      "text": "Polenta"
    },
    "https://orangegnome.com/tag/535/mastodon": {
      "rels": [
        "tag"
      ],
      "text": "Mastodon"
    },
    "https://orangegnome.com/posts/category/17/running": {
      "rels": [
        "category",
        "tag"
      ],
      "text": "Running"
    },
    "https://orangegnome.com/tag/166/running": {
      "rels": [
        "tag"
      ],
      "text": "Running"
    },
    "https://orangegnome.com/tag/538/jack-daniels": {
      "rels": [
        "tag"
      ],
      "text": "Jack Daniels"
    },
    "https://orangegnome.com/tag/539/nashville-rock-n-roll-marathon": {
      "rels": [
        "tag"
      ],
      "text": "Nashville Rock ’n’ Roll Marathon"
    },
    "https://orangegnome.com/tag/267/webdevelopment": {
      "rels": [
        "tag"
      ],
      "text": "Web Development"
    },
    "https://orangegnome.com/posts/category/13/web-development": {
      "rels": [
        "category",
        "tag"
      ],
      "text": "Web Development"
    },
    "https://orangegnome.com/tag/246/django": {
      "rels": [
        "tag"
      ],
      "text": "Django"
    },
    "https://orangegnome.com/tag/536/mastodon-api": {
      "rels": [
        "tag"
      ],
      "text": "Mastodon API"
    },
    "https://orangegnome.com/tag/537/indieweb": {
      "rels": [
        "tag"
      ],
      "text": "IndieWeb"
    }
  }
}