{
  "items": [
    {
      "type": [
        "h-card"
      ],
      "properties": {
        "url": [
          "https://eli.li/"
        ],
        "name": [
          "Eli Mellen"
        ],
        "photo": [
          {
            "value": "https://blotcdn.com/blog_7b49675ad4964db5a10b2e055c3fc5d8/_avatars/46f6db9e-6ed0-4124-9580-7db796f1cacd.jpg",
            "alt": ""
          }
        ],
        "email": [
          "mailto:hi@eli.li"
        ],
        "note": [
          "I'm much like Lyft, but for Moomintroll."
        ],
        "x-pronoun-nominative": [
          "he"
        ],
        "x-pronoun-oblique": [
          "him"
        ],
        "x-pronoun-possessive": [
          "his"
        ]
      }
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "content": [
          {
            "html": "<p><img src=\"https://eli.li/_assets/_images/ios/C6F77F90-E345-496F-B4FF-B85411957470.png\" class=\"u-photo\" alt=\"Image shows a large wooden troll standing in the woods illuminated by twinkle lights. A parent and kid stand at the feet of the troll. \"></p>\n<p>We visited a troll in the woods this evening.</p>",
            "value": "Image shows a large wooden troll standing in the woods illuminated by twinkle lights. A parent and kid stand at the feet of the troll.  \nWe visited a troll in the woods this evening."
          }
        ],
        "photo": [
          {
            "value": "https://eli.li/_assets/_images/ios/C6F77F90-E345-496F-B4FF-B85411957470.png",
            "alt": "Image shows a large wooden troll standing in the woods illuminated by twinkle lights. A parent and kid stand at the feet of the troll."
          }
        ],
        "published": [
          "2022-11-23 18:43:25 -0500"
        ],
        "url": [
          "https://eli.li/2022/11/23/2022-11-23-18-43-25"
        ]
      },
      "id": "entry_78b03b914bcf463ebdb4d7cd2714847f"
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "content": [
          {
            "html": "<blockquote>\n<p>The idea is that as you start to find patterns in your application, you can encode them in a little language—this language would then allow you to express these patterns in a more compact manner than would be possible by other means of abstraction. Not only could this buck the trend of ever-growing applications, it would actually allow the code base to shrink during the course of development!</p>\n</blockquote>",
            "value": "The idea is that as you start to find patterns in your application, you can encode them in a little language—this language would then allow you to express these patterns in a more compact manner than would be possible by other means of abstraction. Not only could this buck the trend of ever-growing applications, it would actually allow the code base to shrink during the course of development!"
          }
        ],
        "published": [
          "2022-11-21 17:06:37 -0500"
        ],
        "url": [
          "https://eli.li/2022/11/21/the-idea-is-that-as-you-start-to-find-patterns-in-your-application-you-can-encode-them-in-a-little"
        ]
      },
      "id": "entry_3e4fa869e4f8497aa55fa1a686d31642"
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "content": [
          {
            "html": "<p>A while ago someone asked what I liked about the programming languages I like — forth and lisp specifically.</p>\n<p>I’ve noodled on it for a bit now, and I think the reason I like forth and scheme and other languages with something like a repl is because when I start a new project I’m dropped right into the entire language and the sky is the limit…everything is already right there.</p>\n<p>When I start a project in Java or Go it feels empty; instead of having a system to play with I have to craft a Rube Goldberg machine of boilerplate code and then gingerly feed the compiler code like shoveling coal into a furnace.</p>",
            "value": "A while ago someone asked what I liked about the programming languages I like — forth and lisp specifically.\nI’ve noodled on it for a bit now, and I think the reason I like forth and scheme and other languages with something like a repl is because when I start a new project I’m dropped right into the entire language and the sky is the limit…everything is already right there.\nWhen I start a project in Java or Go it feels empty; instead of having a system to play with I have to craft a Rube Goldberg machine of boilerplate code and then gingerly feed the compiler code like shoveling coal into a furnace."
          }
        ],
        "published": [
          "2022-11-16 19:13:13 -0500"
        ],
        "url": [
          "https://eli.li/2022/11/16/a-while-ago-someone-asked-what-i-liked-about-the-programming-languages-i-like-—-forth-and-lisp"
        ]
      },
      "id": "entry_10be004d495d402a8ec3b9ad9d680fcc"
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "content": [
          {
            "html": "<p><img src=\"https://eli.li/_assets/_images/ios/661BF0FF-24EE-45EE-8D65-12CF50F503E1.png\" class=\"u-photo\" alt=\"Brothers hugging. Littlest one is holding a toy wooden camera. \"></p>\n<p>Happy birthday hugs</p>",
            "value": "Brothers hugging. Littlest one is holding a toy wooden camera.  \nHappy birthday hugs"
          }
        ],
        "photo": [
          {
            "value": "https://eli.li/_assets/_images/ios/661BF0FF-24EE-45EE-8D65-12CF50F503E1.png",
            "alt": "Brothers hugging. Littlest one is holding a toy wooden camera."
          }
        ],
        "published": [
          "2022-11-16 06:38:00 -0500"
        ],
        "url": [
          "https://eli.li/2022/11/16/2022-11-16-06-38-00"
        ]
      },
      "id": "entry_5c41bd9a0fe54e52953cf47202417c03"
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "name": [
          "Occasional notes"
        ],
        "content": [
          {
            "html": "<p>If they aren’t weekly, I guess they’re occasional?</p>\n<p>3rd repair procedure to fix brain bleed was a success. I have a few more scans and follow ups, but, <em>knock wood</em> I think I’m through at this point.</p>\n<p>I’ve spent about a week laying low and taking it easy navigating some wild pain, but that is subsiding now. I watched a bunch of stuff. It was a nice change of pace. I don’t typically watch much television or many movies. Stand outs (all things I revisited) include:</p>\n<ul>\n<li><em>Michael Clayton</em></li>\n<li>\n<em>Point Break</em>, the original one</li>\n<li>\n<em>John Carter of Mars</em>, straight up…this movie is awful. The book is pretty awful, too, but they just don’t make bananas sci-fi like this any more</li>\n<li>\n<em>Bee and Puppycat</em>, this one was weird — I’d seen it all through and loved it…I was surprised to see how different the Netflix version is from what I remember.</li>\n</ul>\n<hr>\n<p>I’ve continued reading about and exploring some <a href=\"https://mlochbaum.github.io/BQN/\">array</a> <a href=\"http://kona.github.io/#/\">programing</a> <a href=\"https://www.jsoftware.com/#/\">languages</a>. I find them fascinating. I doubt that I’ll ever do much with any, but they’re fun to think through and make me wanna play with combinators in other settings…also, matrices.</p>\n<p>Another language recently stumbled on is <a href=\"https://beyondloom.com/decker/lil.html\">lil</a>. It is a scripting language baked into a cool little project called <a href=\"https://beyondloom.com/decker\">Decker</a>. <a href=\"https://beyondloom.com/decker/lilt.html\">Learn even more about it</a>.</p>\n<p>The language is strange, and exciting — it allows for some interesting combinations of imperative, functional, and array programming styles.</p>\n<hr>\n<p>No doubt ya’ll have heard about the goings on at Twitter. I haven’t been on Twitter for years, but do love myself some fediverse-action. Lately it has been getting some attention.</p>\n<p>A cool mastodon trick for anyone wading into the waters for the first time:</p>\n<p>I’ve used the fediverse for years and ended up moving from server to server a few times. It is useful to have a quick shorthand for folks to find you without always giving them your exact handle — if you have your own website you can use that as a form of identity without needing to host your own server!</p>\n<p>To pull this off you need to add a file at <code>&lt;your personal domain name&gt;.tld/.well-known/webfinger</code></p>\n<p>Paste the contents of <code>https://&lt;name of mastodon instance&gt;.tld/.well-known/webfinger?resource=acct:&lt;your user name&gt;@&lt;name of mastodon instance&gt;.tld</code> into the <code>webfinger</code> document on your server. From there, you are cooking with fire!</p>\n<p>You can then search for <code>fedi@eli.li</code> and your main account will show up in the results. It is sort of like an alias.</p>\n<p><strong><span class=\"small-caps\">NOTE</span></strong> <code>&lt;anything&gt;@&lt;your domain&gt;.tld</code> will trigger this. As far as I know there is no way to lock it to a specific handle, since, this isn’t really a feature as much as an easily exploited bug of the lookup system.</p>\n<hr>\n<p>No super notable links of late. On a meta note I use <a href=\"https://pinboard.in/\">pinboard.in</a> to collect and organize links; I’m growing a wee bit concerned about pinboard is withering on the vine. I recently tried to export my gigantic archive from it and…no dice? Days later I emailed support and no response. Anyone have favorite alternatives? Either pay-for, or self hosted. Ideally I’d like it to be able to grab the linked content. I’ve used <a href=\"https://www.wallabag.it/en\">wallabag</a> in the past and wouldn’t mind returning to it, I’ve just been slowly trying to back away from self hosting services and pinboard seemed oh so reliable when I moved to it a few years back.</p>",
            "value": "If they aren’t weekly, I guess they’re occasional?\n3rd repair procedure to fix brain bleed was a success. I have a few more scans and follow ups, but, knock wood I think I’m through at this point.\nI’ve spent about a week laying low and taking it easy navigating some wild pain, but that is subsiding now. I watched a bunch of stuff. It was a nice change of pace. I don’t typically watch much television or many movies. Stand outs (all things I revisited) include:\n\nMichael Clayton\nPoint Break, the original one\nJohn Carter of Mars, straight up…this movie is awful. The book is pretty awful, too, but they just don’t make bananas sci-fi like this any more\nBee and Puppycat, this one was weird — I’d seen it all through and loved it…I was surprised to see how different the Netflix version is from what I remember.\n\n\nI’ve continued reading about and exploring some array programing languages. I find them fascinating. I doubt that I’ll ever do much with any, but they’re fun to think through and make me wanna play with combinators in other settings…also, matrices.\nAnother language recently stumbled on is lil. It is a scripting language baked into a cool little project called Decker. Learn even more about it.\nThe language is strange, and exciting — it allows for some interesting combinations of imperative, functional, and array programming styles.\n\nNo doubt ya’ll have heard about the goings on at Twitter. I haven’t been on Twitter for years, but do love myself some fediverse-action. Lately it has been getting some attention.\nA cool mastodon trick for anyone wading into the waters for the first time:\nI’ve used the fediverse for years and ended up moving from server to server a few times. It is useful to have a quick shorthand for folks to find you without always giving them your exact handle — if you have your own website you can use that as a form of identity without needing to host your own server!\nTo pull this off you need to add a file at <your personal domain name>.tld/.well-known/webfinger\nPaste the contents of https://<name of mastodon instance>.tld/.well-known/webfinger?resource=acct:<your user name>@<name of mastodon instance>.tld into the webfinger document on your server. From there, you are cooking with fire!\nYou can then search for fedi@eli.li and your main account will show up in the results. It is sort of like an alias.\nNOTE <anything>@<your domain>.tld will trigger this. As far as I know there is no way to lock it to a specific handle, since, this isn’t really a feature as much as an easily exploited bug of the lookup system.\n\nNo super notable links of late. On a meta note I use pinboard.in to collect and organize links; I’m growing a wee bit concerned about pinboard is withering on the vine. I recently tried to export my gigantic archive from it and…no dice? Days later I emailed support and no response. Anyone have favorite alternatives? Either pay-for, or self hosted. Ideally I’d like it to be able to grab the linked content. I’ve used wallabag in the past and wouldn’t mind returning to it, I’ve just been slowly trying to back away from self hosting services and pinboard seemed oh so reliable when I moved to it a few years back."
          }
        ],
        "published": [
          "2022-11-14 15:57:45 -0500"
        ],
        "url": [
          "https://eli.li/2022/11/14/occasional-notes"
        ]
      },
      "id": "entry_195de5a5fe5e4387bd6eed77103f8d30"
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "name": [
          "uxn exit"
        ],
        "content": [
          {
            "html": "<p>This evening I sat down on the couch sleepy. We’d just gotten the kids into bed. I hadn’t planned on writing any code but figured I’d round the evening out with some reading.</p>\n<p>First I read through the docs and glossary of <a href=\"http://www.call-with-current-continuation.org/uf/README\">uf</a>, a forth system for uxn. Then I read through an <a href=\"https://gitlab.com/b2495/uf/-/blob/master/examples/bounce.f\">example program</a> provided by uf.</p>\n<p>…with my palette whetted I <a href=\"https://eli.li/_assets/bin/PocketForth/\">re-visited some other forth documentation</a>.</p>\n<p>Then I put things down and did the dishes. After doing the dishes I found myself back at a keyboard ready to write some code.</p>\n<p>My first thought was to re-implement the unix command <code>cat</code> in uxntal. After a bit of noodling I decided to go with <code>echo</code> instead of <code>cat</code>. I banged away at <code>echo</code> for a bit but then remembered the very first program demonstrated in a book I’m currently reading, <em>Programming from the Ground Up</em>, by Jonathan Bartlett. The first sample program there is one that exits. That is about it.</p>\n<p>Exiting felt achievable.</p>\n<p>Here is a teeny tiny program that prints the string <code>Hello Uxn!</code> and then exits.</p>\n<pre><code class=\"hljs plaintext\">( exit )\n\n|10 @Console &amp;vector $2 &amp;read $1 &amp;pad $5 &amp;write $1 &amp;error $1\n\n|0100 ( -&gt; )\n\n    ( print hello )\n    ;hello-txt\n\n    &amp;while\n        LDAk .Console/write DEO\n        INC2 LDAk ,&amp;while JCN\n    POP2\n\n    ( exit )\n    #010f DEO\n\nBRK\n\n\n@hello-txt \"Hello 20 \"Uxn! $1</code></pre>\n<p>It isn’t much, but it is a start.</p>\n<p>Some handy resources I poured over over this evenings explorations include:</p>\n<ul>\n<li><a href=\"https://wiki.xxiivv.com/site/uxntal_library.html\">uxntal library</a></li>\n<li>\n<a href=\"https://git.sr.ht/~rabbits/uxn/tree/main/item/projects/examples\">uxntal examples</a>, specifically the devices examples</li>\n<li><a href=\"http://plastic-idolatry.com/erik/nxu/regex.tal\">regex.tal</a></li>\n<li><a href=\"http://plastic-idolatry.com/erik/nxu/femto.tal\">femto.tal</a></li>\n<li><a href=\"http://plastic-idolatry.com/erik/nxu/grep.tal\">grep.tal</a></li>\n<li><a href=\"https://compudanzas.net/uxn_tutorial_day_7.html#the%20file%20devices\">day 7 of compudanzas’s uxn tutorial</a></li>\n<li>\n<a href=\"https://git.sr.ht/~rabbits/uxnlin/tree/main/item/src/uxnlin.tal\">uxnlin</a>, a uxntal linter in uxntal</li>\n</ul>\n<p>Also, big thanks to <a href=\"https://wiki.xxiivv.com/site/home.html\">Devine Lu Linvenga</a>, a primary force behind uxn, for pointing me in the right direction and suggesting some optimizations.</p>\n<p>I’m not sure if I’ll have it in me to write code every night moving forward, but this was a lot of fun and I still have big dreams for a homespun <code>cat.tal</code></p>",
            "value": "This evening I sat down on the couch sleepy. We’d just gotten the kids into bed. I hadn’t planned on writing any code but figured I’d round the evening out with some reading.\nFirst I read through the docs and glossary of uf, a forth system for uxn. Then I read through an example program provided by uf.\n…with my palette whetted I re-visited some other forth documentation.\nThen I put things down and did the dishes. After doing the dishes I found myself back at a keyboard ready to write some code.\nMy first thought was to re-implement the unix command cat in uxntal. After a bit of noodling I decided to go with echo instead of cat. I banged away at echo for a bit but then remembered the very first program demonstrated in a book I’m currently reading, Programming from the Ground Up, by Jonathan Bartlett. The first sample program there is one that exits. That is about it.\nExiting felt achievable.\nHere is a teeny tiny program that prints the string Hello Uxn! and then exits.\n( exit )\n\n|10 @Console &vector $2 &read $1 &pad $5 &write $1 &error $1\n\n|0100 ( -> )\n\n    ( print hello )\n    ;hello-txt\n\n    &while\n        LDAk .Console/write DEO\n        INC2 LDAk ,&while JCN\n    POP2\n\n    ( exit )\n    #010f DEO\n\nBRK\n\n\n@hello-txt \"Hello 20 \"Uxn! $1\nIt isn’t much, but it is a start.\nSome handy resources I poured over over this evenings explorations include:\n\nuxntal library\nuxntal examples, specifically the devices examples\nregex.tal\nfemto.tal\ngrep.tal\nday 7 of compudanzas’s uxn tutorial\nuxnlin, a uxntal linter in uxntal\n\nAlso, big thanks to Devine Lu Linvenga, a primary force behind uxn, for pointing me in the right direction and suggesting some optimizations.\nI’m not sure if I’ll have it in me to write code every night moving forward, but this was a lot of fun and I still have big dreams for a homespun cat.tal"
          }
        ],
        "published": [
          "2022-10-11 23:28:45 -0400"
        ],
        "url": [
          "https://eli.li/2022/10/11/uxn-exit"
        ]
      },
      "id": "entry_39842b34c24945d8b0874f4a6738fd14"
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "name": [
          "uxn laboratory"
        ],
        "content": [
          {
            "html": "<p>As I look to <a href=\"https://ratfactor.com/assembly-nights2\">assembly nights 2</a> and think of trying my own take on it, I wanna have a cozy space ready to play with <a href=\"https://100r.co/site/uxn.html\">uxn</a>.</p>\n<p>The setup I’ve landed on is sort of inspired by <a href=\"https://9fans.github.io/plan9port/\">plan9port</a>.</p>\n<h2 id=\"prepare-the-way\">Prepare the way</h2>\n<ul>\n<li>in home directory, create a <code>u</code> directory</li>\n<li>in <code>u</code> <a href=\"https://git.sr.ht/~rabbits/uxn\">clone</a> <code>uxn</code> and build it</li>\n<li>add <code>~/u/uxn/</code> to your path as <code>$UXN</code>\n</li>\n<li>add <code>$UXN/bin</code> to your path</li>\n<li>moving forward we’ll put any and all <code>*.rom</code> files into <code>$UXN/bin</code>\n</li>\n</ul>\n<h2 id=\"utility-scripts\">Utility scripts</h2>\n<ul>\n<li>create script called <code>u</code> that contains the following</li>\n</ul>\n<pre><code class=\"hljs sh\"><span class=\"hljs-meta\">#!/bin/sh</span>\n\nUXN=<span class=\"hljs-variable\">${UXN:-<span class=\"hljs-variable\">$HOME</span>/u/uxn}</span>\n<span class=\"hljs-built_in\">export</span> UXN\n\n<span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$PATH</span>\"</span> <span class=\"hljs-keyword\">in</span>\n<span class=\"hljs-variable\">$UXN</span>/bin:*)\n    ;;\n*)\n    PATH=<span class=\"hljs-variable\">$UXN</span>/bin:<span class=\"hljs-variable\">$PATH</span>\n    <span class=\"hljs-built_in\">export</span> PATH\n    ;;\n<span class=\"hljs-keyword\">esac</span>\n\n<span class=\"hljs-keyword\">case</span> <span class=\"hljs-variable\">$#</span> <span class=\"hljs-keyword\">in</span>\n[1-9]*)\n       <span class=\"hljs-built_in\">exec</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$@</span>\"</span>\n       ;;\n<span class=\"hljs-keyword\">esac</span></code></pre>\n<ul>\n<li><p>make <code>u</code> executable with <code>chmod +x</code> and <code>mv</code> it to <code>/usr/local/bin</code> or some similar space</p></li>\n<li><p>in <code>$UXN/bin</code> add the following scripts, make each executable with <code>chmod +x</code></p></li>\n<li><p><code>lin</code>, used to lint <code>*.tal</code> files before assembly.</p></li>\n</ul>\n<pre><code class=\"hljs sh\"><span class=\"hljs-comment\"># script name: lin</span>\n<span class=\"hljs-comment\">#!/bin/sh</span>\n\nu uxncli uxnlin.rom <span class=\"hljs-variable\">$1</span></code></pre>\n<ul>\n<li>\n<code>asm</code>, used to assemble <code>*.tal</code> files into executable <code>*.rom</code>s.</li>\n</ul>\n<pre><code class=\"hljs sh\"><span class=\"hljs-comment\"># script name: asm</span>\n<span class=\"hljs-comment\">#!/bin/sh</span>\n\nu uxnasm <span class=\"hljs-variable\">$1</span> <span class=\"hljs-variable\">$2</span></code></pre>\n<ul>\n<li>\n<code>run</code>, used to run <code>*.rom</code>s in the sdl2 uxn emulator.</li>\n</ul>\n<pre><code class=\"hljs sh\"><span class=\"hljs-comment\"># script name: run</span>\n<span class=\"hljs-comment\">#!/bin/sh</span>\n\nu uxnemu <span class=\"hljs-variable\">$1</span></code></pre>\n<ul>\n<li>\n<code>cli</code>, used to run command line <code>*.rom</code>s into stdin/stdout at the shell prompt.</li>\n</ul>\n<pre><code class=\"hljs sh\"><span class=\"hljs-comment\"># script name: cli</span>\n<span class=\"hljs-comment\">#!/bin/sh</span>\n\nu uxncli <span class=\"hljs-variable\">$1</span></code></pre>\n<ul>\n<li>\n<code>drif</code>, <a href=\"https://git.sr.ht/~rabbits/drifblim\">an alternate assembler</a> — this one is selfhosted and doesn’t support macros.</li>\n</ul>\n<pre><code class=\"hljs sh\"><span class=\"hljs-comment\"># script name: drif</span>\n<span class=\"hljs-comment\">#!/bin/sh</span>\n\nu uxncli drifblim.rom <span class=\"hljs-variable\">$1</span> <span class=\"hljs-variable\">$2</span></code></pre>\n<h2 id=\"rom-library\">rom library</h2>\n<ul>\n<li>\n<code>wget</code> the following <code>rom</code>s into <code>$UXN/bin</code>\n</li>\n</ul>\n<pre><code class=\"hljs sh\">wget https://rabbits.srht.site/left/left.rom\nwget https://rabbits.srht.site/drifblim/drifblim.rom</code></pre>\n<h2 id=\"rock-and-roll\">rock and roll</h2>\n<p>At this point everything is set and cozy to start exploring!</p>\n<p>Do that like so:</p>\n<ul>\n<li>to lint a <code>*.tal</code> file,</li>\n</ul>\n<pre><code class=\"hljs sh\">u lin rad.tal</code></pre>\n<ul>\n<li>to assemble a <code>*.tal</code> file using an assembler that supports macros,</li>\n</ul>\n<pre><code class=\"hljs sh\">u asm rad.tal rad.rom</code></pre>\n<ul>\n<li>to assemble a <code>*.tal</code> file using the selfhosted assembler,</li>\n</ul>\n<pre><code class=\"hljs sh\">u drif rad.tal rad.rom</code></pre>\n<ul>\n<li>to run a <code>rom</code> in the emulator</li>\n</ul>\n<pre><code class=\"hljs sh\">u run rad.rom</code></pre>\n<ul>\n<li>to run a <code>rom</code> at the prompt</li>\n</ul>\n<pre><code class=\"hljs sh\">u cli rad.rom</code></pre>\n<ul>\n<li>to edit something using <a href=\"https://100r.co/site/left.html\">left</a>,</li>\n</ul>\n<pre><code class=\"hljs sh\">u uxnemu left.rom -s 2 rad.tal</code></pre>\n<p><strong><span class=\"small-caps\">NOTE</span>:</strong> the <code>-s 2</code> bit makes the program run zoomed…I’ve got bad eyesight and have a high <span class=\"small-caps\">DPI</span> screen, you may not need that flag.</p>\n<h2 id=\"onward\">Onward!</h2>\n<p>Now, I’ll be honest — I don’t know if I’ll actually do my own flavor of assembly nights with uxn, but I’m really pleased with this little setup…so, that is a step in the right direction. The other step in the right direction I’ve taken is that I started to read <em>Programming from the Ground Up</em> by Jonathan Bartlett…so far, 2 chapters in, I am enjoying it a lot.</p>",
            "value": "As I look to assembly nights 2 and think of trying my own take on it, I wanna have a cozy space ready to play with uxn.\nThe setup I’ve landed on is sort of inspired by plan9port.\nPrepare the way\n\nin home directory, create a u directory\nin u clone uxn and build it\nadd ~/u/uxn/ to your path as $UXN\nadd $UXN/bin to your path\nmoving forward we’ll put any and all *.rom files into $UXN/bin\n\nUtility scripts\n\ncreate script called u that contains the following\n\n#!/bin/sh\n\nUXN=${UXN:-$HOME/u/uxn}\nexport UXN\n\ncase \"$PATH\" in\n$UXN/bin:*)\n    ;;\n*)\n    PATH=$UXN/bin:$PATH\n    export PATH\n    ;;\nesac\n\ncase $# in\n[1-9]*)\n       exec \"$@\"\n       ;;\nesac\n\nmake u executable with chmod +x and mv it to /usr/local/bin or some similar space\nin $UXN/bin add the following scripts, make each executable with chmod +x\nlin, used to lint *.tal files before assembly.\n\n# script name: lin\n#!/bin/sh\n\nu uxncli uxnlin.rom $1\n\nasm, used to assemble *.tal files into executable *.roms.\n\n# script name: asm\n#!/bin/sh\n\nu uxnasm $1 $2\n\nrun, used to run *.roms in the sdl2 uxn emulator.\n\n# script name: run\n#!/bin/sh\n\nu uxnemu $1\n\ncli, used to run command line *.roms into stdin/stdout at the shell prompt.\n\n# script name: cli\n#!/bin/sh\n\nu uxncli $1\n\ndrif, an alternate assembler — this one is selfhosted and doesn’t support macros.\n\n# script name: drif\n#!/bin/sh\n\nu uxncli drifblim.rom $1 $2\nrom library\n\nwget the following roms into $UXN/bin\n\nwget https://rabbits.srht.site/left/left.rom\nwget https://rabbits.srht.site/drifblim/drifblim.rom\nrock and roll\nAt this point everything is set and cozy to start exploring!\nDo that like so:\n\nto lint a *.tal file,\n\nu lin rad.tal\n\nto assemble a *.tal file using an assembler that supports macros,\n\nu asm rad.tal rad.rom\n\nto assemble a *.tal file using the selfhosted assembler,\n\nu drif rad.tal rad.rom\n\nto run a rom in the emulator\n\nu run rad.rom\n\nto run a rom at the prompt\n\nu cli rad.rom\n\nto edit something using left,\n\nu uxnemu left.rom -s 2 rad.tal\nNOTE: the -s 2 bit makes the program run zoomed…I’ve got bad eyesight and have a high DPI screen, you may not need that flag.\nOnward!\nNow, I’ll be honest — I don’t know if I’ll actually do my own flavor of assembly nights with uxn, but I’m really pleased with this little setup…so, that is a step in the right direction. The other step in the right direction I’ve taken is that I started to read Programming from the Ground Up by Jonathan Bartlett…so far, 2 chapters in, I am enjoying it a lot."
          }
        ],
        "published": [
          "2022-10-10 21:14:45 -0400"
        ],
        "url": [
          "https://eli.li/2022/10/10/uxn-laboratory"
        ]
      },
      "id": "entry_de4efeba1d984a3997c840fce6d8b0c5"
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "content": [
          {
            "html": "<p><img src=\"https://eli.li/_assets/_images/ios/IMG_5235.png\" class=\"u-photo\" alt=\"A family looks down at a gigantic amonita mushroom.\"></p>\n<p>We found a big mushroom.</p>",
            "value": "A family looks down at a gigantic amonita mushroom. \nWe found a big mushroom."
          }
        ],
        "photo": [
          {
            "value": "https://eli.li/_assets/_images/ios/IMG_5235.png",
            "alt": "A family looks down at a gigantic amonita mushroom."
          }
        ],
        "published": [
          "2022-10-03 06:58:45 -0400"
        ],
        "url": [
          "https://eli.li/2022/10/3/2022-10-03-06-58-45"
        ]
      },
      "id": "entry_298b6e18c5d84e74a8042e2ea75bee3e"
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "name": [
          "week notes"
        ],
        "content": [
          {
            "html": "<p>Am I allowed to call them<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>week notes” if I don’t do them weekly?</p>\n<p>I went in for what was supposed to be my final brain scan, a diagnostic angiogram (don’t look that up). The good news is that the repair has officially cured my brain bleed! The bad news is that they saw another vessel that looks primed to bleed; I’m due for another repair procedure sometime in October. I’m pretty bummed to not be done with this ordeal, but trying to remain optimistic that this new one was caught before it bled and because the surgeon says this one seems easier to repair than the first.</p>\n<p>I’m still struggling to focus long enough to pick up major programming tasks at hobby time (I desperately wanna make this game that I’ve been noodling over and over for months now). Sorry if I’ve promised you something, or a fix, or anything, and haven’t made that happen yet.</p>\n<p>That said, I’ve enjoyed re-building my <span class=\"small-caps\">VPS</span>. This time an OpenBSD box. I’ve got a few personal utilities running on it, but am also using it as a <a href=\"https://smallandnearlysilent.com/\">programming language playground</a>.</p>\n<p>Looking back over my link logging from the last few weeks, there isn’t much of note that isn’t boring computer-stuff. The stand-out item is a recent find: <a href=\"https://myco.land/\">Mycorrhizae, A songbook of fungal myths</a>, a gorgeous zine.</p>",
            "value": "Am I allowed to call them “week notes” if I don’t do them weekly?\nI went in for what was supposed to be my final brain scan, a diagnostic angiogram (don’t look that up). The good news is that the repair has officially cured my brain bleed! The bad news is that they saw another vessel that looks primed to bleed; I’m due for another repair procedure sometime in October. I’m pretty bummed to not be done with this ordeal, but trying to remain optimistic that this new one was caught before it bled and because the surgeon says this one seems easier to repair than the first.\nI’m still struggling to focus long enough to pick up major programming tasks at hobby time (I desperately wanna make this game that I’ve been noodling over and over for months now). Sorry if I’ve promised you something, or a fix, or anything, and haven’t made that happen yet.\nThat said, I’ve enjoyed re-building my VPS. This time an OpenBSD box. I’ve got a few personal utilities running on it, but am also using it as a programming language playground.\nLooking back over my link logging from the last few weeks, there isn’t much of note that isn’t boring computer-stuff. The stand-out item is a recent find: Mycorrhizae, A songbook of fungal myths, a gorgeous zine."
          }
        ],
        "published": [
          "2022-09-28 15:00:07 -0400"
        ],
        "url": [
          "https://eli.li/2022/09/28/week-notes"
        ]
      },
      "id": "entry_fa8344cb2343469ba69315e263c9a6e0"
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "content": [
          {
            "html": "<p><img src=\"https://eli.li/_assets/_images/ios/761F3AAB-64CE-462B-B565-ED3D1E70AAA6.png\" class=\"u-photo\" alt=\"Two kids, brothers, playing together at a small picnic table.\"></p>",
            "value": "Two kids, brothers, playing together at a small picnic table."
          }
        ],
        "photo": [
          {
            "value": "https://eli.li/_assets/_images/ios/761F3AAB-64CE-462B-B565-ED3D1E70AAA6.png",
            "alt": "Two kids, brothers, playing together at a small picnic table."
          }
        ],
        "published": [
          "2022-08-25 17:51:58 -0400"
        ],
        "url": [
          "https://eli.li/2022/08/25/2022-08-25-17-51-58"
        ]
      },
      "id": "entry_69fd14ba00524b58aa82ace81da08521"
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "name": [
          "Miscellaneous this and that"
        ],
        "content": [
          {
            "html": "<p>Since my brain injury (which I’ve since learned can be called an<span class=\"push-double\"></span> <span class=\"pull-double\">“</span><span class=\"small-caps\">ABI</span><span class=\"push-double\"></span><span class=\"pull-double\">”</span> or<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>acquired brain injury”) I’ve noticed that I have trouble focusing on programming tasks; I’m able to do what I need to do for work and family but, when it comes time for hobby projects I’m just gloop. Totally oozy.</p>\n<p>Because of that I’ve been drawn to do more reading and game playing, but also still wanna code…I’ve found that it is easier to use more<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>batteries included” kinda languages, namely scheme, over what I’d normally gravitate towards, like Forth.</p>\n<p>This has lead me to some interesting thoughts of the<span class=\"push-double\"></span> <span class=\"pull-double\">“</span>accessibility” of programming languages.</p>\n<hr>\n<p>I’ve been reading a lot. As of today, I’m 34 books deep into this year. I’m really pleased with my choice to revive my reading habit. I’ve read a smattering of fiction, new-to-me, and re-reads, as well as a number of nonfiction books — mostly programming books.</p>\n<p>Maybe I’ll do a round up post at the end of the year? In the meantime some standouts include:</p>\n<ul>\n<li>The entire <em>Wayfarers</em> series by Becky Chambers, especially <em>Record of a Spaceborn Few</em>\n</li>\n<li>\n<em>This is how you Lose the Time War</em> by Amal El-Mohtar and Max Gladstone</li>\n<li>\n<em>Circe</em> by Madeline Miller (the audiobook for this is phenomenal! One of the best I’ve ever listened to)</li>\n</ul>\n<hr>\n<p>My <span class=\"small-caps\">VPS</span> suffered a wonderfully catastrophic failure during an upgrade, you may notice some of my web presence is currently down while I re-configure some things over the next few…weeks?</p>\n<p>…probably months.</p>\n<p>Blog will keep trucking, though!</p>\n<hr>\n<p>Some recent discoveries</p>\n<ul>\n<li>\n<a href=\"https://idiomdrottning.org/strse\">strse</a>, an incredible string <span class=\"small-caps\">DSL</span> for scheme</li>\n<li><a href=\"https://tube.tchncs.de/w/g1ZKSzvDaqbpWQQgxGfW3z\">~dozens gives a tour of ed, the standard editor</a></li>\n<li>\n<a href=\"https://github.com/bakpakin/tiny-ecs\">a totally feature complete<span class=\"push-double\"></span> <span class=\"pull-double\">“</span><span class=\"small-caps\">ECS</span>,” entity component system, for lua</a>, and some more on <a href=\"https://en.wikipedia.org/wiki/Entity_component_system\">entity component systems</a>\n</li>\n<li>\n<a href=\"https://erinbern.com/dice-chess/\">4-Die Chess: A New Kind of Chess</a>, from Erin Bern</li>\n<li><a href=\"http://zenseeker.net/BoardGames/PaperPenGames.htm\">A Zen Guide to Paper and Pen Games</a></li>\n<li>keeping the theme alive, <a href=\"https://en.wikipedia.org/wiki/Hexapawn\">hexapawn</a>\n</li>\n<li><a href=\"https://tetralogical.com/blog/2022/08/08/accessibility-and-qr-codes/\">A nice overview on the accessibility of <span class=\"small-caps\">QR</span> codes</a></li>\n</ul>",
            "value": "Since my brain injury (which I’ve since learned can be called an “ABI” or “acquired brain injury”) I’ve noticed that I have trouble focusing on programming tasks; I’m able to do what I need to do for work and family but, when it comes time for hobby projects I’m just gloop. Totally oozy.\nBecause of that I’ve been drawn to do more reading and game playing, but also still wanna code…I’ve found that it is easier to use more “batteries included” kinda languages, namely scheme, over what I’d normally gravitate towards, like Forth.\nThis has lead me to some interesting thoughts of the “accessibility” of programming languages.\n\nI’ve been reading a lot. As of today, I’m 34 books deep into this year. I’m really pleased with my choice to revive my reading habit. I’ve read a smattering of fiction, new-to-me, and re-reads, as well as a number of nonfiction books — mostly programming books.\nMaybe I’ll do a round up post at the end of the year? In the meantime some standouts include:\n\nThe entire Wayfarers series by Becky Chambers, especially Record of a Spaceborn Few\nThis is how you Lose the Time War by Amal El-Mohtar and Max Gladstone\nCirce by Madeline Miller (the audiobook for this is phenomenal! One of the best I’ve ever listened to)\n\n\nMy VPS suffered a wonderfully catastrophic failure during an upgrade, you may notice some of my web presence is currently down while I re-configure some things over the next few…weeks?\n…probably months.\nBlog will keep trucking, though!\n\nSome recent discoveries\n\nstrse, an incredible string DSL for scheme\n~dozens gives a tour of ed, the standard editor\na totally feature complete “ECS,” entity component system, for lua, and some more on entity component systems\n4-Die Chess: A New Kind of Chess, from Erin Bern\nA Zen Guide to Paper and Pen Games\nkeeping the theme alive, hexapawn\nA nice overview on the accessibility of QR codes"
          }
        ],
        "published": [
          "2022-08-20 19:46:07 -0400"
        ],
        "url": [
          "https://eli.li/2022/08/20/miscellaneous-this-and-that"
        ]
      },
      "id": "entry_29ad14c2fbc841448675758e035d3758"
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "content": [
          {
            "html": "<p><img src=\"https://eli.li/_assets/_images/ios/IMG_7327.png\" class=\"u-photo\" alt=\"Red headed child in a romper walking along a wooded path.\"></p>",
            "value": "Red headed child in a romper walking along a wooded path."
          }
        ],
        "photo": [
          {
            "value": "https://eli.li/_assets/_images/ios/IMG_7327.png",
            "alt": "Red headed child in a romper walking along a wooded path."
          }
        ],
        "published": [
          "2022-08-20 18:23:28 -0400"
        ],
        "url": [
          "https://eli.li/2022/08/20/2022-08-20-18-23-28"
        ]
      },
      "id": "entry_554aa7f691c34c3ba6e60986554a50ce"
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "content": [
          {
            "html": "<p><span class=\"small-caps\">👋</span> Oh hai!</p>\n<p>I was interviewed on a podcast!</p>",
            "value": "👋 Oh hai!\nI was interviewed on a podcast!"
          }
        ],
        "published": [
          "2022-07-10 15:48:32 -0400"
        ],
        "url": [
          "https://eli.li/2022/07/10/👋-oh-hai"
        ]
      },
      "id": "entry_cd4fc701deb4482bb12fb7e26cb00b4b"
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "content": [
          {
            "html": "<p><img src=\"https://eli.li/_assets/_images/ios/F8755BC7-6B7E-4774-870E-A4FF74EB4F2F.png\" class=\"u-photo\" alt=\"Toddler holding a stuffy wanders by a community garden nestled into the edge of some woods.\"></p>",
            "value": "Toddler holding a stuffy wanders by a community garden nestled into the edge of some woods."
          }
        ],
        "photo": [
          {
            "value": "https://eli.li/_assets/_images/ios/F8755BC7-6B7E-4774-870E-A4FF74EB4F2F.png",
            "alt": "Toddler holding a stuffy wanders by a community garden nestled into the edge of some woods."
          }
        ],
        "published": [
          "2022-07-09 11:48:32 -0400"
        ],
        "url": [
          "https://eli.li/2022/07/9/2022-07-09-11-48-32"
        ]
      },
      "id": "entry_ae300f29d0cb4a55ace9e714e5cb082c"
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "content": [
          {
            "html": "<blockquote>\n<p>This is also something people keep getting wrong about Markdown as originally presented. Markdown isn’t a format. It’s a convenience tool that helps you write some of the boringest and commonest parts of <span class=\"small-caps\">HTML</span> easier, and you can easily drop into more wonky <span class=\"small-caps\">HTML</span> at any time.</p>\n</blockquote>\n<p>Yes yes yes yes yes yes!</p>\n<p>Markdown isn’t supposed to be a markup language unto itself. It is an intermediary format that usually targets <span class=\"small-caps\">HTML</span> as it’s final form.</p>",
            "value": "This is also something people keep getting wrong about Markdown as originally presented. Markdown isn’t a format. It’s a convenience tool that helps you write some of the boringest and commonest parts of HTML easier, and you can easily drop into more wonky HTML at any time.\n\nYes yes yes yes yes yes!\nMarkdown isn’t supposed to be a markup language unto itself. It is an intermediary format that usually targets HTML as it’s final form."
          }
        ],
        "published": [
          "2022-07-09 08:42:18 -0400"
        ],
        "url": [
          "https://eli.li/2022/07/9/this-is-also-something-people-keep-getting-wrong-about-markdown-as-originally-presented"
        ]
      },
      "id": "entry_2045930f825549148ee10287d09e2b69"
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "name": [
          "Lamination for a lost explorer"
        ],
        "content": [
          {
            "html": "<p>I remember the days when <a href=\"https://www.kickscondor.com/\">Kicks Condor</a> used to update regularly. I miss those days.</p>\n<p>For a while every post seemed to unearth some new, yet weirder corner of the little internet (maybe not yet the smol web).</p>\n<p>There are folks doing similar web archeology…<a href=\"https://eli.li/tagged/link-log\">I do some of it myself</a>…but no one does it like Kicks was doing it; there was often a feeling of unknown, but ulterior motive behind the curation — bits building towards a cohesive something.</p>\n<p>Perhaps Kicks got lost in the web — out there still?</p>",
            "value": "I remember the days when Kicks Condor used to update regularly. I miss those days.\nFor a while every post seemed to unearth some new, yet weirder corner of the little internet (maybe not yet the smol web).\nThere are folks doing similar web archeology…I do some of it myself…but no one does it like Kicks was doing it; there was often a feeling of unknown, but ulterior motive behind the curation — bits building towards a cohesive something.\nPerhaps Kicks got lost in the web — out there still?"
          }
        ],
        "published": [
          "2022-07-06 10:01:53 -0400"
        ],
        "url": [
          "https://eli.li/2022/07/6/lamination-for-a-lost-explorer"
        ]
      },
      "id": "entry_463f3c06d2ee406795083a02731aaeda"
    }
  ],
  "rels": {
    "alternate": [
      "https://eli.li/feed.rss"
    ],
    "icon": [
      "https://blotcdn.com/blog_7b49675ad4964db5a10b2e055c3fc5d8/_avatars/46f6db9e-6ed0-4124-9580-7db796f1cacd.jpg"
    ],
    "stylesheet": [
      "https://eli.li/style.css?cache=1670400238659&extension=.css"
    ],
    "me": [
      "https://eli.li/",
      "mailto:hi@eli.li",
      "https://dog.estate/@eli_oat",
      "https://twitter.com/eli_oat",
      "https://github.com/eli-oat",
      "https://micro.blog/eli",
      "https://merveilles.town/@eli_oat",
      "https://tenforward.social/@eli_oat"
    ],
    "license": [
      "https://creativecommons.org/licenses/by-sa/4.0/"
    ]
  },
  "rel-urls": {
    "https://eli.li/feed.rss": {
      "rels": [
        "alternate"
      ],
      "title": "RSS Feed for Oatmeal",
      "type": "application/rss+xml"
    },
    "https://blotcdn.com/blog_7b49675ad4964db5a10b2e055c3fc5d8/_avatars/46f6db9e-6ed0-4124-9580-7db796f1cacd.jpg": {
      "rels": [
        "icon"
      ],
      "type": "image/x-icon"
    },
    "https://eli.li/style.css?cache=1670400238659&extension=.css": {
      "rels": [
        "stylesheet"
      ]
    },
    "https://eli.li/": {
      "rels": [
        "me"
      ],
      "text": "Eli Mellen"
    },
    "mailto:hi@eli.li": {
      "rels": [
        "me"
      ],
      "text": "hi@eli.li"
    },
    "https://dog.estate/@eli_oat": {
      "rels": [
        "me"
      ],
      "text": "Mastodon, dog.estate"
    },
    "https://twitter.com/eli_oat": {
      "rels": [
        "me"
      ]
    },
    "https://github.com/eli-oat": {
      "rels": [
        "me"
      ]
    },
    "https://micro.blog/eli": {
      "rels": [
        "me"
      ]
    },
    "https://merveilles.town/@eli_oat": {
      "rels": [
        "me"
      ]
    },
    "https://tenforward.social/@eli_oat": {
      "rels": [
        "me"
      ]
    },
    "https://creativecommons.org/licenses/by-sa/4.0/": {
      "rels": [
        "license"
      ],
      "text": "CC BY-SA\r\n                        4.0"
    }
  }
}