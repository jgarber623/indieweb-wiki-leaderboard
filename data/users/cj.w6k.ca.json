{
  "items": [
    {
      "type": [
        "h-card"
      ],
      "properties": {
        "photo": [
          {
            "value": "https://cj.w6k.ca/media/images/elderberries.jpg",
            "alt": "A photograph of elderberries."
          }
        ],
        "name": [
          "cj.w6k.ca"
        ],
        "url": [
          "https://cj.w6k.ca/"
        ],
        "uid": [
          "https://cj.w6k.ca/"
        ]
      }
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "content": [
          {
            "html": "<p><em>... hexadecimal to decimal conversion ... provide {h# 81} expect \"129.\" What is {h# 1 0000 0000}?</em></p>\n<p>Expecting: <b>4 294 967 296</b>.</p>",
            "value": "... hexadecimal to decimal conversion ... provide {h# 81} expect \"129.\" What is {h# 1 0000 0000}?Expecting: 4 294 967 296."
          }
        ],
        "author": [
          "https://cj.w6k.ca/"
        ],
        "uid": [
          "https://cj.w6k.ca/2022/12/11/3/"
        ],
        "url": [
          "https://cj.w6k.ca/2022/12/11/3/"
        ],
        "published": [
          "2022-12-11T15:36:27-04:00"
        ],
        "updated": [
          "2022-12-11T15:38:12-04:00"
        ]
      }
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "content": [
          {
            "html": "<p>chatGPT is too busy to take my request rn.</p>\n<p><em>I want you to perform binary to decimal conversion. I will give you strings of binary within curly brace delimiters. The input character set has the <ins>six</ins> <del>four</del> characters: [<ins>\"b\", \"#\",</ins> \" \", \"0\", \"1\", <del>and</del> \"2\"]. Do not explain your answers. Limit your output to one single decimal number in each response. When I provide {<ins>b# </ins>1000 0001}, I expect you to respond \"129.\" What is {<ins>b# </ins>10 0000 0000}?</em></p>\n<p>The answer I'm hoping for is <b>512</b>.</p>",
            "value": "chatGPT is too busy to take my request rn.I want you to perform binary to decimal conversion. I will give you strings of binary within curly brace delimiters. The input character set has the six four characters: [\"b\", \"#\", \" \", \"0\", \"1\", and \"2\"]. Do not explain your answers. Limit your output to one single decimal number in each response. When I provide {b# 1000 0001}, I expect you to respond \"129.\" What is {b# 10 0000 0000}?The answer I'm hoping for is 512."
          }
        ],
        "author": [
          "https://cj.w6k.ca/"
        ],
        "uid": [
          "https://cj.w6k.ca/2022/12/11/1/"
        ],
        "url": [
          "https://cj.w6k.ca/2022/12/11/1/"
        ],
        "published": [
          "2022-12-11T14:58:09-04:00"
        ],
        "updated": [
          "2022-12-11T15:32:40-04:00"
        ]
      }
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "content": [
          {
            "html": "<p>I did the absolute minimum with npm and published it. It's been a minute and now I'm a publisher of sass <del>in a pipeline</del> somehow!?</p>\n<p>Previous art: <code>npm deploy:scp</code>.</p>",
            "value": "I did the absolute minimum with npm and published it. It's been a minute and now I'm a publisher of sass in a pipeline somehow!?Previous art: npm deploy:scp."
          }
        ],
        "author": [
          "https://cj.w6k.ca/"
        ],
        "category": [
          "sass",
          "npm"
        ],
        "uid": [
          "https://cj.w6k.ca/2022/12/09/1/"
        ],
        "url": [
          "https://cj.w6k.ca/2022/12/09/1/"
        ],
        "published": [
          "2022-12-09T21:21:31-04:00"
        ],
        "updated": [
          "2022-12-09T22:48:05-04:00"
        ]
      }
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "photo": [
          "https://cj.w6k.ca/2022/12/03/4/media/photo1.jpg"
        ],
        "content": [
          {
            "html": "<p>ChatGPT repeating itself while explaining ontology in philosophical detail.</p>",
            "value": "ChatGPT repeating itself while explaining ontology in philosophical detail."
          }
        ],
        "author": [
          "https://cj.w6k.ca/"
        ],
        "uid": [
          "https://cj.w6k.ca/2022/12/03/4/"
        ],
        "url": [
          "https://cj.w6k.ca/2022/12/03/4/"
        ],
        "published": [
          "2022-12-03T14:05:00-04:00"
        ]
      }
    },
    {
      "type": [
        "h-entry"
      ],
      "properties": {
        "photo": [
          "https://cj.w6k.ca/2022/12/03/3/media/photo1.jpg"
        ],
        "content": [
          {
            "html": "<p>More from ChatGPT at openai.com.</p>",
            "value": "More from ChatGPT at openai.com."
          }
        ],
        "author": [
          "https://cj.w6k.ca/"
        ],
        "uid": [
          "https://cj.w6k.ca/2022/12/03/3/"
        ],
        "url": [
          "https://cj.w6k.ca/2022/12/03/3/"
        ],
        "published": [
          "2022-12-03T13:58:00-04:00"
        ]
      }
    },
    {
      "type": [
        "h-x-challenge"
      ],
      "properties": {
        "name": [
          "Christopher James Willcock"
        ],
        "url": [
          "https://cj.w6k.ca/"
        ],
        "license": [
          "All rights reserved except where otherwise specified."
        ]
      }
    }
  ],
  "rels": {
    "stylesheet": [
      "https://cj.w6k.ca/bundle.min.css?t=1670634988"
    ],
    "authorization_endpoint": [
      "https://cj.w6k.ca/auth/"
    ],
    "token_endpoint": [
      "https://cj.w6k.ca/token/"
    ],
    "micropub": [
      "https://cj.w6k.ca/micropub/"
    ],
    "microsub": [
      "https://aperture.p3k.io/microsub/528"
    ],
    "feed": [
      "https://cj.w6k.ca/articles/",
      "https://cj.w6k.ca/notes/",
      "https://cj.w6k.ca/photos/",
      "https://cj.w6k.ca/bookmarks/",
      "https://cj.w6k.ca/reposts/",
      "https://cj.w6k.ca/responses/",
      "https://cj.w6k.ca/all/"
    ],
    "me": [
      "https://code.cjwillcock.ca/cjw6k/",
      "https://cj.w6k.ca/",
      "https://github.com/cjw6k",
      "https://twitter.com/cjw6k",
      "https://open.spotify.com/user/31edqa7pnsitqcmhhbggm4btw6eu",
      "https://www.codingame.com/profile/6d19bbcae1169ee4a1513de917008c405226544"
    ]
  },
  "rel-urls": {
    "https://cj.w6k.ca/bundle.min.css?t=1670634988": {
      "rels": [
        "stylesheet"
      ]
    },
    "https://cj.w6k.ca/auth/": {
      "rels": [
        "authorization_endpoint"
      ]
    },
    "https://cj.w6k.ca/token/": {
      "rels": [
        "token_endpoint"
      ]
    },
    "https://cj.w6k.ca/micropub/": {
      "rels": [
        "micropub"
      ]
    },
    "https://aperture.p3k.io/microsub/528": {
      "rels": [
        "microsub"
      ]
    },
    "https://cj.w6k.ca/articles/": {
      "rels": [
        "feed"
      ],
      "text": "Articles"
    },
    "https://cj.w6k.ca/notes/": {
      "rels": [
        "feed"
      ],
      "text": "Notes"
    },
    "https://cj.w6k.ca/photos/": {
      "rels": [
        "feed"
      ],
      "text": "Photos"
    },
    "https://cj.w6k.ca/bookmarks/": {
      "rels": [
        "feed"
      ],
      "text": "Bookmarks"
    },
    "https://cj.w6k.ca/reposts/": {
      "rels": [
        "feed"
      ],
      "text": "Reposts"
    },
    "https://cj.w6k.ca/responses/": {
      "rels": [
        "feed"
      ],
      "text": "Responses"
    },
    "https://cj.w6k.ca/all/": {
      "rels": [
        "feed"
      ],
      "text": "All"
    },
    "https://code.cjwillcock.ca/cjw6k/": {
      "rels": [
        "me"
      ]
    },
    "https://cj.w6k.ca/": {
      "rels": [
        "me"
      ],
      "text": "Christopher James Willcock"
    },
    "https://github.com/cjw6k": {
      "rels": [
        "me"
      ]
    },
    "https://twitter.com/cjw6k": {
      "rels": [
        "me"
      ],
      "text": ".cls-1{fill:#1da1f2;}.cls-2{fill:#fff;}.cls-3{fill:none;}Twitter_Logo_White-on-Blue"
    },
    "https://open.spotify.com/user/31edqa7pnsitqcmhhbggm4btw6eu": {
      "rels": [
        "me"
      ]
    },
    "https://www.codingame.com/profile/6d19bbcae1169ee4a1513de917008c405226544": {
      "rels": [
        "me"
      ]
    }
  }
}